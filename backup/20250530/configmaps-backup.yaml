apiVersion: v1
items:
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/name":"argocd-cm","app.kubernetes.io/part-of":"argocd"},"name":"argocd-cm","namespace":"argocd"}}
    creationTimestamp: "2024-11-12T10:14:50Z"
    labels:
      app.kubernetes.io/name: argocd-cm
      app.kubernetes.io/part-of: argocd
    name: argocd-cm
    namespace: argocd
    resourceVersion: "2070"
    uid: d7851f5a-c239-4410-a56a-2938c048295c
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/name":"argocd-cmd-params-cm","app.kubernetes.io/part-of":"argocd"},"name":"argocd-cmd-params-cm","namespace":"argocd"}}
    creationTimestamp: "2024-11-12T10:14:50Z"
    labels:
      app.kubernetes.io/name: argocd-cmd-params-cm
      app.kubernetes.io/part-of: argocd
    name: argocd-cmd-params-cm
    namespace: argocd
    resourceVersion: "2071"
    uid: 4c4ecd4d-ef90-46b9-992a-73405f720508
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/name":"argocd-gpg-keys-cm","app.kubernetes.io/part-of":"argocd"},"name":"argocd-gpg-keys-cm","namespace":"argocd"}}
    creationTimestamp: "2024-11-12T10:14:50Z"
    labels:
      app.kubernetes.io/name: argocd-gpg-keys-cm
      app.kubernetes.io/part-of: argocd
    name: argocd-gpg-keys-cm
    namespace: argocd
    resourceVersion: "2072"
    uid: 4b7f9cbc-224a-4878-9f96-9e08cbcdf59e
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"notifications-controller","app.kubernetes.io/name":"argocd-notifications-controller","app.kubernetes.io/part-of":"argocd"},"name":"argocd-notifications-cm","namespace":"argocd"}}
    creationTimestamp: "2024-11-12T10:14:50Z"
    labels:
      app.kubernetes.io/component: notifications-controller
      app.kubernetes.io/name: argocd-notifications-controller
      app.kubernetes.io/part-of: argocd
    name: argocd-notifications-cm
    namespace: argocd
    resourceVersion: "2073"
    uid: 30d56683-118a-4524-a5e1-11de0771a069
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/name":"argocd-rbac-cm","app.kubernetes.io/part-of":"argocd"},"name":"argocd-rbac-cm","namespace":"argocd"}}
    creationTimestamp: "2024-11-12T10:14:50Z"
    labels:
      app.kubernetes.io/name: argocd-rbac-cm
      app.kubernetes.io/part-of: argocd
    name: argocd-rbac-cm
    namespace: argocd
    resourceVersion: "2074"
    uid: 7bbf1dac-dc51-4282-9677-66c7467b81b9
- apiVersion: v1
  data:
    ssh_known_hosts: |
      # This file was automatically generated by hack/update-ssh-known-hosts.sh. DO NOT EDIT
      [ssh.github.com]:443 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEmKSENjQEezOmxkZMy7opKgwFB9nkt5YRrYMjNuG5N87uRgg6CLrbo5wAdT/y6v0mKV0U2w0WZ2YB/++Tpockg=
      [ssh.github.com]:443 ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOMqqnkVzrm0SdG6UOoqKLsabgH5C9okWi0dh2l9GKJl
      [ssh.github.com]:443 ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCj7ndNxQowgcQnjshcLrqPEiiphnt+VTTvDP6mHBL9j1aNUkY4Ue1gvwnGLVlOhGeYrnZaMgRK6+PKCUXaDbC7qtbW8gIkhL7aGCsOr/C56SJMy/BCZfxd1nWzAOxSDPgVsmerOBYfNqltV9/hWCqBywINIR+5dIg6JTJ72pcEpEjcYgXkE2YEFXV1JHnsKgbLWNlhScqb2UmyRkQyytRLtL+38TGxkxCflmO+5Z8CSSNY7GidjMIZ7Q4zMjA2n1nGrlTDkzwDCsw+wqFPGQA179cnfGWOWRVruj16z6XyvxvjJwbz0wQZ75XK5tKSb7FNyeIEs4TT4jk+S4dhPeAUC5y+bDYirYgM4GC7uEnztnZyaVWQ7B381AK4Qdrwt51ZqExKbQpTUNn+EjqoTwvqNj4kqx5QUCI0ThS/YkOxJCXmPUWZbhjpCg56i+2aB6CmK2JGhn57K5mj0MNdBXA4/WnwH6XoPWJzK5Nyu2zB3nAZp+S5hpQs+p1vN1/wsjk=
      bitbucket.org ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBPIQmuzMBuKdWeF4+a2sjSSpBK0iqitSQ+5BM9KhpexuGt20JpTVM7u5BDZngncgrqDMbWdxMWWOGtZ9UgbqgZE=
      bitbucket.org ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIIazEu89wgQZ4bqs3d63QSMzYVa0MuJ2e2gKTKqu+UUO
      bitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDQeJzhupRu0u0cdegZIa8e86EG2qOCsIsD1Xw0xSeiPDlCr7kq97NLmMbpKTX6Esc30NuoqEEHCuc7yWtwp8dI76EEEB1VqY9QJq6vk+aySyboD5QF61I/1WeTwu+deCbgKMGbUijeXhtfbxSxm6JwGrXrhBdofTsbKRUsrN1WoNgUa8uqN1Vx6WAJw1JHPhglEGGHea6QICwJOAr/6mrui/oB7pkaWKHj3z7d1IC4KWLtY47elvjbaTlkN04Kc/5LFEirorGYVbt15kAUlqGM65pk6ZBxtaO3+30LVlORZkxOh+LKL/BvbZ/iRNhItLqNyieoQj/uh/7Iv4uyH/cV/0b4WDSd3DptigWq84lJubb9t/DnZlrJazxyDCulTmKdOR7vs9gMTo+uoIrPSb8ScTtvw65+odKAlBj59dhnVp9zd7QUojOpXlL62Aw56U4oO+FALuevvMjiWeavKhJqlR7i5n9srYcrNV7ttmDw7kf/97P5zauIhxcjX+xHv4M=
      github.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEmKSENjQEezOmxkZMy7opKgwFB9nkt5YRrYMjNuG5N87uRgg6CLrbo5wAdT/y6v0mKV0U2w0WZ2YB/++Tpockg=
      github.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOMqqnkVzrm0SdG6UOoqKLsabgH5C9okWi0dh2l9GKJl
      github.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCj7ndNxQowgcQnjshcLrqPEiiphnt+VTTvDP6mHBL9j1aNUkY4Ue1gvwnGLVlOhGeYrnZaMgRK6+PKCUXaDbC7qtbW8gIkhL7aGCsOr/C56SJMy/BCZfxd1nWzAOxSDPgVsmerOBYfNqltV9/hWCqBywINIR+5dIg6JTJ72pcEpEjcYgXkE2YEFXV1JHnsKgbLWNlhScqb2UmyRkQyytRLtL+38TGxkxCflmO+5Z8CSSNY7GidjMIZ7Q4zMjA2n1nGrlTDkzwDCsw+wqFPGQA179cnfGWOWRVruj16z6XyvxvjJwbz0wQZ75XK5tKSb7FNyeIEs4TT4jk+S4dhPeAUC5y+bDYirYgM4GC7uEnztnZyaVWQ7B381AK4Qdrwt51ZqExKbQpTUNn+EjqoTwvqNj4kqx5QUCI0ThS/YkOxJCXmPUWZbhjpCg56i+2aB6CmK2JGhn57K5mj0MNdBXA4/WnwH6XoPWJzK5Nyu2zB3nAZp+S5hpQs+p1vN1/wsjk=
      gitlab.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBFSMqzJeV9rUzU4kWitGjeR4PWSa29SPqJ1fVkhtj3Hw9xjLVXVYrU9QlYWrOLXBpQ6KWjbjTDTdDkoohFzgbEY=
      gitlab.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAfuCHKVTjquxvt6CM6tdG4SLp1Btn/nOeHHE5UOzRdf
      gitlab.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCsj2bNKTBSpIYDEGk9KxsGh3mySTRgMtXL583qmBpzeQ+jqCMRgBqB98u3z++J1sKlXHWfM9dyhSevkMwSbhoR8XIq/U0tCNyokEi/ueaBMCvbcTHhO7FcwzY92WK4Yt0aGROY5qX2UKSeOvuP4D6TPqKF1onrSzH9bx9XUf2lEdWT/ia1NEKjunUqu1xOB/StKDHMoX4/OKyIzuS0q/T1zOATthvasJFoPrAjkohTyaDUz2LN5JoH839hViyEG82yB+MjcFV5MU3N1l1QL3cVUCh93xSaua1N85qivl+siMkPGbO5xR/En4iEY6K2XPASUEMaieWVNTRCtJ4S8H+9
      ssh.dev.azure.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H
      vs-ssh.visualstudio.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"ssh_known_hosts":"# This file was automatically generated by hack/update-ssh-known-hosts.sh. DO NOT EDIT\n[ssh.github.com]:443 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEmKSENjQEezOmxkZMy7opKgwFB9nkt5YRrYMjNuG5N87uRgg6CLrbo5wAdT/y6v0mKV0U2w0WZ2YB/++Tpockg=\n[ssh.github.com]:443 ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOMqqnkVzrm0SdG6UOoqKLsabgH5C9okWi0dh2l9GKJl\n[ssh.github.com]:443 ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCj7ndNxQowgcQnjshcLrqPEiiphnt+VTTvDP6mHBL9j1aNUkY4Ue1gvwnGLVlOhGeYrnZaMgRK6+PKCUXaDbC7qtbW8gIkhL7aGCsOr/C56SJMy/BCZfxd1nWzAOxSDPgVsmerOBYfNqltV9/hWCqBywINIR+5dIg6JTJ72pcEpEjcYgXkE2YEFXV1JHnsKgbLWNlhScqb2UmyRkQyytRLtL+38TGxkxCflmO+5Z8CSSNY7GidjMIZ7Q4zMjA2n1nGrlTDkzwDCsw+wqFPGQA179cnfGWOWRVruj16z6XyvxvjJwbz0wQZ75XK5tKSb7FNyeIEs4TT4jk+S4dhPeAUC5y+bDYirYgM4GC7uEnztnZyaVWQ7B381AK4Qdrwt51ZqExKbQpTUNn+EjqoTwvqNj4kqx5QUCI0ThS/YkOxJCXmPUWZbhjpCg56i+2aB6CmK2JGhn57K5mj0MNdBXA4/WnwH6XoPWJzK5Nyu2zB3nAZp+S5hpQs+p1vN1/wsjk=\nbitbucket.org ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBPIQmuzMBuKdWeF4+a2sjSSpBK0iqitSQ+5BM9KhpexuGt20JpTVM7u5BDZngncgrqDMbWdxMWWOGtZ9UgbqgZE=\nbitbucket.org ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIIazEu89wgQZ4bqs3d63QSMzYVa0MuJ2e2gKTKqu+UUO\nbitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDQeJzhupRu0u0cdegZIa8e86EG2qOCsIsD1Xw0xSeiPDlCr7kq97NLmMbpKTX6Esc30NuoqEEHCuc7yWtwp8dI76EEEB1VqY9QJq6vk+aySyboD5QF61I/1WeTwu+deCbgKMGbUijeXhtfbxSxm6JwGrXrhBdofTsbKRUsrN1WoNgUa8uqN1Vx6WAJw1JHPhglEGGHea6QICwJOAr/6mrui/oB7pkaWKHj3z7d1IC4KWLtY47elvjbaTlkN04Kc/5LFEirorGYVbt15kAUlqGM65pk6ZBxtaO3+30LVlORZkxOh+LKL/BvbZ/iRNhItLqNyieoQj/uh/7Iv4uyH/cV/0b4WDSd3DptigWq84lJubb9t/DnZlrJazxyDCulTmKdOR7vs9gMTo+uoIrPSb8ScTtvw65+odKAlBj59dhnVp9zd7QUojOpXlL62Aw56U4oO+FALuevvMjiWeavKhJqlR7i5n9srYcrNV7ttmDw7kf/97P5zauIhxcjX+xHv4M=\ngithub.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEmKSENjQEezOmxkZMy7opKgwFB9nkt5YRrYMjNuG5N87uRgg6CLrbo5wAdT/y6v0mKV0U2w0WZ2YB/++Tpockg=\ngithub.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOMqqnkVzrm0SdG6UOoqKLsabgH5C9okWi0dh2l9GKJl\ngithub.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCj7ndNxQowgcQnjshcLrqPEiiphnt+VTTvDP6mHBL9j1aNUkY4Ue1gvwnGLVlOhGeYrnZaMgRK6+PKCUXaDbC7qtbW8gIkhL7aGCsOr/C56SJMy/BCZfxd1nWzAOxSDPgVsmerOBYfNqltV9/hWCqBywINIR+5dIg6JTJ72pcEpEjcYgXkE2YEFXV1JHnsKgbLWNlhScqb2UmyRkQyytRLtL+38TGxkxCflmO+5Z8CSSNY7GidjMIZ7Q4zMjA2n1nGrlTDkzwDCsw+wqFPGQA179cnfGWOWRVruj16z6XyvxvjJwbz0wQZ75XK5tKSb7FNyeIEs4TT4jk+S4dhPeAUC5y+bDYirYgM4GC7uEnztnZyaVWQ7B381AK4Qdrwt51ZqExKbQpTUNn+EjqoTwvqNj4kqx5QUCI0ThS/YkOxJCXmPUWZbhjpCg56i+2aB6CmK2JGhn57K5mj0MNdBXA4/WnwH6XoPWJzK5Nyu2zB3nAZp+S5hpQs+p1vN1/wsjk=\ngitlab.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBFSMqzJeV9rUzU4kWitGjeR4PWSa29SPqJ1fVkhtj3Hw9xjLVXVYrU9QlYWrOLXBpQ6KWjbjTDTdDkoohFzgbEY=\ngitlab.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAfuCHKVTjquxvt6CM6tdG4SLp1Btn/nOeHHE5UOzRdf\ngitlab.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCsj2bNKTBSpIYDEGk9KxsGh3mySTRgMtXL583qmBpzeQ+jqCMRgBqB98u3z++J1sKlXHWfM9dyhSevkMwSbhoR8XIq/U0tCNyokEi/ueaBMCvbcTHhO7FcwzY92WK4Yt0aGROY5qX2UKSeOvuP4D6TPqKF1onrSzH9bx9XUf2lEdWT/ia1NEKjunUqu1xOB/StKDHMoX4/OKyIzuS0q/T1zOATthvasJFoPrAjkohTyaDUz2LN5JoH839hViyEG82yB+MjcFV5MU3N1l1QL3cVUCh93xSaua1N85qivl+siMkPGbO5xR/En4iEY6K2XPASUEMaieWVNTRCtJ4S8H+9\nssh.dev.azure.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H\nvs-ssh.visualstudio.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H\n"},"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/name":"argocd-ssh-known-hosts-cm","app.kubernetes.io/part-of":"argocd"},"name":"argocd-ssh-known-hosts-cm","namespace":"argocd"}}
    creationTimestamp: "2024-11-12T10:14:50Z"
    labels:
      app.kubernetes.io/name: argocd-ssh-known-hosts-cm
      app.kubernetes.io/part-of: argocd
    name: argocd-ssh-known-hosts-cm
    namespace: argocd
    resourceVersion: "2075"
    uid: ceb8db0e-f6f1-4e99-855c-44087678bc17
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/name":"argocd-tls-certs-cm","app.kubernetes.io/part-of":"argocd"},"name":"argocd-tls-certs-cm","namespace":"argocd"}}
    creationTimestamp: "2024-11-12T10:14:50Z"
    labels:
      app.kubernetes.io/name: argocd-tls-certs-cm
      app.kubernetes.io/part-of: argocd
    name: argocd-tls-certs-cm
    namespace: argocd
    resourceVersion: "2077"
    uid: 42e88f5b-3441-434a-b490-8d57db799048
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIDBTCCAe2gAwIBAgIIICDkzy3Yn38wDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE
      AxMKa3ViZXJuZXRlczAeFw0yNDExMTIxMDAzMThaFw0zNDExMTAxMDA4MThaMBUx
      EzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
      AoIBAQD3qrsFOcZRTmdJ2ajpsN+M2JJbqluLNcCKdKDSR8UjLurwMft775xZfXS8
      O80gmPDusXbSXS1vlRHV9DQH12fAGKUDWMJLOj7lkDyGwbBTCvJtL6y+4XlMHCDt
      hvNxH9a6b6cC1O+mHbOYkWmrCltcA8FbHFMmpX9LPFgP5+L4eiCQY4aCbJqZJ2aP
      9sj9DVQfhasGF31hQhXsYygk0bcOsgUq/zkIqPRWHTQetRPlk0Q9Sbli6AQ3cmil
      8sNCGYmrhtwaVsZauHIV1ue9KC0vOpLJ/4uEXjpBiYaVf4zHe0i2DshQiQ7yeX+M
      HukPrWZN84XAnwIxUrRkmr1i6sPvAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP
      BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBQliZ1HZFlvAe+NSYoGEPLseiqCWzAV
      BgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQDIHTLjCwzG
      /JLkJx2M31isIosHQv78GyLXekYRYLW/edTEjZ8/PKqWbxZtOG44ULUP8yLU/Wg6
      FpFiqsP0JqMpAruOvR8UlJXax5K6KEO5AD3Nmp+DvRQVlKt316GoIcbCd7FQDZxD
      yH8uRWnfTGYHPOC7tcyUvcxQlK6ng22lTfRmdX9NerUJ860VaxGKhiusi6zHhNBi
      2cFBfrCRSCzu6HHmXitDLYyNIKP2KiiZwRmmoSYg6pgDvNHx0e63pY6ULE4gGiRD
      ZWs+kgjjjtaEOcXW4HOK1B47E0RcM56/EgMO2Hg9QAPQnwfx/AI7LC937SqBej27
      ld0gkDlez21X
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    annotations:
      kubernetes.io/description: Contains a CA bundle that can be used to verify the
        kube-apiserver when using internal endpoints such as the internal service
        IP or kubernetes.default.svc. No other usage is guaranteed across distributions
        of Kubernetes clusters.
    creationTimestamp: "2024-11-12T10:14:48Z"
    name: kube-root-ca.crt
    namespace: argocd
    resourceVersion: "2035"
    uid: 1161ad73-a61e-41f6-876c-0a8652da2fc8
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":null,"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app":"cert-manager","app.kubernetes.io/component":"controller","app.kubernetes.io/instance":"cert-manager","app.kubernetes.io/name":"cert-manager","app.kubernetes.io/version":"1.15.3"},"name":"cert-manager","namespace":"cert-manager"}}
    creationTimestamp: "2025-05-29T15:06:17Z"
    labels:
      app: cert-manager
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/version: 1.15.3
    name: cert-manager
    namespace: cert-manager
    resourceVersion: "32926180"
    uid: 365707b9-6ae4-4ce2-8f40-013709dfa166
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":null,"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app":"webhook","app.kubernetes.io/component":"webhook","app.kubernetes.io/instance":"cert-manager","app.kubernetes.io/name":"webhook","app.kubernetes.io/version":"1.15.3"},"name":"cert-manager-webhook","namespace":"cert-manager"}}
    creationTimestamp: "2025-05-29T15:06:17Z"
    labels:
      app: webhook
      app.kubernetes.io/component: webhook
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/name: webhook
      app.kubernetes.io/version: 1.15.3
    name: cert-manager-webhook
    namespace: cert-manager
    resourceVersion: "32926181"
    uid: d1cb5fb3-d06e-40ac-9c0e-dbfb733f1cb4
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIDBTCCAe2gAwIBAgIIICDkzy3Yn38wDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE
      AxMKa3ViZXJuZXRlczAeFw0yNDExMTIxMDAzMThaFw0zNDExMTAxMDA4MThaMBUx
      EzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
      AoIBAQD3qrsFOcZRTmdJ2ajpsN+M2JJbqluLNcCKdKDSR8UjLurwMft775xZfXS8
      O80gmPDusXbSXS1vlRHV9DQH12fAGKUDWMJLOj7lkDyGwbBTCvJtL6y+4XlMHCDt
      hvNxH9a6b6cC1O+mHbOYkWmrCltcA8FbHFMmpX9LPFgP5+L4eiCQY4aCbJqZJ2aP
      9sj9DVQfhasGF31hQhXsYygk0bcOsgUq/zkIqPRWHTQetRPlk0Q9Sbli6AQ3cmil
      8sNCGYmrhtwaVsZauHIV1ue9KC0vOpLJ/4uEXjpBiYaVf4zHe0i2DshQiQ7yeX+M
      HukPrWZN84XAnwIxUrRkmr1i6sPvAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP
      BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBQliZ1HZFlvAe+NSYoGEPLseiqCWzAV
      BgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQDIHTLjCwzG
      /JLkJx2M31isIosHQv78GyLXekYRYLW/edTEjZ8/PKqWbxZtOG44ULUP8yLU/Wg6
      FpFiqsP0JqMpAruOvR8UlJXax5K6KEO5AD3Nmp+DvRQVlKt316GoIcbCd7FQDZxD
      yH8uRWnfTGYHPOC7tcyUvcxQlK6ng22lTfRmdX9NerUJ860VaxGKhiusi6zHhNBi
      2cFBfrCRSCzu6HHmXitDLYyNIKP2KiiZwRmmoSYg6pgDvNHx0e63pY6ULE4gGiRD
      ZWs+kgjjjtaEOcXW4HOK1B47E0RcM56/EgMO2Hg9QAPQnwfx/AI7LC937SqBej27
      ld0gkDlez21X
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    annotations:
      kubernetes.io/description: Contains a CA bundle that can be used to verify the
        kube-apiserver when using internal endpoints such as the internal service
        IP or kubernetes.default.svc. No other usage is guaranteed across distributions
        of Kubernetes clusters.
    creationTimestamp: "2025-05-29T15:06:17Z"
    name: kube-root-ca.crt
    namespace: cert-manager
    resourceVersion: "32926175"
    uid: 81bfdc75-d7ee-4499-ac58-bf454758114f
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIDBTCCAe2gAwIBAgIIICDkzy3Yn38wDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE
      AxMKa3ViZXJuZXRlczAeFw0yNDExMTIxMDAzMThaFw0zNDExMTAxMDA4MThaMBUx
      EzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
      AoIBAQD3qrsFOcZRTmdJ2ajpsN+M2JJbqluLNcCKdKDSR8UjLurwMft775xZfXS8
      O80gmPDusXbSXS1vlRHV9DQH12fAGKUDWMJLOj7lkDyGwbBTCvJtL6y+4XlMHCDt
      hvNxH9a6b6cC1O+mHbOYkWmrCltcA8FbHFMmpX9LPFgP5+L4eiCQY4aCbJqZJ2aP
      9sj9DVQfhasGF31hQhXsYygk0bcOsgUq/zkIqPRWHTQetRPlk0Q9Sbli6AQ3cmil
      8sNCGYmrhtwaVsZauHIV1ue9KC0vOpLJ/4uEXjpBiYaVf4zHe0i2DshQiQ7yeX+M
      HukPrWZN84XAnwIxUrRkmr1i6sPvAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP
      BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBQliZ1HZFlvAe+NSYoGEPLseiqCWzAV
      BgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQDIHTLjCwzG
      /JLkJx2M31isIosHQv78GyLXekYRYLW/edTEjZ8/PKqWbxZtOG44ULUP8yLU/Wg6
      FpFiqsP0JqMpAruOvR8UlJXax5K6KEO5AD3Nmp+DvRQVlKt316GoIcbCd7FQDZxD
      yH8uRWnfTGYHPOC7tcyUvcxQlK6ng22lTfRmdX9NerUJ860VaxGKhiusi6zHhNBi
      2cFBfrCRSCzu6HHmXitDLYyNIKP2KiiZwRmmoSYg6pgDvNHx0e63pY6ULE4gGiRD
      ZWs+kgjjjtaEOcXW4HOK1B47E0RcM56/EgMO2Hg9QAPQnwfx/AI7LC937SqBej27
      ld0gkDlez21X
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    annotations:
      kubernetes.io/description: Contains a CA bundle that can be used to verify the
        kube-apiserver when using internal endpoints such as the internal service
        IP or kubernetes.default.svc. No other usage is guaranteed across distributions
        of Kubernetes clusters.
    creationTimestamp: "2024-11-12T10:10:35Z"
    name: kube-root-ca.crt
    namespace: default
    resourceVersion: "297"
    uid: fccfb246-25f2-4f88-9f4c-db897b71c5f2
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/name":"ingress-nginx","app.kubernetes.io/part-of":"ingress-nginx"},"name":"ingress-nginx","namespace":"ingress-nginx"}}
    creationTimestamp: "2024-11-12T10:13:31Z"
    labels:
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/part-of: ingress-nginx
    name: ingress-nginx
    namespace: ingress-nginx
    resourceVersion: "1165"
    uid: f41080fa-4b26-4cd7-b04f-2284e10cda40
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIDBTCCAe2gAwIBAgIIICDkzy3Yn38wDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE
      AxMKa3ViZXJuZXRlczAeFw0yNDExMTIxMDAzMThaFw0zNDExMTAxMDA4MThaMBUx
      EzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
      AoIBAQD3qrsFOcZRTmdJ2ajpsN+M2JJbqluLNcCKdKDSR8UjLurwMft775xZfXS8
      O80gmPDusXbSXS1vlRHV9DQH12fAGKUDWMJLOj7lkDyGwbBTCvJtL6y+4XlMHCDt
      hvNxH9a6b6cC1O+mHbOYkWmrCltcA8FbHFMmpX9LPFgP5+L4eiCQY4aCbJqZJ2aP
      9sj9DVQfhasGF31hQhXsYygk0bcOsgUq/zkIqPRWHTQetRPlk0Q9Sbli6AQ3cmil
      8sNCGYmrhtwaVsZauHIV1ue9KC0vOpLJ/4uEXjpBiYaVf4zHe0i2DshQiQ7yeX+M
      HukPrWZN84XAnwIxUrRkmr1i6sPvAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP
      BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBQliZ1HZFlvAe+NSYoGEPLseiqCWzAV
      BgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQDIHTLjCwzG
      /JLkJx2M31isIosHQv78GyLXekYRYLW/edTEjZ8/PKqWbxZtOG44ULUP8yLU/Wg6
      FpFiqsP0JqMpAruOvR8UlJXax5K6KEO5AD3Nmp+DvRQVlKt316GoIcbCd7FQDZxD
      yH8uRWnfTGYHPOC7tcyUvcxQlK6ng22lTfRmdX9NerUJ860VaxGKhiusi6zHhNBi
      2cFBfrCRSCzu6HHmXitDLYyNIKP2KiiZwRmmoSYg6pgDvNHx0e63pY6ULE4gGiRD
      ZWs+kgjjjtaEOcXW4HOK1B47E0RcM56/EgMO2Hg9QAPQnwfx/AI7LC937SqBej27
      ld0gkDlez21X
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    annotations:
      kubernetes.io/description: Contains a CA bundle that can be used to verify the
        kube-apiserver when using internal endpoints such as the internal service
        IP or kubernetes.default.svc. No other usage is guaranteed across distributions
        of Kubernetes clusters.
    creationTimestamp: "2024-11-12T10:13:31Z"
    name: kube-root-ca.crt
    namespace: ingress-nginx
    resourceVersion: "1161"
    uid: a9640735-385c-436d-8b2f-b5a53852634c
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/name":"ingress-nginx","app.kubernetes.io/part-of":"ingress-nginx"},"name":"tcp-services","namespace":"ingress-nginx"}}
    creationTimestamp: "2024-11-29T08:40:05Z"
    labels:
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/part-of: ingress-nginx
    name: tcp-services
    namespace: ingress-nginx
    resourceVersion: "6846626"
    uid: 5f9ed9e9-4cf6-4aaa-8a7f-8d0df76f12a8
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/name":"ingress-nginx","app.kubernetes.io/part-of":"ingress-nginx"},"name":"udp-services","namespace":"ingress-nginx"}}
    creationTimestamp: "2024-11-12T10:13:32Z"
    labels:
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/part-of: ingress-nginx
    name: udp-services
    namespace: ingress-nginx
    resourceVersion: "1167"
    uid: c8c52367-1da8-449c-90dc-d9263e2299a4
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIDBTCCAe2gAwIBAgIIICDkzy3Yn38wDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE
      AxMKa3ViZXJuZXRlczAeFw0yNDExMTIxMDAzMThaFw0zNDExMTAxMDA4MThaMBUx
      EzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
      AoIBAQD3qrsFOcZRTmdJ2ajpsN+M2JJbqluLNcCKdKDSR8UjLurwMft775xZfXS8
      O80gmPDusXbSXS1vlRHV9DQH12fAGKUDWMJLOj7lkDyGwbBTCvJtL6y+4XlMHCDt
      hvNxH9a6b6cC1O+mHbOYkWmrCltcA8FbHFMmpX9LPFgP5+L4eiCQY4aCbJqZJ2aP
      9sj9DVQfhasGF31hQhXsYygk0bcOsgUq/zkIqPRWHTQetRPlk0Q9Sbli6AQ3cmil
      8sNCGYmrhtwaVsZauHIV1ue9KC0vOpLJ/4uEXjpBiYaVf4zHe0i2DshQiQ7yeX+M
      HukPrWZN84XAnwIxUrRkmr1i6sPvAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP
      BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBQliZ1HZFlvAe+NSYoGEPLseiqCWzAV
      BgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQDIHTLjCwzG
      /JLkJx2M31isIosHQv78GyLXekYRYLW/edTEjZ8/PKqWbxZtOG44ULUP8yLU/Wg6
      FpFiqsP0JqMpAruOvR8UlJXax5K6KEO5AD3Nmp+DvRQVlKt316GoIcbCd7FQDZxD
      yH8uRWnfTGYHPOC7tcyUvcxQlK6ng22lTfRmdX9NerUJ860VaxGKhiusi6zHhNBi
      2cFBfrCRSCzu6HHmXitDLYyNIKP2KiiZwRmmoSYg6pgDvNHx0e63pY6ULE4gGiRD
      ZWs+kgjjjtaEOcXW4HOK1B47E0RcM56/EgMO2Hg9QAPQnwfx/AI7LC937SqBej27
      ld0gkDlez21X
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    annotations:
      kubernetes.io/description: Contains a CA bundle that can be used to verify the
        kube-apiserver when using internal endpoints such as the internal service
        IP or kubernetes.default.svc. No other usage is guaranteed across distributions
        of Kubernetes clusters.
    creationTimestamp: "2024-11-29T08:40:05Z"
    name: kube-root-ca.crt
    namespace: iredmail-server
    resourceVersion: "3925179"
    uid: f5bd7133-82a2-4910-9403-240a807d369d
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIDBTCCAe2gAwIBAgIIICDkzy3Yn38wDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE
      AxMKa3ViZXJuZXRlczAeFw0yNDExMTIxMDAzMThaFw0zNDExMTAxMDA4MThaMBUx
      EzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
      AoIBAQD3qrsFOcZRTmdJ2ajpsN+M2JJbqluLNcCKdKDSR8UjLurwMft775xZfXS8
      O80gmPDusXbSXS1vlRHV9DQH12fAGKUDWMJLOj7lkDyGwbBTCvJtL6y+4XlMHCDt
      hvNxH9a6b6cC1O+mHbOYkWmrCltcA8FbHFMmpX9LPFgP5+L4eiCQY4aCbJqZJ2aP
      9sj9DVQfhasGF31hQhXsYygk0bcOsgUq/zkIqPRWHTQetRPlk0Q9Sbli6AQ3cmil
      8sNCGYmrhtwaVsZauHIV1ue9KC0vOpLJ/4uEXjpBiYaVf4zHe0i2DshQiQ7yeX+M
      HukPrWZN84XAnwIxUrRkmr1i6sPvAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP
      BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBQliZ1HZFlvAe+NSYoGEPLseiqCWzAV
      BgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQDIHTLjCwzG
      /JLkJx2M31isIosHQv78GyLXekYRYLW/edTEjZ8/PKqWbxZtOG44ULUP8yLU/Wg6
      FpFiqsP0JqMpAruOvR8UlJXax5K6KEO5AD3Nmp+DvRQVlKt316GoIcbCd7FQDZxD
      yH8uRWnfTGYHPOC7tcyUvcxQlK6ng22lTfRmdX9NerUJ860VaxGKhiusi6zHhNBi
      2cFBfrCRSCzu6HHmXitDLYyNIKP2KiiZwRmmoSYg6pgDvNHx0e63pY6ULE4gGiRD
      ZWs+kgjjjtaEOcXW4HOK1B47E0RcM56/EgMO2Hg9QAPQnwfx/AI7LC937SqBej27
      ld0gkDlez21X
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    annotations:
      kubernetes.io/description: Contains a CA bundle that can be used to verify the
        kube-apiserver when using internal endpoints such as the internal service
        IP or kubernetes.default.svc. No other usage is guaranteed across distributions
        of Kubernetes clusters.
    creationTimestamp: "2024-11-14T13:23:20Z"
    name: kube-root-ca.crt
    namespace: kube-dashboard
    resourceVersion: "491228"
    uid: c6ccdfac-b932-4bdb-a8d4-ee4ef3d93433
- apiVersion: v1
  data:
    _global: '{"clusterName":"kube-dev","itemsPerPage":10,"labelsLimit":3,"logsAutoRefreshTimeInterval":5,"resourceAutoRefreshTimeInterval":5,"disableAccessDeniedNotifications":false,"defaultNamespace":"default","namespaceFallbackList":["default"]}'
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"ConfigMap","metadata":{"annotations":{},"labels":{"k8s-app":"kubernetes-dashboard"},"name":"kubernetes-dashboard-settings","namespace":"kube-dashboard"}}
    creationTimestamp: "2024-11-14T13:23:20Z"
    labels:
      k8s-app: kubernetes-dashboard
    name: kubernetes-dashboard-settings
    namespace: kube-dashboard
    resourceVersion: "1844763"
    uid: 45087922-557b-4c54-92d9-3b91656a8f4e
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIDBTCCAe2gAwIBAgIIICDkzy3Yn38wDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE
      AxMKa3ViZXJuZXRlczAeFw0yNDExMTIxMDAzMThaFw0zNDExMTAxMDA4MThaMBUx
      EzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
      AoIBAQD3qrsFOcZRTmdJ2ajpsN+M2JJbqluLNcCKdKDSR8UjLurwMft775xZfXS8
      O80gmPDusXbSXS1vlRHV9DQH12fAGKUDWMJLOj7lkDyGwbBTCvJtL6y+4XlMHCDt
      hvNxH9a6b6cC1O+mHbOYkWmrCltcA8FbHFMmpX9LPFgP5+L4eiCQY4aCbJqZJ2aP
      9sj9DVQfhasGF31hQhXsYygk0bcOsgUq/zkIqPRWHTQetRPlk0Q9Sbli6AQ3cmil
      8sNCGYmrhtwaVsZauHIV1ue9KC0vOpLJ/4uEXjpBiYaVf4zHe0i2DshQiQ7yeX+M
      HukPrWZN84XAnwIxUrRkmr1i6sPvAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP
      BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBQliZ1HZFlvAe+NSYoGEPLseiqCWzAV
      BgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQDIHTLjCwzG
      /JLkJx2M31isIosHQv78GyLXekYRYLW/edTEjZ8/PKqWbxZtOG44ULUP8yLU/Wg6
      FpFiqsP0JqMpAruOvR8UlJXax5K6KEO5AD3Nmp+DvRQVlKt316GoIcbCd7FQDZxD
      yH8uRWnfTGYHPOC7tcyUvcxQlK6ng22lTfRmdX9NerUJ860VaxGKhiusi6zHhNBi
      2cFBfrCRSCzu6HHmXitDLYyNIKP2KiiZwRmmoSYg6pgDvNHx0e63pY6ULE4gGiRD
      ZWs+kgjjjtaEOcXW4HOK1B47E0RcM56/EgMO2Hg9QAPQnwfx/AI7LC937SqBej27
      ld0gkDlez21X
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    annotations:
      kubernetes.io/description: Contains a CA bundle that can be used to verify the
        kube-apiserver when using internal endpoints such as the internal service
        IP or kubernetes.default.svc. No other usage is guaranteed across distributions
        of Kubernetes clusters.
    creationTimestamp: "2024-11-12T10:10:35Z"
    name: kube-root-ca.crt
    namespace: kube-node-lease
    resourceVersion: "298"
    uid: 87b61e20-e870-4b8d-9ec6-dc78ad84d165
- apiVersion: v1
  data:
    jws-kubeconfig-1rskbv: eyJhbGciOiJIUzI1NiIsImtpZCI6IjFyc2tidiJ9..o5O7DOyyxh9gwZxz_eMjyabooQIykzSMdniicD8H2gg
    jws-kubeconfig-677f8c: eyJhbGciOiJIUzI1NiIsImtpZCI6IjY3N2Y4YyJ9..AayhqcpcF9e8ux9q779bhi63KWMTcN4dYC25b_goWxI
    jws-kubeconfig-e1nx5c: eyJhbGciOiJIUzI1NiIsImtpZCI6ImUxbng1YyJ9..dYJV2mg6qzrgdxW54ZYC1E3iJyCs4VAmDQEfhMQafbw
    jws-kubeconfig-g85576: eyJhbGciOiJIUzI1NiIsImtpZCI6Imc4NTU3NiJ9..ceUNUFvwbP8Hzy9X4h2pvsYAC1VmPacO56Sv3y5jC9w
    jws-kubeconfig-i7ywx6: eyJhbGciOiJIUzI1NiIsImtpZCI6Imk3eXd4NiJ9..fmTuff12Yq--V2dMs2ZUfCsq1GkcdOhdFlZxcOU_fzw
    jws-kubeconfig-jmx455: eyJhbGciOiJIUzI1NiIsImtpZCI6ImpteDQ1NSJ9..lARdnuogQtJgUyI9_P20qUNuFT0ipqPs9ET1yNK7bYM
    jws-kubeconfig-ldiq2e: eyJhbGciOiJIUzI1NiIsImtpZCI6ImxkaXEyZSJ9..ns9hC8V6EwiBrP83uh-deHybc0J3WfvkxH5O_vWHDXg
    jws-kubeconfig-lic7wa: eyJhbGciOiJIUzI1NiIsImtpZCI6ImxpYzd3YSJ9..YZQM8c5OiQVs4H3VHNuP9KspcFPlbIvAqYuciARXUTI
    jws-kubeconfig-olkepp: eyJhbGciOiJIUzI1NiIsImtpZCI6Im9sa2VwcCJ9..lmG2crz4bis0o2DObrmS_eMdlD3sFtOtagBSIvCLPa4
    jws-kubeconfig-p0dwzp: eyJhbGciOiJIUzI1NiIsImtpZCI6InAwZHd6cCJ9..7IF8oOCagAEhSjP1TogMyvSWvXyTK1bF1qR0lkgtRpE
    jws-kubeconfig-pffvji: eyJhbGciOiJIUzI1NiIsImtpZCI6InBmZnZqaSJ9..WFXDiTKBKRFyPQHuFuwoCF_SMi5Fa42Fp2PAzvDRCvQ
    jws-kubeconfig-ui26z3: eyJhbGciOiJIUzI1NiIsImtpZCI6InVpMjZ6MyJ9..Z0d1ZIGJLPePmwJ-43i0Oq9MmZsBNmBlFkL-AkcMcrc
    jws-kubeconfig-xfdkai: eyJhbGciOiJIUzI1NiIsImtpZCI6InhmZGthaSJ9..mnqMZtDa1YrYcow-Br8TGA35_VsHgy9F3Q0oFVo3sfY
    jws-kubeconfig-z652q6: eyJhbGciOiJIUzI1NiIsImtpZCI6Ino2NTJxNiJ9..CQp8qUn1L5WrMXujtI9xiQTQmRLsxI13nEGcQl2wrPE
    kubeconfig: |
      apiVersion: v1
      clusters:
      - cluster:
          certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJSUNEa3p5M1luMzh3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TkRFeE1USXhNREF6TVRoYUZ3MHpOREV4TVRBeE1EQTRNVGhhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUQzcXJzRk9jWlJUbWRKMmFqcHNOK00ySkpicWx1TE5jQ0tkS0RTUjhVakx1cndNZnQ3NzV4WmZYUzgKTzgwZ21QRHVzWGJTWFMxdmxSSFY5RFFIMTJmQUdLVURXTUpMT2o3bGtEeUd3YkJUQ3ZKdEw2eSs0WGxNSENEdApodk54SDlhNmI2Y0MxTyttSGJPWWtXbXJDbHRjQThGYkhGTW1wWDlMUEZnUDUrTDRlaUNRWTRhQ2JKcVpKMmFQCjlzajlEVlFmaGFzR0YzMWhRaFhzWXlnazBiY09zZ1VxL3prSXFQUldIVFFldFJQbGswUTlTYmxpNkFRM2NtaWwKOHNOQ0dZbXJodHdhVnNaYXVISVYxdWU5S0Mwdk9wTEovNHVFWGpwQmlZYVZmNHpIZTBpMkRzaFFpUTd5ZVgrTQpIdWtQcldaTjg0WEFud0l4VXJSa21yMWk2c1B2QWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJRbGlaMUhaRmx2QWUrTlNZb0dFUExzZWlxQ1d6QVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRRElIVExqQ3d6RwovSkxrSngyTTMxaXNJb3NIUXY3OEd5TFhla1lSWUxXL2VkVEVqWjgvUEtxV2J4WnRPRzQ0VUxVUDh5TFUvV2c2CkZwRmlxc1AwSnFNcEFydU92UjhVbEpYYXg1SzZLRU81QUQzTm1wK0R2UlFWbEt0MzE2R29JY2JDZDdGUURaeEQKeUg4dVJXbmZUR1lIUE9DN3RjeVV2Y3hRbEs2bmcyMmxUZlJtZFg5TmVyVUo4NjBWYXhHS2hpdXNpNnpIaE5CaQoyY0ZCZnJDUlNDenU2SEhtWGl0RExZeU5JS1AyS2lpWndSbW1vU1lnNnBnRHZOSHgwZTYzcFk2VUxFNGdHaVJEClpXcytrZ2pqanRhRU9jWFc0SE9LMUI0N0UwUmNNNTYvRWdNTzJIZzlRQVBRbndmeC9BSTdMQzkzN1NxQmVqMjcKbGQwZ2tEbGV6MjFYCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
          server: https://172.20.0.71:6443
        name: ""
      contexts: null
      current-context: ""
      kind: Config
      preferences: {}
      users: null
  kind: ConfigMap
  metadata:
    creationTimestamp: "2024-11-12T10:10:28Z"
    name: cluster-info
    namespace: kube-public
    resourceVersion: "32925549"
    uid: 17039e29-039b-4bd8-85c3-565c8915ff5b
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIDBTCCAe2gAwIBAgIIICDkzy3Yn38wDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE
      AxMKa3ViZXJuZXRlczAeFw0yNDExMTIxMDAzMThaFw0zNDExMTAxMDA4MThaMBUx
      EzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
      AoIBAQD3qrsFOcZRTmdJ2ajpsN+M2JJbqluLNcCKdKDSR8UjLurwMft775xZfXS8
      O80gmPDusXbSXS1vlRHV9DQH12fAGKUDWMJLOj7lkDyGwbBTCvJtL6y+4XlMHCDt
      hvNxH9a6b6cC1O+mHbOYkWmrCltcA8FbHFMmpX9LPFgP5+L4eiCQY4aCbJqZJ2aP
      9sj9DVQfhasGF31hQhXsYygk0bcOsgUq/zkIqPRWHTQetRPlk0Q9Sbli6AQ3cmil
      8sNCGYmrhtwaVsZauHIV1ue9KC0vOpLJ/4uEXjpBiYaVf4zHe0i2DshQiQ7yeX+M
      HukPrWZN84XAnwIxUrRkmr1i6sPvAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP
      BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBQliZ1HZFlvAe+NSYoGEPLseiqCWzAV
      BgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQDIHTLjCwzG
      /JLkJx2M31isIosHQv78GyLXekYRYLW/edTEjZ8/PKqWbxZtOG44ULUP8yLU/Wg6
      FpFiqsP0JqMpAruOvR8UlJXax5K6KEO5AD3Nmp+DvRQVlKt316GoIcbCd7FQDZxD
      yH8uRWnfTGYHPOC7tcyUvcxQlK6ng22lTfRmdX9NerUJ860VaxGKhiusi6zHhNBi
      2cFBfrCRSCzu6HHmXitDLYyNIKP2KiiZwRmmoSYg6pgDvNHx0e63pY6ULE4gGiRD
      ZWs+kgjjjtaEOcXW4HOK1B47E0RcM56/EgMO2Hg9QAPQnwfx/AI7LC937SqBej27
      ld0gkDlez21X
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    annotations:
      kubernetes.io/description: Contains a CA bundle that can be used to verify the
        kube-apiserver when using internal endpoints such as the internal service
        IP or kubernetes.default.svc. No other usage is guaranteed across distributions
        of Kubernetes clusters.
    creationTimestamp: "2024-11-12T10:10:35Z"
    name: kube-root-ca.crt
    namespace: kube-public
    resourceVersion: "299"
    uid: 4ec88e62-7b58-46a4-a6f9-1460517ae82a
- apiVersion: v1
  data:
    calico_backend: vxlan
    cluster_type: kubespray
    cni_network_config: |-
      {
        "name": "k8s-pod-network",
        "cniVersion":"0.3.1",
        "plugins":[
          {
                        "datastore_type": "kubernetes",
              "nodename": "__KUBERNETES_NODE_NAME__",
                        "type": "calico",
              "log_level": "info",
                        "log_file_path": "/var/log/calico/cni/cni.log",
                                            "ipam": {
                "type": "calico-ipam",
                            "assign_ipv4": "true"
                                      },
                                                      "policy": {
                "type": "k8s"
              },
                                  "kubernetes": {
                "kubeconfig": "__KUBECONFIG_FILEPATH__"
              }
          },
          {
            "type":"portmap",
            "capabilities": {
              "portMappings": true
            }
          },
          {
            "type":"bandwidth",
            "capabilities": {
              "bandwidth": true
            }
          }
        ]
      }
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"calico_backend":"vxlan","cluster_type":"kubespray","cni_network_config":"{\n  \"name\": \"k8s-pod-network\",\n  \"cniVersion\":\"0.3.1\",\n  \"plugins\":[\n    {\n                  \"datastore_type\": \"kubernetes\",\n        \"nodename\": \"__KUBERNETES_NODE_NAME__\",\n                  \"type\": \"calico\",\n        \"log_level\": \"info\",\n                  \"log_file_path\": \"/var/log/calico/cni/cni.log\",\n                                      \"ipam\": {\n          \"type\": \"calico-ipam\",\n                      \"assign_ipv4\": \"true\"\n                                },\n                                                \"policy\": {\n          \"type\": \"k8s\"\n        },\n                            \"kubernetes\": {\n          \"kubeconfig\": \"__KUBECONFIG_FILEPATH__\"\n        }\n    },\n    {\n      \"type\":\"portmap\",\n      \"capabilities\": {\n        \"portMappings\": true\n      }\n    },\n    {\n      \"type\":\"bandwidth\",\n      \"capabilities\": {\n        \"bandwidth\": true\n      }\n    }\n  ]\n}"},"kind":"ConfigMap","metadata":{"annotations":{},"name":"calico-config","namespace":"kube-system"}}
    creationTimestamp: "2024-11-12T10:12:55Z"
    name: calico-config
    namespace: kube-system
    resourceVersion: "32925716"
    uid: 2013ac4a-16ad-4186-89bd-eb7de9451006
- apiVersion: v1
  data:
    Corefile: |
      .:53 {
          errors {
          }
          health {
              lameduck 5s
          }
          ready
          kubernetes kube-dev in-addr.arpa ip6.arpa {
            pods insecure
            fallthrough in-addr.arpa ip6.arpa
          }
          prometheus :9153
          forward . /etc/resolv.conf {
            prefer_udp
            max_concurrent 1000
          }
          cache 30

          loop
          reload
          loadbalance
      }
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"Corefile":".:53 {\n    errors {\n    }\n    health {\n        lameduck 5s\n    }\n    ready\n    kubernetes kube-dev in-addr.arpa ip6.arpa {\n      pods insecure\n      fallthrough in-addr.arpa ip6.arpa\n    }\n    prometheus :9153\n    forward . /etc/resolv.conf {\n      prefer_udp\n      max_concurrent 1000\n    }\n    cache 30\n\n    loop\n    reload\n    loadbalance\n}\n"},"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"EnsureExists"},"name":"coredns","namespace":"kube-system"}}
    creationTimestamp: "2024-11-12T10:13:47Z"
    labels:
      addonmanager.kubernetes.io/mode: EnsureExists
    name: coredns
    namespace: kube-system
    resourceVersion: "32856160"
    uid: 6620c472-fe8a-4632-97c5-025da2dbafac
- apiVersion: v1
  data:
    linear: '{"coresPerReplica":256,"min":2,"nodesPerReplica":16,"preventSinglePointFailure":true}'
  kind: ConfigMap
  metadata:
    creationTimestamp: "2024-11-12T10:13:51Z"
    name: dns-autoscaler
    namespace: kube-system
    resourceVersion: "1621"
    uid: 176eb03d-3b16-4d7f-8e3c-e92dec21c5dd
- apiVersion: v1
  data:
    client-ca-file: |
      -----BEGIN CERTIFICATE-----
      MIIDBTCCAe2gAwIBAgIIICDkzy3Yn38wDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE
      AxMKa3ViZXJuZXRlczAeFw0yNDExMTIxMDAzMThaFw0zNDExMTAxMDA4MThaMBUx
      EzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
      AoIBAQD3qrsFOcZRTmdJ2ajpsN+M2JJbqluLNcCKdKDSR8UjLurwMft775xZfXS8
      O80gmPDusXbSXS1vlRHV9DQH12fAGKUDWMJLOj7lkDyGwbBTCvJtL6y+4XlMHCDt
      hvNxH9a6b6cC1O+mHbOYkWmrCltcA8FbHFMmpX9LPFgP5+L4eiCQY4aCbJqZJ2aP
      9sj9DVQfhasGF31hQhXsYygk0bcOsgUq/zkIqPRWHTQetRPlk0Q9Sbli6AQ3cmil
      8sNCGYmrhtwaVsZauHIV1ue9KC0vOpLJ/4uEXjpBiYaVf4zHe0i2DshQiQ7yeX+M
      HukPrWZN84XAnwIxUrRkmr1i6sPvAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP
      BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBQliZ1HZFlvAe+NSYoGEPLseiqCWzAV
      BgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQDIHTLjCwzG
      /JLkJx2M31isIosHQv78GyLXekYRYLW/edTEjZ8/PKqWbxZtOG44ULUP8yLU/Wg6
      FpFiqsP0JqMpAruOvR8UlJXax5K6KEO5AD3Nmp+DvRQVlKt316GoIcbCd7FQDZxD
      yH8uRWnfTGYHPOC7tcyUvcxQlK6ng22lTfRmdX9NerUJ860VaxGKhiusi6zHhNBi
      2cFBfrCRSCzu6HHmXitDLYyNIKP2KiiZwRmmoSYg6pgDvNHx0e63pY6ULE4gGiRD
      ZWs+kgjjjtaEOcXW4HOK1B47E0RcM56/EgMO2Hg9QAPQnwfx/AI7LC937SqBej27
      ld0gkDlez21X
      -----END CERTIFICATE-----
    requestheader-allowed-names: '["front-proxy-client"]'
    requestheader-client-ca-file: |
      -----BEGIN CERTIFICATE-----
      MIIDETCCAfmgAwIBAgIIEGON/6jHVIEwDQYJKoZIhvcNAQELBQAwGTEXMBUGA1UE
      AxMOZnJvbnQtcHJveHktY2EwHhcNMjQxMTEyMTAwMzE4WhcNMzQxMTEwMTAwODE4
      WjAZMRcwFQYDVQQDEw5mcm9udC1wcm94eS1jYTCCASIwDQYJKoZIhvcNAQEBBQAD
      ggEPADCCAQoCggEBAMoP3K6T2Tozeurtx39q436G8e/fHgWH1d0fsdo8ExAskayr
      IOWIU5Kaqlt3I75c4If8s5OEWsfJs8iXX/i/Yt5M/6/9ewGcJClB2kGbK5J00azx
      g1iU1pgaEVa9+6/DCox3a/dAd9RCOF9Q/BVwudXyOO9/HZDm+3Grri7zlGsMH++q
      RMaVctvqPaXRou7izcpJj2g55qheGYMb8loFVmDVAu6Emc5fertiLi88S5puyEjX
      DUV//eoHMzKQC71nFMAwhgReBHm7HrZErytnDCysgjwZqDhnjLUNu/+trwFyXdCr
      k678LNO0oudzsajRkiunY/dQV+mCVgVSMUfwggcCAwEAAaNdMFswDgYDVR0PAQH/
      BAQDAgKkMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFK+6Nb0+sEENFh09CePQ
      hu3ARnmxMBkGA1UdEQQSMBCCDmZyb250LXByb3h5LWNhMA0GCSqGSIb3DQEBCwUA
      A4IBAQCxWJG+t5aFowf76sdlh4VCjpGKlF6RU/BnjNcJ+mAlwOJL+UGmFJnF8Ix/
      05R4vkRkiG8Ea/sPdVvsWa5wJnI/27PUCn5eFfm23LZ/E/sEwAAL4AcP7R3tCJmB
      RTosIwZhjZi+dfLlpoEx+I2e5P2cTpvxfkxCC1ZSods2SP5E5P9DvXvgM4X9UkhA
      tQwJt99ARAu49iBg97RQOakvEtdXfeLvCLQ8zIkU12KklRSlSAeI6HFCY2+J8WG9
      1J3khOXI2HP+kk8VrwzgVXUDKmo29d5SnixUE31fbbH+C5plPmIdXGbWaPOiG6Dx
      PlYVujlEQDbkH/mvg2C4YfaOk149
      -----END CERTIFICATE-----
    requestheader-extra-headers-prefix: '["X-Remote-Extra-"]'
    requestheader-group-headers: '["X-Remote-Group"]'
    requestheader-username-headers: '["X-Remote-User"]'
  kind: ConfigMap
  metadata:
    creationTimestamp: "2024-11-12T10:10:26Z"
    name: extension-apiserver-authentication
    namespace: kube-system
    resourceVersion: "31"
    uid: 31405710-dc52-4622-b309-6b0a46f89d92
- apiVersion: v1
  data:
    since: "2024-11-12"
  kind: ConfigMap
  metadata:
    creationTimestamp: "2024-11-12T10:10:26Z"
    name: kube-apiserver-legacy-service-account-token-tracking
    namespace: kube-system
    resourceVersion: "49"
    uid: ba6515ac-0573-4d84-8363-49452c37036d
- apiVersion: v1
  data:
    config.conf: |-
      apiVersion: kubeproxy.config.k8s.io/v1alpha1
      bindAddress: 0.0.0.0
      bindAddressHardFail: false
      clientConnection:
        acceptContentTypes: ""
        burst: 10
        contentType: application/vnd.kubernetes.protobuf
        kubeconfig: /var/lib/kube-proxy/kubeconfig.conf
        qps: 5
      clusterCIDR: 10.233.64.0/18
      configSyncPeriod: 15m0s
      conntrack:
        maxPerCore: 32768
        min: 131072
        tcpBeLiberal: false
        tcpCloseWaitTimeout: 1h0m0s
        tcpEstablishedTimeout: 24h0m0s
        udpStreamTimeout: 0s
        udpTimeout: 0s
      detectLocal:
        bridgeInterface: ""
        interfaceNamePrefix: ""
      detectLocalMode: ""
      enableProfiling: false
      healthzBindAddress: 0.0.0.0:10256
      hostnameOverride: kube-dev-node-1
      iptables:
        localhostNodePorts: null
        masqueradeAll: false
        masqueradeBit: 14
        minSyncPeriod: 0s
        syncPeriod: 30s
      ipvs:
        excludeCIDRs: []
        minSyncPeriod: 0s
        scheduler: rr
        strictARP: true
        syncPeriod: 30s
        tcpFinTimeout: 0s
        tcpTimeout: 0s
        udpTimeout: 0s
      kind: KubeProxyConfiguration
      logging:
        flushFrequency: 0
        options:
          json:
            infoBufferSize: "0"
          text:
            infoBufferSize: "0"
        verbosity: 0
      metricsBindAddress: 127.0.0.1:10249
      mode: ipvs
      nftables:
        masqueradeAll: false
        masqueradeBit: null
        minSyncPeriod: 0s
        syncPeriod: 0s
      nodePortAddresses: []
      oomScoreAdj: -999
      portRange: ""
      showHiddenMetricsForVersion: ""
      winkernel:
        enableDSR: false
        forwardHealthCheckVip: false
        networkName: ""
        rootHnsEndpointName: ""
        sourceVip: ""
    kubeconfig.conf: |-
      apiVersion: v1
      kind: Config
      clusters:
      - cluster:
          certificate-authority: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          server: https://127.0.0.1:6443
        name: default
      contexts:
      - context:
          cluster: default
          namespace: default
          user: default
        name: default
      current-context: default
      users:
      - name: default
        user:
          tokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
  kind: ConfigMap
  metadata:
    creationTimestamp: "2024-11-12T10:10:29Z"
    labels:
      app: kube-proxy
    name: kube-proxy
    namespace: kube-system
    resourceVersion: "32919309"
    uid: b1f0e434-40dc-4a0d-983e-8417b531d26b
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIDBTCCAe2gAwIBAgIIICDkzy3Yn38wDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE
      AxMKa3ViZXJuZXRlczAeFw0yNDExMTIxMDAzMThaFw0zNDExMTAxMDA4MThaMBUx
      EzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
      AoIBAQD3qrsFOcZRTmdJ2ajpsN+M2JJbqluLNcCKdKDSR8UjLurwMft775xZfXS8
      O80gmPDusXbSXS1vlRHV9DQH12fAGKUDWMJLOj7lkDyGwbBTCvJtL6y+4XlMHCDt
      hvNxH9a6b6cC1O+mHbOYkWmrCltcA8FbHFMmpX9LPFgP5+L4eiCQY4aCbJqZJ2aP
      9sj9DVQfhasGF31hQhXsYygk0bcOsgUq/zkIqPRWHTQetRPlk0Q9Sbli6AQ3cmil
      8sNCGYmrhtwaVsZauHIV1ue9KC0vOpLJ/4uEXjpBiYaVf4zHe0i2DshQiQ7yeX+M
      HukPrWZN84XAnwIxUrRkmr1i6sPvAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP
      BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBQliZ1HZFlvAe+NSYoGEPLseiqCWzAV
      BgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQDIHTLjCwzG
      /JLkJx2M31isIosHQv78GyLXekYRYLW/edTEjZ8/PKqWbxZtOG44ULUP8yLU/Wg6
      FpFiqsP0JqMpAruOvR8UlJXax5K6KEO5AD3Nmp+DvRQVlKt316GoIcbCd7FQDZxD
      yH8uRWnfTGYHPOC7tcyUvcxQlK6ng22lTfRmdX9NerUJ860VaxGKhiusi6zHhNBi
      2cFBfrCRSCzu6HHmXitDLYyNIKP2KiiZwRmmoSYg6pgDvNHx0e63pY6ULE4gGiRD
      ZWs+kgjjjtaEOcXW4HOK1B47E0RcM56/EgMO2Hg9QAPQnwfx/AI7LC937SqBej27
      ld0gkDlez21X
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    annotations:
      kubernetes.io/description: Contains a CA bundle that can be used to verify the
        kube-apiserver when using internal endpoints such as the internal service
        IP or kubernetes.default.svc. No other usage is guaranteed across distributions
        of Kubernetes clusters.
    creationTimestamp: "2024-11-12T10:10:35Z"
    name: kube-root-ca.crt
    namespace: kube-system
    resourceVersion: "300"
    uid: 176f8d51-1b6d-40b1-bc20-16bd3a9983b2
- apiVersion: v1
  data:
    ClusterConfiguration: |
      apiServer:
        certSANs:
        - kubernetes
        - kubernetes.default
        - kubernetes.default.svc
        - kubernetes.default.svc.kube-dev
        - 10.233.0.1
        - localhost
        - 127.0.0.1
        - ::1
        - kube-dev-node-1
        - kube-dev-node-2
        - lb-apiserver.kubernetes.local
        - 172.20.0.71
        - 172.20.0.72
        - kube-dev-node-1.kube-dev
        - kube-dev-node-2.kube-dev
        extraArgs:
        - name: etcd-compaction-interval
          value: 5m0s
        - name: default-not-ready-toleration-seconds
          value: "300"
        - name: default-unreachable-toleration-seconds
          value: "300"
        - name: anonymous-auth
          value: "True"
        - name: authorization-mode
          value: Node,RBAC
        - name: bind-address
          value: '::'
        - name: apiserver-count
          value: "2"
        - name: endpoint-reconciler-type
          value: lease
        - name: service-node-port-range
          value: 30000-32767
        - name: service-cluster-ip-range
          value: 10.233.0.0/18
        - name: kubelet-preferred-address-types
          value: InternalDNS,InternalIP,Hostname,ExternalDNS,ExternalIP
        - name: profiling
          value: "False"
        - name: request-timeout
          value: 1m0s
        - name: enable-aggregator-routing
          value: "False"
        - name: service-account-lookup
          value: "True"
        - name: storage-backend
          value: etcd3
        - name: allow-privileged
          value: "true"
        - name: event-ttl
          value: 1h0m0s
        extraVolumes:
        - hostPath: /usr/share/ca-certificates
          mountPath: /usr/share/ca-certificates
          name: usr-share-ca-certificates
          readOnly: true
      apiVersion: kubeadm.k8s.io/v1beta4
      caCertificateValidityPeriod: 87600h0m0s
      certificateValidityPeriod: 8760h0m0s
      certificatesDir: /etc/kubernetes/ssl
      clusterName: kube-dev
      controlPlaneEndpoint: 172.20.0.71:6443
      controllerManager:
        extraArgs:
        - name: node-monitor-grace-period
          value: 40s
        - name: node-monitor-period
          value: 5s
        - name: cluster-cidr
          value: 10.233.64.0/18
        - name: service-cluster-ip-range
          value: 10.233.0.0/18
        - name: allocate-node-cidrs
          value: "false"
        - name: profiling
          value: "False"
        - name: terminated-pod-gc-threshold
          value: "12500"
        - name: bind-address
          value: '::'
        - name: leader-elect-lease-duration
          value: 15s
        - name: leader-elect-renew-deadline
          value: 10s
        - name: configure-cloud-routes
          value: "false"
      dns:
        disabled: true
        imageRepository: registry.k8s.io/coredns
        imageTag: v1.11.3
      encryptionAlgorithm: RSA-2048
      etcd:
        external:
          caFile: /etc/ssl/etcd/ssl/ca.pem
          certFile: /etc/ssl/etcd/ssl/node-kube-dev-node-1.pem
          endpoints:
          - https://172.20.0.71:2379
          - https://172.20.0.72:2379
          - https://172.20.0.73:2379
          keyFile: /etc/ssl/etcd/ssl/node-kube-dev-node-1-key.pem
      imageRepository: registry.k8s.io
      kind: ClusterConfiguration
      kubernetesVersion: v1.32.5
      networking:
        dnsDomain: kube-dev
        podSubnet: 10.233.64.0/18
        serviceSubnet: 10.233.0.0/18
      proxy: {}
      scheduler:
        extraArgs:
        - name: bind-address
          value: '::'
        - name: config
          value: /etc/kubernetes/kubescheduler-config.yaml
        - name: profiling
          value: "False"
        extraVolumes:
        - hostPath: /etc/kubernetes/kubescheduler-config.yaml
          mountPath: /etc/kubernetes/kubescheduler-config.yaml
          name: kubescheduler-config
          readOnly: true
  kind: ConfigMap
  metadata:
    creationTimestamp: "2024-11-12T10:10:28Z"
    name: kubeadm-config
    namespace: kube-system
    resourceVersion: "32855757"
    uid: 89852c1f-c0a1-435b-bbd6-e9ffefca4957
- apiVersion: v1
  data:
    kubelet: |
      apiVersion: kubelet.config.k8s.io/v1beta1
      authentication:
        anonymous:
          enabled: false
        webhook:
          cacheTTL: 0s
          enabled: true
        x509:
          clientCAFile: /etc/kubernetes/ssl/ca.crt
      authorization:
        mode: Webhook
        webhook:
          cacheAuthorizedTTL: 0s
          cacheUnauthorizedTTL: 0s
      cgroupDriver: systemd
      clusterDNS:
      - 169.254.25.10
      clusterDomain: kube-dev
      containerRuntimeEndpoint: ""
      cpuManagerReconcilePeriod: 0s
      crashLoopBackOff: {}
      evictionPressureTransitionPeriod: 0s
      fileCheckFrequency: 0s
      healthzBindAddress: 127.0.0.1
      healthzPort: 10248
      httpCheckFrequency: 0s
      imageMaximumGCAge: 0s
      imageMinimumGCAge: 0s
      kind: KubeletConfiguration
      logging:
        flushFrequency: 0
        options:
          json:
            infoBufferSize: "0"
          text:
            infoBufferSize: "0"
        verbosity: 0
      memorySwap: {}
      nodeStatusReportFrequency: 0s
      nodeStatusUpdateFrequency: 0s
      rotateCertificates: true
      runtimeRequestTimeout: 0s
      shutdownGracePeriod: 0s
      shutdownGracePeriodCriticalPods: 0s
      staticPodPath: /etc/kubernetes/manifests
      streamingConnectionIdleTimeout: 0s
      syncFrequency: 0s
      volumeStatsAggPeriod: 0s
  kind: ConfigMap
  metadata:
    creationTimestamp: "2024-11-12T10:10:28Z"
    name: kubelet-config
    namespace: kube-system
    resourceVersion: "32855651"
    uid: b3bd2ef9-8c1c-41c6-8c98-c2cb693629e2
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"ConfigMap","metadata":{"annotations":{},"labels":{"k8s-app":"kubernetes-dashboard"},"name":"kubernetes-dashboard-settings","namespace":"kube-system"}}
    creationTimestamp: "2024-11-14T12:41:17Z"
    labels:
      k8s-app: kubernetes-dashboard
    name: kubernetes-dashboard-settings
    namespace: kube-system
    resourceVersion: "482481"
    uid: cdd09cbf-76f6-44f1-a8ca-3f9f09d3996b
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":null,"kind":"ConfigMap","metadata":{"annotations":{},"name":"kubernetes-services-endpoint","namespace":"kube-system"}}
    creationTimestamp: "2024-11-12T10:12:56Z"
    name: kubernetes-services-endpoint
    namespace: kube-system
    resourceVersion: "888"
    uid: e844965e-34cf-4b4b-adb3-dab565e4e768
- apiVersion: v1
  data:
    Corefile: |
      kube-dev:53 {
          errors
          cache {
              success 9984 30
              denial 9984 5
          }
          reload
          loop
          bind 169.254.25.10
          forward . 10.233.0.3 {
              force_tcp
          }
          prometheus :9253
          health 169.254.25.10:9254
      }
      in-addr.arpa:53 {
          errors
          cache 30
          reload
          loop
          bind 169.254.25.10
          forward . 10.233.0.3 {
              force_tcp
          }
          prometheus :9253
      }
      ip6.arpa:53 {
          errors
          cache 30
          reload
          loop
          bind 169.254.25.10
          forward . 10.233.0.3 {
              force_tcp
          }
          prometheus :9253
      }
      .:53 {
          errors
          cache 30
          reload
          loop
          bind 169.254.25.10
          forward . /etc/resolv.conf
          prometheus :9253
      }
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"Corefile":"kube-dev:53 {\n    errors\n    cache {\n        success 9984 30\n        denial 9984 5\n    }\n    reload\n    loop\n    bind 169.254.25.10\n    forward . 10.233.0.3 {\n        force_tcp\n    }\n    prometheus :9253\n    health 169.254.25.10:9254\n}\nin-addr.arpa:53 {\n    errors\n    cache 30\n    reload\n    loop\n    bind 169.254.25.10\n    forward . 10.233.0.3 {\n        force_tcp\n    }\n    prometheus :9253\n}\nip6.arpa:53 {\n    errors\n    cache 30\n    reload\n    loop\n    bind 169.254.25.10\n    forward . 10.233.0.3 {\n        force_tcp\n    }\n    prometheus :9253\n}\n.:53 {\n    errors\n    cache 30\n    reload\n    loop\n    bind 169.254.25.10\n    forward . /etc/resolv.conf\n    prometheus :9253\n}\n"},"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"EnsureExists"},"name":"nodelocaldns","namespace":"kube-system"}}
    creationTimestamp: "2024-11-12T10:13:50Z"
    labels:
      addonmanager.kubernetes.io/mode: EnsureExists
    name: nodelocaldns
    namespace: kube-system
    resourceVersion: "1564"
    uid: b9d6a10f-9e37-4c37-86d3-99334ec61ec4
- apiVersion: v1
  data:
    config.yml: |-
      health:
        storagedriver: {enabled: true, interval: 10s, threshold: 3}
      http:
        addr: :5000
        headers:
          X-Content-Type-Options: [nosniff]
      log:
        fields: {service: registry}
      storage:
        cache: {blobdescriptor: inmemory}
      version: 0.1
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"config.yml":"health:\n  storagedriver: {enabled: true, interval: 10s, threshold: 3}\nhttp:\n  addr: :5000\n  headers:\n    X-Content-Type-Options: [nosniff]\nlog:\n  fields: {service: registry}\nstorage:\n  cache: {blobdescriptor: inmemory}\nversion: 0.1"},"kind":"ConfigMap","metadata":{"annotations":{},"name":"registry-config","namespace":"kube-system"}}
    creationTimestamp: "2024-11-12T10:13:56Z"
    name: registry-config
    namespace: kube-system
    resourceVersion: "1687"
    uid: b749864b-5e6b-41b5-b806-98119e921b9a
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIDBTCCAe2gAwIBAgIIICDkzy3Yn38wDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE
      AxMKa3ViZXJuZXRlczAeFw0yNDExMTIxMDAzMThaFw0zNDExMTAxMDA4MThaMBUx
      EzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
      AoIBAQD3qrsFOcZRTmdJ2ajpsN+M2JJbqluLNcCKdKDSR8UjLurwMft775xZfXS8
      O80gmPDusXbSXS1vlRHV9DQH12fAGKUDWMJLOj7lkDyGwbBTCvJtL6y+4XlMHCDt
      hvNxH9a6b6cC1O+mHbOYkWmrCltcA8FbHFMmpX9LPFgP5+L4eiCQY4aCbJqZJ2aP
      9sj9DVQfhasGF31hQhXsYygk0bcOsgUq/zkIqPRWHTQetRPlk0Q9Sbli6AQ3cmil
      8sNCGYmrhtwaVsZauHIV1ue9KC0vOpLJ/4uEXjpBiYaVf4zHe0i2DshQiQ7yeX+M
      HukPrWZN84XAnwIxUrRkmr1i6sPvAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP
      BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBQliZ1HZFlvAe+NSYoGEPLseiqCWzAV
      BgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQDIHTLjCwzG
      /JLkJx2M31isIosHQv78GyLXekYRYLW/edTEjZ8/PKqWbxZtOG44ULUP8yLU/Wg6
      FpFiqsP0JqMpAruOvR8UlJXax5K6KEO5AD3Nmp+DvRQVlKt316GoIcbCd7FQDZxD
      yH8uRWnfTGYHPOC7tcyUvcxQlK6ng22lTfRmdX9NerUJ860VaxGKhiusi6zHhNBi
      2cFBfrCRSCzu6HHmXitDLYyNIKP2KiiZwRmmoSYg6pgDvNHx0e63pY6ULE4gGiRD
      ZWs+kgjjjtaEOcXW4HOK1B47E0RcM56/EgMO2Hg9QAPQnwfx/AI7LC937SqBej27
      ld0gkDlez21X
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    annotations:
      kubernetes.io/description: Contains a CA bundle that can be used to verify the
        kube-apiserver when using internal endpoints such as the internal service
        IP or kubernetes.default.svc. No other usage is guaranteed across distributions
        of Kubernetes clusters.
    creationTimestamp: "2024-11-12T10:13:40Z"
    name: kube-root-ca.crt
    namespace: local-path-storage
    resourceVersion: "1419"
    uid: fadb1cb7-bc8c-4c92-9b51-a5aab57c83a7
- apiVersion: v1
  data:
    config.json: |-
      {
              "nodePathMap":[
              {
                      "node":"DEFAULT_PATH_FOR_NON_LISTED_NODES",
                      "paths":["/opt/local-path-provisioner/"]
              }
              ]
      }
    helperPod.yaml: |-
      apiVersion: v1
      kind: Pod
      metadata:
        name: helper-pod
      spec:
        containers:
        - name: helper-pod
          image: "busybox:latest"
          imagePullPolicy: IfNotPresent
    setup: |-
      #!/bin/sh
      set -eu
      mkdir -m 0777 -p "$VOL_DIR"
    teardown: |-
      #!/bin/sh
      set -eu
      rm -rf "$VOL_DIR"
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"config.json":"{\n        \"nodePathMap\":[\n        {\n                \"node\":\"DEFAULT_PATH_FOR_NON_LISTED_NODES\",\n                \"paths\":[\"/opt/local-path-provisioner/\"]\n        }\n        ]\n}","helperPod.yaml":"apiVersion: v1\nkind: Pod\nmetadata:\n  name: helper-pod\nspec:\n  containers:\n  - name: helper-pod\n    image: \"busybox:latest\"\n    imagePullPolicy: IfNotPresent","setup":"#!/bin/sh\nset -eu\nmkdir -m 0777 -p \"$VOL_DIR\"","teardown":"#!/bin/sh\nset -eu\nrm -rf \"$VOL_DIR\""},"kind":"ConfigMap","metadata":{"annotations":{},"name":"local-path-config","namespace":"local-path-storage"}}
    creationTimestamp: "2024-11-12T10:13:41Z"
    name: local-path-config
    namespace: local-path-storage
    resourceVersion: "1427"
    uid: b67ebe1c-5552-431a-995e-808026359ea5
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIDBTCCAe2gAwIBAgIIICDkzy3Yn38wDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE
      AxMKa3ViZXJuZXRlczAeFw0yNDExMTIxMDAzMThaFw0zNDExMTAxMDA4MThaMBUx
      EzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
      AoIBAQD3qrsFOcZRTmdJ2ajpsN+M2JJbqluLNcCKdKDSR8UjLurwMft775xZfXS8
      O80gmPDusXbSXS1vlRHV9DQH12fAGKUDWMJLOj7lkDyGwbBTCvJtL6y+4XlMHCDt
      hvNxH9a6b6cC1O+mHbOYkWmrCltcA8FbHFMmpX9LPFgP5+L4eiCQY4aCbJqZJ2aP
      9sj9DVQfhasGF31hQhXsYygk0bcOsgUq/zkIqPRWHTQetRPlk0Q9Sbli6AQ3cmil
      8sNCGYmrhtwaVsZauHIV1ue9KC0vOpLJ/4uEXjpBiYaVf4zHe0i2DshQiQ7yeX+M
      HukPrWZN84XAnwIxUrRkmr1i6sPvAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP
      BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBQliZ1HZFlvAe+NSYoGEPLseiqCWzAV
      BgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQDIHTLjCwzG
      /JLkJx2M31isIosHQv78GyLXekYRYLW/edTEjZ8/PKqWbxZtOG44ULUP8yLU/Wg6
      FpFiqsP0JqMpAruOvR8UlJXax5K6KEO5AD3Nmp+DvRQVlKt316GoIcbCd7FQDZxD
      yH8uRWnfTGYHPOC7tcyUvcxQlK6ng22lTfRmdX9NerUJ860VaxGKhiusi6zHhNBi
      2cFBfrCRSCzu6HHmXitDLYyNIKP2KiiZwRmmoSYg6pgDvNHx0e63pY6ULE4gGiRD
      ZWs+kgjjjtaEOcXW4HOK1B47E0RcM56/EgMO2Hg9QAPQnwfx/AI7LC937SqBej27
      ld0gkDlez21X
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    annotations:
      kubernetes.io/description: Contains a CA bundle that can be used to verify the
        kube-apiserver when using internal endpoints such as the internal service
        IP or kubernetes.default.svc. No other usage is guaranteed across distributions
        of Kubernetes clusters.
    creationTimestamp: "2025-05-27T15:02:11Z"
    name: kube-root-ca.crt
    namespace: longhorn-system
    resourceVersion: "32278843"
    uid: 53986649-d6e3-4d0b-86f1-bb5f1abd5a08
- apiVersion: v1
  data:
    default-resource.yaml: ""
  kind: ConfigMap
  metadata:
    annotations:
      meta.helm.sh/release-name: longhorn
      meta.helm.sh/release-namespace: longhorn-system
    creationTimestamp: "2025-05-27T15:02:11Z"
    labels:
      app.kubernetes.io/instance: longhorn
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: longhorn
      app.kubernetes.io/version: v1.9.0
      helm.sh/chart: longhorn-1.9.0
    name: longhorn-default-resource
    namespace: longhorn-system
    resourceVersion: "32278852"
    uid: 33ff8f28-5888-4dba-89b8-fb37f79fa6ca
- apiVersion: v1
  data:
    default-setting.yaml: |-
      priority-class: longhorn-critical
      disable-revision-counter: true
  kind: ConfigMap
  metadata:
    annotations:
      meta.helm.sh/release-name: longhorn
      meta.helm.sh/release-namespace: longhorn-system
    creationTimestamp: "2025-05-27T15:02:11Z"
    labels:
      app.kubernetes.io/instance: longhorn
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: longhorn
      app.kubernetes.io/version: v1.9.0
      helm.sh/chart: longhorn-1.9.0
    name: longhorn-default-setting
    namespace: longhorn-system
    resourceVersion: "32278851"
    uid: 4fa934c4-5961-497e-aec6-e843da8096ff
- apiVersion: v1
  data:
    storageclass.yaml: |
      kind: StorageClass
      apiVersion: storage.k8s.io/v1
      metadata:
        name: longhorn
        annotations:
          storageclass.kubernetes.io/is-default-class: "true"
      provisioner: driver.longhorn.io
      allowVolumeExpansion: true
      reclaimPolicy: "Delete"
      volumeBindingMode: Immediate
      parameters:
        numberOfReplicas: "3"
        staleReplicaTimeout: "30"
        fromBackup: ""
        fsType: "ext4"
        dataLocality: "disabled"
        unmapMarkSnapChainRemoved: "ignored"
        disableRevisionCounter: "true"
        dataEngine: "v1"
        backupTargetName: "default"
  kind: ConfigMap
  metadata:
    annotations:
      meta.helm.sh/release-name: longhorn
      meta.helm.sh/release-namespace: longhorn-system
    creationTimestamp: "2025-05-27T15:02:11Z"
    labels:
      app.kubernetes.io/instance: longhorn
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: longhorn
      app.kubernetes.io/version: v1.9.0
      helm.sh/chart: longhorn-1.9.0
    name: longhorn-storageclass
    namespace: longhorn-system
    resourceVersion: "32278850"
    uid: 8df0d965-b13c-4b67-b141-d7b4593b8f9c
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIDBTCCAe2gAwIBAgIIICDkzy3Yn38wDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE
      AxMKa3ViZXJuZXRlczAeFw0yNDExMTIxMDAzMThaFw0zNDExMTAxMDA4MThaMBUx
      EzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
      AoIBAQD3qrsFOcZRTmdJ2ajpsN+M2JJbqluLNcCKdKDSR8UjLurwMft775xZfXS8
      O80gmPDusXbSXS1vlRHV9DQH12fAGKUDWMJLOj7lkDyGwbBTCvJtL6y+4XlMHCDt
      hvNxH9a6b6cC1O+mHbOYkWmrCltcA8FbHFMmpX9LPFgP5+L4eiCQY4aCbJqZJ2aP
      9sj9DVQfhasGF31hQhXsYygk0bcOsgUq/zkIqPRWHTQetRPlk0Q9Sbli6AQ3cmil
      8sNCGYmrhtwaVsZauHIV1ue9KC0vOpLJ/4uEXjpBiYaVf4zHe0i2DshQiQ7yeX+M
      HukPrWZN84XAnwIxUrRkmr1i6sPvAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP
      BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBQliZ1HZFlvAe+NSYoGEPLseiqCWzAV
      BgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQDIHTLjCwzG
      /JLkJx2M31isIosHQv78GyLXekYRYLW/edTEjZ8/PKqWbxZtOG44ULUP8yLU/Wg6
      FpFiqsP0JqMpAruOvR8UlJXax5K6KEO5AD3Nmp+DvRQVlKt316GoIcbCd7FQDZxD
      yH8uRWnfTGYHPOC7tcyUvcxQlK6ng22lTfRmdX9NerUJ860VaxGKhiusi6zHhNBi
      2cFBfrCRSCzu6HHmXitDLYyNIKP2KiiZwRmmoSYg6pgDvNHx0e63pY6ULE4gGiRD
      ZWs+kgjjjtaEOcXW4HOK1B47E0RcM56/EgMO2Hg9QAPQnwfx/AI7LC937SqBej27
      ld0gkDlez21X
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    annotations:
      kubernetes.io/description: Contains a CA bundle that can be used to verify the
        kube-apiserver when using internal endpoints such as the internal service
        IP or kubernetes.default.svc. No other usage is guaranteed across distributions
        of Kubernetes clusters.
    creationTimestamp: "2024-11-12T10:14:06Z"
    name: kube-root-ca.crt
    namespace: metallb-system
    resourceVersion: "1771"
    uid: 2000f60a-7604-4bed-b4c3-6be6b104f166
- apiVersion: v1
  data:
    config.yaml: |-
      "resourceRules":
        "cpu":
          "containerLabel": "container"
          "containerQuery": |
            sum by (<<.GroupBy>>) (
              irate (
                  container_cpu_usage_seconds_total{<<.LabelMatchers>>,container!="",pod!=""}[120s]
              )
            )
          "nodeQuery": |
            sum by (<<.GroupBy>>) (
              1 - irate(
                node_cpu_seconds_total{mode="idle"}[60s]
              )
              * on(namespace, pod) group_left(node) (
                node_namespace_pod:kube_pod_info:{<<.LabelMatchers>>}
              )
            )
            or sum by (<<.GroupBy>>) (
              1 - irate(
                windows_cpu_time_total{mode="idle", job="windows-exporter",<<.LabelMatchers>>}[4m]
              )
            )
          "resources":
            "overrides":
              "namespace":
                "resource": "namespace"
              "node":
                "resource": "node"
              "pod":
                "resource": "pod"
        "memory":
          "containerLabel": "container"
          "containerQuery": |
            sum by (<<.GroupBy>>) (
              container_memory_working_set_bytes{<<.LabelMatchers>>,container!="",pod!=""}
            )
          "nodeQuery": |
            sum by (<<.GroupBy>>) (
              node_memory_MemTotal_bytes{job="node-exporter",<<.LabelMatchers>>}
              -
              node_memory_MemAvailable_bytes{job="node-exporter",<<.LabelMatchers>>}
            )
            or sum by (<<.GroupBy>>) (
              windows_cs_physical_memory_bytes{job="windows-exporter",<<.LabelMatchers>>}
              -
              windows_memory_available_bytes{job="windows-exporter",<<.LabelMatchers>>}
            )
          "resources":
            "overrides":
              "instance":
                "resource": "node"
              "namespace":
                "resource": "namespace"
              "pod":
                "resource": "pod"
        "window": "5m"
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"config.yaml":"\"resourceRules\":\n  \"cpu\":\n    \"containerLabel\": \"container\"\n    \"containerQuery\": |\n      sum by (\u003c\u003c.GroupBy\u003e\u003e) (\n        irate (\n            container_cpu_usage_seconds_total{\u003c\u003c.LabelMatchers\u003e\u003e,container!=\"\",pod!=\"\"}[120s]\n        )\n      )\n    \"nodeQuery\": |\n      sum by (\u003c\u003c.GroupBy\u003e\u003e) (\n        1 - irate(\n          node_cpu_seconds_total{mode=\"idle\"}[60s]\n        )\n        * on(namespace, pod) group_left(node) (\n          node_namespace_pod:kube_pod_info:{\u003c\u003c.LabelMatchers\u003e\u003e}\n        )\n      )\n      or sum by (\u003c\u003c.GroupBy\u003e\u003e) (\n        1 - irate(\n          windows_cpu_time_total{mode=\"idle\", job=\"windows-exporter\",\u003c\u003c.LabelMatchers\u003e\u003e}[4m]\n        )\n      )\n    \"resources\":\n      \"overrides\":\n        \"namespace\":\n          \"resource\": \"namespace\"\n        \"node\":\n          \"resource\": \"node\"\n        \"pod\":\n          \"resource\": \"pod\"\n  \"memory\":\n    \"containerLabel\": \"container\"\n    \"containerQuery\": |\n      sum by (\u003c\u003c.GroupBy\u003e\u003e) (\n        container_memory_working_set_bytes{\u003c\u003c.LabelMatchers\u003e\u003e,container!=\"\",pod!=\"\"}\n      )\n    \"nodeQuery\": |\n      sum by (\u003c\u003c.GroupBy\u003e\u003e) (\n        node_memory_MemTotal_bytes{job=\"node-exporter\",\u003c\u003c.LabelMatchers\u003e\u003e}\n        -\n        node_memory_MemAvailable_bytes{job=\"node-exporter\",\u003c\u003c.LabelMatchers\u003e\u003e}\n      )\n      or sum by (\u003c\u003c.GroupBy\u003e\u003e) (\n        windows_cs_physical_memory_bytes{job=\"windows-exporter\",\u003c\u003c.LabelMatchers\u003e\u003e}\n        -\n        windows_memory_available_bytes{job=\"windows-exporter\",\u003c\u003c.LabelMatchers\u003e\u003e}\n      )\n    \"resources\":\n      \"overrides\":\n        \"instance\":\n          \"resource\": \"node\"\n        \"namespace\":\n          \"resource\": \"namespace\"\n        \"pod\":\n          \"resource\": \"pod\"\n  \"window\": \"5m\""},"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"metrics-adapter","app.kubernetes.io/name":"prometheus-adapter","app.kubernetes.io/part-of":"kube-prometheus","app.kubernetes.io/version":"0.12.0"},"name":"adapter-config","namespace":"monitoring"}}
    creationTimestamp: "2024-11-25T14:40:27Z"
    labels:
      app.kubernetes.io/component: metrics-adapter
      app.kubernetes.io/name: prometheus-adapter
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 0.12.0
    name: adapter-config
    namespace: monitoring
    resourceVersion: "3039787"
    uid: 06aadc0c-83f0-4ea6-853b-74043a9bbde0
- apiVersion: v1
  data:
    config.yml: |-
      "modules":
        "http_2xx":
          "http":
            "preferred_ip_protocol": "ip4"
          "prober": "http"
        "http_post_2xx":
          "http":
            "method": "POST"
            "preferred_ip_protocol": "ip4"
          "prober": "http"
        "irc_banner":
          "prober": "tcp"
          "tcp":
            "preferred_ip_protocol": "ip4"
            "query_response":
            - "send": "NICK prober"
            - "send": "USER prober prober prober :prober"
            - "expect": "PING :([^ ]+)"
              "send": "PONG ${1}"
            - "expect": "^:[^ ]+ 001"
        "pop3s_banner":
          "prober": "tcp"
          "tcp":
            "preferred_ip_protocol": "ip4"
            "query_response":
            - "expect": "^+OK"
            "tls": true
            "tls_config":
              "insecure_skip_verify": false
        "ssh_banner":
          "prober": "tcp"
          "tcp":
            "preferred_ip_protocol": "ip4"
            "query_response":
            - "expect": "^SSH-2.0-"
        "tcp_connect":
          "prober": "tcp"
          "tcp":
            "preferred_ip_protocol": "ip4"
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"config.yml":"\"modules\":\n  \"http_2xx\":\n    \"http\":\n      \"preferred_ip_protocol\": \"ip4\"\n    \"prober\": \"http\"\n  \"http_post_2xx\":\n    \"http\":\n      \"method\": \"POST\"\n      \"preferred_ip_protocol\": \"ip4\"\n    \"prober\": \"http\"\n  \"irc_banner\":\n    \"prober\": \"tcp\"\n    \"tcp\":\n      \"preferred_ip_protocol\": \"ip4\"\n      \"query_response\":\n      - \"send\": \"NICK prober\"\n      - \"send\": \"USER prober prober prober :prober\"\n      - \"expect\": \"PING :([^ ]+)\"\n        \"send\": \"PONG ${1}\"\n      - \"expect\": \"^:[^ ]+ 001\"\n  \"pop3s_banner\":\n    \"prober\": \"tcp\"\n    \"tcp\":\n      \"preferred_ip_protocol\": \"ip4\"\n      \"query_response\":\n      - \"expect\": \"^+OK\"\n      \"tls\": true\n      \"tls_config\":\n        \"insecure_skip_verify\": false\n  \"ssh_banner\":\n    \"prober\": \"tcp\"\n    \"tcp\":\n      \"preferred_ip_protocol\": \"ip4\"\n      \"query_response\":\n      - \"expect\": \"^SSH-2.0-\"\n  \"tcp_connect\":\n    \"prober\": \"tcp\"\n    \"tcp\":\n      \"preferred_ip_protocol\": \"ip4\""},"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"exporter","app.kubernetes.io/name":"blackbox-exporter","app.kubernetes.io/part-of":"kube-prometheus","app.kubernetes.io/version":"0.25.0"},"name":"blackbox-exporter-configuration","namespace":"monitoring"}}
    creationTimestamp: "2024-11-25T14:40:26Z"
    labels:
      app.kubernetes.io/component: exporter
      app.kubernetes.io/name: blackbox-exporter
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 0.25.0
    name: blackbox-exporter-configuration
    namespace: monitoring
    resourceVersion: "3039582"
    uid: 1e9a7585-6993-46be-9ddb-3ba51f62a1a1
- apiVersion: v1
  data:
    alertmanager-overview.json: |-
      {
          "graphTooltip": 1,
          "panels": [
              {
                  "collapsed": false,
                  "gridPos": {
                      "h": 1,
                      "w": 24,
                      "x": 0,
                      "y": 0
                  },
                  "id": 1,
                  "panels": [

                  ],
                  "title": "Alerts",
                  "type": "row"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "$datasource"
                  },
                  "description": "current set of alerts stored in the Alertmanager",
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "stacking": {
                                  "mode": "normal"
                              }
                          },
                          "unit": "none"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 1
                  },
                  "id": 2,
                  "options": {
                      "legend": {
                          "showLegend": false
                      },
                      "tooltip": {
                          "mode": "multi"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "sum(alertmanager_alerts{namespace=~\"$namespace\",service=~\"$service\"}) by (namespace,service,instance)",
                          "intervalFactor": 2,
                          "legendFormat": "{{instance}}"
                      }
                  ],
                  "title": "Alerts",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "$datasource"
                  },
                  "description": "rate of successful and invalid alerts received by the Alertmanager",
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "stacking": {
                                  "mode": "normal"
                              }
                          },
                          "unit": "ops"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 1
                  },
                  "id": 3,
                  "options": {
                      "legend": {
                          "showLegend": false
                      },
                      "tooltip": {
                          "mode": "multi"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "sum(rate(alertmanager_alerts_received_total{namespace=~\"$namespace\",service=~\"$service\"}[$__rate_interval])) by (namespace,service,instance)",
                          "intervalFactor": 2,
                          "legendFormat": "{{instance}} Received"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "sum(rate(alertmanager_alerts_invalid_total{namespace=~\"$namespace\",service=~\"$service\"}[$__rate_interval])) by (namespace,service,instance)",
                          "intervalFactor": 2,
                          "legendFormat": "{{instance}} Invalid"
                      }
                  ],
                  "title": "Alerts receive rate",
                  "type": "timeseries"
              },
              {
                  "collapsed": false,
                  "gridPos": {
                      "h": 1,
                      "w": 24,
                      "x": 0,
                      "y": 8
                  },
                  "id": 4,
                  "panels": [

                  ],
                  "title": "Notifications",
                  "type": "row"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "$datasource"
                  },
                  "description": "rate of successful and invalid notifications sent by the Alertmanager",
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "stacking": {
                                  "mode": "normal"
                              }
                          },
                          "unit": "ops"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 9
                  },
                  "id": 5,
                  "options": {
                      "legend": {
                          "showLegend": false
                      },
                      "tooltip": {
                          "mode": "multi"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "repeat": "integration",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "sum(rate(alertmanager_notifications_total{namespace=~\"$namespace\",service=~\"$service\", integration=\"$integration\"}[$__rate_interval])) by (integration,namespace,service,instance)",
                          "intervalFactor": 2,
                          "legendFormat": "{{instance}} Total"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "sum(rate(alertmanager_notifications_failed_total{namespace=~\"$namespace\",service=~\"$service\", integration=\"$integration\"}[$__rate_interval])) by (integration,namespace,service,instance)",
                          "intervalFactor": 2,
                          "legendFormat": "{{instance}} Failed"
                      }
                  ],
                  "title": "$integration: Notifications Send Rate",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "$datasource"
                  },
                  "description": "latency of notifications sent by the Alertmanager",
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "stacking": {
                                  "mode": "normal"
                              }
                          },
                          "unit": "s"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 9
                  },
                  "id": 6,
                  "options": {
                      "legend": {
                          "showLegend": false
                      },
                      "tooltip": {
                          "mode": "multi"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "repeat": "integration",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "histogram_quantile(0.99,\n  sum(rate(alertmanager_notification_latency_seconds_bucket{namespace=~\"$namespace\",service=~\"$service\", integration=\"$integration\"}[$__rate_interval])) by (le,namespace,service,instance)\n)\n",
                          "intervalFactor": 2,
                          "legendFormat": "{{instance}} 99th Percentile"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "histogram_quantile(0.50,\n  sum(rate(alertmanager_notification_latency_seconds_bucket{namespace=~\"$namespace\",service=~\"$service\", integration=\"$integration\"}[$__rate_interval])) by (le,namespace,service,instance)\n)\n",
                          "intervalFactor": 2,
                          "legendFormat": "{{instance}} Median"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "sum(rate(alertmanager_notification_latency_seconds_sum{namespace=~\"$namespace\",service=~\"$service\", integration=\"$integration\"}[$__rate_interval])) by (namespace,service,instance)\n/\nsum(rate(alertmanager_notification_latency_seconds_count{namespace=~\"$namespace\",service=~\"$service\", integration=\"$integration\"}[$__rate_interval])) by (namespace,service,instance)\n",
                          "intervalFactor": 2,
                          "legendFormat": "{{instance}} Average"
                      }
                  ],
                  "title": "$integration: Notification Duration",
                  "type": "timeseries"
              }
          ],
          "schemaVersion": 39,
          "tags": [
              "alertmanager-mixin"
          ],
          "templating": {
              "list": [
                  {
                      "current": {
                          "selected": false,
                          "text": "Prometheus",
                          "value": "Prometheus"
                      },
                      "hide": 0,
                      "label": "Data Source",
                      "name": "datasource",
                      "query": "prometheus",
                      "type": "datasource"
                  },
                  {
                      "current": {
                          "selected": false,
                          "text": "",
                          "value": ""
                      },
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "includeAll": false,
                      "label": "namespace",
                      "name": "namespace",
                      "query": "label_values(alertmanager_alerts, namespace)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  },
                  {
                      "current": {
                          "selected": false,
                          "text": "",
                          "value": ""
                      },
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "includeAll": false,
                      "label": "service",
                      "name": "service",
                      "query": "label_values(alertmanager_alerts, service)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  },
                  {
                      "current": {
                          "selected": false,
                          "text": "$__all",
                          "value": "$__all"
                      },
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 2,
                      "includeAll": true,
                      "name": "integration",
                      "query": "label_values(alertmanager_notifications_total{integration=~\".*\"}, integration)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  }
              ]
          },
          "time": {
              "from": "now-1h",
              "to": "now"
          },
          "timepicker": {
              "refresh_intervals": [
                  "30s"
              ]
          },
          "timezone": "utc",
          "title": "Alertmanager / Overview",
          "uid": "alertmanager-overview"
      }
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"alertmanager-overview.json":"{\n    \"graphTooltip\": 1,\n    \"panels\": [\n        {\n            \"collapsed\": false,\n            \"gridPos\": {\n                \"h\": 1,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 0\n            },\n            \"id\": 1,\n            \"panels\": [\n\n            ],\n            \"title\": \"Alerts\",\n            \"type\": \"row\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"$datasource\"\n            },\n            \"description\": \"current set of alerts stored in the Alertmanager\",\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"stacking\": {\n                            \"mode\": \"normal\"\n                        }\n                    },\n                    \"unit\": \"none\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 1\n            },\n            \"id\": 2,\n            \"options\": {\n                \"legend\": {\n                    \"showLegend\": false\n                },\n                \"tooltip\": {\n                    \"mode\": \"multi\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"$datasource\"\n                    },\n                    \"expr\": \"sum(alertmanager_alerts{namespace=~\\\"$namespace\\\",service=~\\\"$service\\\"}) by (namespace,service,instance)\",\n                    \"intervalFactor\": 2,\n                    \"legendFormat\": \"{{instance}}\"\n                }\n            ],\n            \"title\": \"Alerts\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"$datasource\"\n            },\n            \"description\": \"rate of successful and invalid alerts received by the Alertmanager\",\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"stacking\": {\n                            \"mode\": \"normal\"\n                        }\n                    },\n                    \"unit\": \"ops\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 1\n            },\n            \"id\": 3,\n            \"options\": {\n                \"legend\": {\n                    \"showLegend\": false\n                },\n                \"tooltip\": {\n                    \"mode\": \"multi\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"$datasource\"\n                    },\n                    \"expr\": \"sum(rate(alertmanager_alerts_received_total{namespace=~\\\"$namespace\\\",service=~\\\"$service\\\"}[$__rate_interval])) by (namespace,service,instance)\",\n                    \"intervalFactor\": 2,\n                    \"legendFormat\": \"{{instance}} Received\"\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"$datasource\"\n                    },\n                    \"expr\": \"sum(rate(alertmanager_alerts_invalid_total{namespace=~\\\"$namespace\\\",service=~\\\"$service\\\"}[$__rate_interval])) by (namespace,service,instance)\",\n                    \"intervalFactor\": 2,\n                    \"legendFormat\": \"{{instance}} Invalid\"\n                }\n            ],\n            \"title\": \"Alerts receive rate\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"collapsed\": false,\n            \"gridPos\": {\n                \"h\": 1,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 8\n            },\n            \"id\": 4,\n            \"panels\": [\n\n            ],\n            \"title\": \"Notifications\",\n            \"type\": \"row\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"$datasource\"\n            },\n            \"description\": \"rate of successful and invalid notifications sent by the Alertmanager\",\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"stacking\": {\n                            \"mode\": \"normal\"\n                        }\n                    },\n                    \"unit\": \"ops\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 9\n            },\n            \"id\": 5,\n            \"options\": {\n                \"legend\": {\n                    \"showLegend\": false\n                },\n                \"tooltip\": {\n                    \"mode\": \"multi\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"repeat\": \"integration\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"$datasource\"\n                    },\n                    \"expr\": \"sum(rate(alertmanager_notifications_total{namespace=~\\\"$namespace\\\",service=~\\\"$service\\\", integration=\\\"$integration\\\"}[$__rate_interval])) by (integration,namespace,service,instance)\",\n                    \"intervalFactor\": 2,\n                    \"legendFormat\": \"{{instance}} Total\"\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"$datasource\"\n                    },\n                    \"expr\": \"sum(rate(alertmanager_notifications_failed_total{namespace=~\\\"$namespace\\\",service=~\\\"$service\\\", integration=\\\"$integration\\\"}[$__rate_interval])) by (integration,namespace,service,instance)\",\n                    \"intervalFactor\": 2,\n                    \"legendFormat\": \"{{instance}} Failed\"\n                }\n            ],\n            \"title\": \"$integration: Notifications Send Rate\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"$datasource\"\n            },\n            \"description\": \"latency of notifications sent by the Alertmanager\",\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"stacking\": {\n                            \"mode\": \"normal\"\n                        }\n                    },\n                    \"unit\": \"s\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 9\n            },\n            \"id\": 6,\n            \"options\": {\n                \"legend\": {\n                    \"showLegend\": false\n                },\n                \"tooltip\": {\n                    \"mode\": \"multi\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"repeat\": \"integration\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"$datasource\"\n                    },\n                    \"expr\": \"histogram_quantile(0.99,\\n  sum(rate(alertmanager_notification_latency_seconds_bucket{namespace=~\\\"$namespace\\\",service=~\\\"$service\\\", integration=\\\"$integration\\\"}[$__rate_interval])) by (le,namespace,service,instance)\\n)\\n\",\n                    \"intervalFactor\": 2,\n                    \"legendFormat\": \"{{instance}} 99th Percentile\"\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"$datasource\"\n                    },\n                    \"expr\": \"histogram_quantile(0.50,\\n  sum(rate(alertmanager_notification_latency_seconds_bucket{namespace=~\\\"$namespace\\\",service=~\\\"$service\\\", integration=\\\"$integration\\\"}[$__rate_interval])) by (le,namespace,service,instance)\\n)\\n\",\n                    \"intervalFactor\": 2,\n                    \"legendFormat\": \"{{instance}} Median\"\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"$datasource\"\n                    },\n                    \"expr\": \"sum(rate(alertmanager_notification_latency_seconds_sum{namespace=~\\\"$namespace\\\",service=~\\\"$service\\\", integration=\\\"$integration\\\"}[$__rate_interval])) by (namespace,service,instance)\\n/\\nsum(rate(alertmanager_notification_latency_seconds_count{namespace=~\\\"$namespace\\\",service=~\\\"$service\\\", integration=\\\"$integration\\\"}[$__rate_interval])) by (namespace,service,instance)\\n\",\n                    \"intervalFactor\": 2,\n                    \"legendFormat\": \"{{instance}} Average\"\n                }\n            ],\n            \"title\": \"$integration: Notification Duration\",\n            \"type\": \"timeseries\"\n        }\n    ],\n    \"schemaVersion\": 39,\n    \"tags\": [\n        \"alertmanager-mixin\"\n    ],\n    \"templating\": {\n        \"list\": [\n            {\n                \"current\": {\n                    \"selected\": false,\n                    \"text\": \"Prometheus\",\n                    \"value\": \"Prometheus\"\n                },\n                \"hide\": 0,\n                \"label\": \"Data Source\",\n                \"name\": \"datasource\",\n                \"query\": \"prometheus\",\n                \"type\": \"datasource\"\n            },\n            {\n                \"current\": {\n                    \"selected\": false,\n                    \"text\": \"\",\n                    \"value\": \"\"\n                },\n                \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"${datasource}\"\n                },\n                \"includeAll\": false,\n                \"label\": \"namespace\",\n                \"name\": \"namespace\",\n                \"query\": \"label_values(alertmanager_alerts, namespace)\",\n                \"refresh\": 2,\n                \"sort\": 1,\n                \"type\": \"query\"\n            },\n            {\n                \"current\": {\n                    \"selected\": false,\n                    \"text\": \"\",\n                    \"value\": \"\"\n                },\n                \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"${datasource}\"\n                },\n                \"includeAll\": false,\n                \"label\": \"service\",\n                \"name\": \"service\",\n                \"query\": \"label_values(alertmanager_alerts, service)\",\n                \"refresh\": 2,\n                \"sort\": 1,\n                \"type\": \"query\"\n            },\n            {\n                \"current\": {\n                    \"selected\": false,\n                    \"text\": \"$__all\",\n                    \"value\": \"$__all\"\n                },\n                \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"${datasource}\"\n                },\n                \"hide\": 2,\n                \"includeAll\": true,\n                \"name\": \"integration\",\n                \"query\": \"label_values(alertmanager_notifications_total{integration=~\\\".*\\\"}, integration)\",\n                \"refresh\": 2,\n                \"sort\": 1,\n                \"type\": \"query\"\n            }\n        ]\n    },\n    \"time\": {\n        \"from\": \"now-1h\",\n        \"to\": \"now\"\n    },\n    \"timepicker\": {\n        \"refresh_intervals\": [\n            \"30s\"\n        ]\n    },\n    \"timezone\": \"utc\",\n    \"title\": \"Alertmanager / Overview\",\n    \"uid\": \"alertmanager-overview\"\n}"},"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"grafana","app.kubernetes.io/name":"grafana","app.kubernetes.io/part-of":"kube-prometheus","app.kubernetes.io/version":"11.3.1"},"name":"grafana-dashboard-alertmanager-overview","namespace":"monitoring"}}
    creationTimestamp: "2024-11-25T14:40:26Z"
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 11.3.1
    name: grafana-dashboard-alertmanager-overview
    namespace: monitoring
    resourceVersion: "3039601"
    uid: 0b5c168c-99e5-4d7d-bde0-d81f472f5216
- apiVersion: v1
  data:
    apiserver.json: |-
      {
          "editable": false,
          "links": [
              {
                  "asDropdown": true,
                  "includeVars": true,
                  "keepTime": true,
                  "tags": [
                      "kubernetes-mixin"
                  ],
                  "targetBlank": false,
                  "title": "Kubernetes",
                  "type": "dashboards"
              }
          ],
          "panels": [
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "description": "The SLO (service level objective) and other metrics displayed on this dashboard are for informational purposes only.",
                  "gridPos": {
                      "h": 2,
                      "w": 24,
                      "x": 0,
                      "y": 0
                  },
                  "id": 1,
                  "options": {
                      "content": "The SLO (service level objective) and other metrics displayed on this dashboard are for informational purposes only."
                  },
                  "pluginVersion": "v11.1.0",
                  "title": "Notice",
                  "type": "text"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "description": "How many percent of requests (both read and write) in 30 days have been answered successfully and fast enough?",
                  "fieldConfig": {
                      "defaults": {
                          "decimals": 3,
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 8,
                      "x": 0,
                      "y": 2
                  },
                  "id": 2,
                  "interval": "1m",
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "apiserver_request:availability30d{verb=\"all\", cluster=\"$cluster\"}"
                      }
                  ],
                  "title": "Availability (30d) > 99.000%",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "description": "How much error budget is left looking at our 0.990% availability guarantees?",
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 100
                          },
                          "decimals": 3,
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 16,
                      "x": 8,
                      "y": 2
                  },
                  "id": 3,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "100 * (apiserver_request:availability30d{verb=\"all\", cluster=\"$cluster\"} - 0.990000)",
                          "legendFormat": "errorbudget"
                      }
                  ],
                  "title": "ErrorBudget (30d) > 99.000%",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "description": "How many percent of read requests (LIST,GET) in 30 days have been answered successfully and fast enough?",
                  "fieldConfig": {
                      "defaults": {
                          "decimals": 3,
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 6,
                      "x": 0,
                      "y": 9
                  },
                  "id": 4,
                  "interval": "1m",
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "apiserver_request:availability30d{verb=\"read\", cluster=\"$cluster\"}"
                      }
                  ],
                  "title": "Read Availability (30d)",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "description": "How many read requests (LIST,GET) per second do the apiservers get by code?",
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 100,
                              "stacking": {
                                  "mode": "normal"
                              }
                          },
                          "unit": "reqps"
                      },
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/2../i"
                              },
                              "properties": [
                                  {
                                      "id": "color",
                                      "value": "#56A64B"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/3../i"
                              },
                              "properties": [
                                  {
                                      "id": "color",
                                      "value": "#F2CC0C"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/4../i"
                              },
                              "properties": [
                                  {
                                      "id": "color",
                                      "value": "#3274D9"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/5../i"
                              },
                              "properties": [
                                  {
                                      "id": "color",
                                      "value": "#E02F44"
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 6,
                      "x": 6,
                      "y": 9
                  },
                  "id": 5,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (code) (code_resource:apiserver_request_total:rate5m{verb=\"read\", cluster=\"$cluster\"})",
                          "legendFormat": "{{ code }}"
                      }
                  ],
                  "title": "Read SLI - Requests",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "description": "How many percent of read requests (LIST,GET) per second are returned with errors (5xx)?",
                  "fieldConfig": {
                      "defaults": {
                          "min": 0,
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 6,
                      "x": 12,
                      "y": 9
                  },
                  "id": 6,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (resource) (code_resource:apiserver_request_total:rate5m{verb=\"read\",code=~\"5..\", cluster=\"$cluster\"}) / sum by (resource) (code_resource:apiserver_request_total:rate5m{verb=\"read\", cluster=\"$cluster\"})",
                          "legendFormat": "{{ resource }}"
                      }
                  ],
                  "title": "Read SLI - Errors",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "description": "How many seconds is the 99th percentile for reading (LIST|GET) a given resource?",
                  "fieldConfig": {
                      "defaults": {
                          "unit": "s"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 6,
                      "x": 18,
                      "y": 9
                  },
                  "id": 7,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "cluster_quantile:apiserver_request_sli_duration_seconds:histogram_quantile{verb=\"read\", cluster=\"$cluster\"}",
                          "legendFormat": "{{ resource }}"
                      }
                  ],
                  "title": "Read SLI - Duration",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "description": "How many percent of write requests (POST|PUT|PATCH|DELETE) in 30 days have been answered successfully and fast enough?",
                  "fieldConfig": {
                      "defaults": {
                          "decimals": 3,
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 6,
                      "x": 0,
                      "y": 16
                  },
                  "id": 8,
                  "interval": "1m",
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "apiserver_request:availability30d{verb=\"write\", cluster=\"$cluster\"}"
                      }
                  ],
                  "title": "Write Availability (30d)",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "description": "How many write requests (POST|PUT|PATCH|DELETE) per second do the apiservers get by code?",
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 100,
                              "stacking": {
                                  "mode": "normal"
                              }
                          },
                          "unit": "reqps"
                      },
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/2../i"
                              },
                              "properties": [
                                  {
                                      "id": "color",
                                      "value": "#56A64B"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/3../i"
                              },
                              "properties": [
                                  {
                                      "id": "color",
                                      "value": "#F2CC0C"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/4../i"
                              },
                              "properties": [
                                  {
                                      "id": "color",
                                      "value": "#3274D9"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/5../i"
                              },
                              "properties": [
                                  {
                                      "id": "color",
                                      "value": "#E02F44"
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 6,
                      "x": 6,
                      "y": 16
                  },
                  "id": 9,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (code) (code_resource:apiserver_request_total:rate5m{verb=\"write\", cluster=\"$cluster\"})",
                          "legendFormat": "{{ code }}"
                      }
                  ],
                  "title": "Write SLI - Requests",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "description": "How many percent of write requests (POST|PUT|PATCH|DELETE) per second are returned with errors (5xx)?",
                  "fieldConfig": {
                      "defaults": {
                          "min": 0,
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 6,
                      "x": 12,
                      "y": 16
                  },
                  "id": 10,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (resource) (code_resource:apiserver_request_total:rate5m{verb=\"write\",code=~\"5..\", cluster=\"$cluster\"}) / sum by (resource) (code_resource:apiserver_request_total:rate5m{verb=\"write\", cluster=\"$cluster\"})",
                          "legendFormat": "{{ resource }}"
                      }
                  ],
                  "title": "Write SLI - Errors",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "description": "How many seconds is the 99th percentile for writing (POST|PUT|PATCH|DELETE) a given resource?",
                  "fieldConfig": {
                      "defaults": {
                          "unit": "s"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 6,
                      "x": 18,
                      "y": 16
                  },
                  "id": 11,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "cluster_quantile:apiserver_request_sli_duration_seconds:histogram_quantile{verb=\"write\", cluster=\"$cluster\"}",
                          "legendFormat": "{{ resource }}"
                      }
                  ],
                  "title": "Write SLI - Duration",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "min": 0,
                          "unit": "ops"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 23
                  },
                  "id": 12,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "placement": "right",
                          "showLegend": false
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(workqueue_adds_total{job=\"apiserver\", instance=~\"$instance\", cluster=\"$cluster\"}[$__rate_interval])) by (instance, name)",
                          "legendFormat": "{{instance}} {{name}}"
                      }
                  ],
                  "title": "Work Queue Add Rate",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "min": 0,
                          "unit": "short"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 23
                  },
                  "id": 13,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "placement": "right",
                          "showLegend": false
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(workqueue_depth{job=\"apiserver\", instance=~\"$instance\", cluster=\"$cluster\"}[$__rate_interval])) by (instance, name)",
                          "legendFormat": "{{instance}} {{name}}"
                      }
                  ],
                  "title": "Work Queue Depth",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "min": 0,
                          "unit": "s"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 30
                  },
                  "id": 14,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "histogram_quantile(0.99, sum(rate(workqueue_queue_duration_seconds_bucket{job=\"apiserver\", instance=~\"$instance\", cluster=\"$cluster\"}[$__rate_interval])) by (instance, name, le))",
                          "legendFormat": "{{instance}} {{name}}"
                      }
                  ],
                  "title": "Work Queue Latency",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "bytes"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 8,
                      "x": 0,
                      "y": 37
                  },
                  "id": 15,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "process_resident_memory_bytes{job=\"apiserver\",instance=~\"$instance\", cluster=\"$cluster\"}",
                          "legendFormat": "{{instance}}"
                      }
                  ],
                  "title": "Memory",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "min": 0,
                          "unit": "short"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 8,
                      "x": 8,
                      "y": 37
                  },
                  "id": 16,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "rate(process_cpu_seconds_total{job=\"apiserver\",instance=~\"$instance\", cluster=\"$cluster\"}[$__rate_interval])",
                          "legendFormat": "{{instance}}"
                      }
                  ],
                  "title": "CPU usage",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "short"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 8,
                      "x": 16,
                      "y": 37
                  },
                  "id": 17,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "go_goroutines{job=\"apiserver\",instance=~\"$instance\", cluster=\"$cluster\"}",
                          "legendFormat": "{{instance}}"
                      }
                  ],
                  "title": "Goroutines",
                  "type": "timeseries"
              }
          ],
          "refresh": "10s",
          "schemaVersion": 39,
          "tags": [
              "kubernetes-mixin"
          ],
          "templating": {
              "list": [
                  {
                      "current": {
                          "selected": true,
                          "text": "default",
                          "value": "default"
                      },
                      "hide": 0,
                      "label": "Data source",
                      "name": "datasource",
                      "query": "prometheus",
                      "regex": "",
                      "type": "datasource"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "cluster",
                      "name": "cluster",
                      "query": "label_values(up{job=\"apiserver\"}, cluster)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "includeAll": true,
                      "name": "instance",
                      "query": "label_values(up{job=\"apiserver\", cluster=\"$cluster\"}, instance)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  }
              ]
          },
          "time": {
              "from": "now-1h",
              "to": "now"
          },
          "timezone": "UTC",
          "title": "Kubernetes / API server",
          "uid": "09ec8aa1e996d6ffcd6817bbaff4db1b"
      }
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"apiserver.json":"{\n    \"editable\": false,\n    \"links\": [\n        {\n            \"asDropdown\": true,\n            \"includeVars\": true,\n            \"keepTime\": true,\n            \"tags\": [\n                \"kubernetes-mixin\"\n            ],\n            \"targetBlank\": false,\n            \"title\": \"Kubernetes\",\n            \"type\": \"dashboards\"\n        }\n    ],\n    \"panels\": [\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"description\": \"The SLO (service level objective) and other metrics displayed on this dashboard are for informational purposes only.\",\n            \"gridPos\": {\n                \"h\": 2,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 0\n            },\n            \"id\": 1,\n            \"options\": {\n                \"content\": \"The SLO (service level objective) and other metrics displayed on this dashboard are for informational purposes only.\"\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"title\": \"Notice\",\n            \"type\": \"text\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"description\": \"How many percent of requests (both read and write) in 30 days have been answered successfully and fast enough?\",\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"decimals\": 3,\n                    \"unit\": \"percentunit\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 8,\n                \"x\": 0,\n                \"y\": 2\n            },\n            \"id\": 2,\n            \"interval\": \"1m\",\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"apiserver_request:availability30d{verb=\\\"all\\\", cluster=\\\"$cluster\\\"}\"\n                }\n            ],\n            \"title\": \"Availability (30d) \u003e 99.000%\",\n            \"type\": \"stat\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"description\": \"How much error budget is left looking at our 0.990% availability guarantees?\",\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 100\n                    },\n                    \"decimals\": 3,\n                    \"unit\": \"percentunit\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 16,\n                \"x\": 8,\n                \"y\": 2\n            },\n            \"id\": 3,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"100 * (apiserver_request:availability30d{verb=\\\"all\\\", cluster=\\\"$cluster\\\"} - 0.990000)\",\n                    \"legendFormat\": \"errorbudget\"\n                }\n            ],\n            \"title\": \"ErrorBudget (30d) \u003e 99.000%\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"description\": \"How many percent of read requests (LIST,GET) in 30 days have been answered successfully and fast enough?\",\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"decimals\": 3,\n                    \"unit\": \"percentunit\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 6,\n                \"x\": 0,\n                \"y\": 9\n            },\n            \"id\": 4,\n            \"interval\": \"1m\",\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"apiserver_request:availability30d{verb=\\\"read\\\", cluster=\\\"$cluster\\\"}\"\n                }\n            ],\n            \"title\": \"Read Availability (30d)\",\n            \"type\": \"stat\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"description\": \"How many read requests (LIST,GET) per second do the apiservers get by code?\",\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 100,\n                        \"stacking\": {\n                            \"mode\": \"normal\"\n                        }\n                    },\n                    \"unit\": \"reqps\"\n                },\n                \"overrides\": [\n                    {\n                        \"matcher\": {\n                            \"id\": \"byRegexp\",\n                            \"options\": \"/2../i\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"color\",\n                                \"value\": \"#56A64B\"\n                            }\n                        ]\n                    },\n                    {\n                        \"matcher\": {\n                            \"id\": \"byRegexp\",\n                            \"options\": \"/3../i\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"color\",\n                                \"value\": \"#F2CC0C\"\n                            }\n                        ]\n                    },\n                    {\n                        \"matcher\": {\n                            \"id\": \"byRegexp\",\n                            \"options\": \"/4../i\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"color\",\n                                \"value\": \"#3274D9\"\n                            }\n                        ]\n                    },\n                    {\n                        \"matcher\": {\n                            \"id\": \"byRegexp\",\n                            \"options\": \"/5../i\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"color\",\n                                \"value\": \"#E02F44\"\n                            }\n                        ]\n                    }\n                ]\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 6,\n                \"x\": 6,\n                \"y\": 9\n            },\n            \"id\": 5,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum by (code) (code_resource:apiserver_request_total:rate5m{verb=\\\"read\\\", cluster=\\\"$cluster\\\"})\",\n                    \"legendFormat\": \"{{ code }}\"\n                }\n            ],\n            \"title\": \"Read SLI - Requests\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"description\": \"How many percent of read requests (LIST,GET) per second are returned with errors (5xx)?\",\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"min\": 0,\n                    \"unit\": \"percentunit\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 6,\n                \"x\": 12,\n                \"y\": 9\n            },\n            \"id\": 6,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum by (resource) (code_resource:apiserver_request_total:rate5m{verb=\\\"read\\\",code=~\\\"5..\\\", cluster=\\\"$cluster\\\"}) / sum by (resource) (code_resource:apiserver_request_total:rate5m{verb=\\\"read\\\", cluster=\\\"$cluster\\\"})\",\n                    \"legendFormat\": \"{{ resource }}\"\n                }\n            ],\n            \"title\": \"Read SLI - Errors\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"description\": \"How many seconds is the 99th percentile for reading (LIST|GET) a given resource?\",\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"unit\": \"s\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 6,\n                \"x\": 18,\n                \"y\": 9\n            },\n            \"id\": 7,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"cluster_quantile:apiserver_request_sli_duration_seconds:histogram_quantile{verb=\\\"read\\\", cluster=\\\"$cluster\\\"}\",\n                    \"legendFormat\": \"{{ resource }}\"\n                }\n            ],\n            \"title\": \"Read SLI - Duration\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"description\": \"How many percent of write requests (POST|PUT|PATCH|DELETE) in 30 days have been answered successfully and fast enough?\",\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"decimals\": 3,\n                    \"unit\": \"percentunit\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 6,\n                \"x\": 0,\n                \"y\": 16\n            },\n            \"id\": 8,\n            \"interval\": \"1m\",\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"apiserver_request:availability30d{verb=\\\"write\\\", cluster=\\\"$cluster\\\"}\"\n                }\n            ],\n            \"title\": \"Write Availability (30d)\",\n            \"type\": \"stat\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"description\": \"How many write requests (POST|PUT|PATCH|DELETE) per second do the apiservers get by code?\",\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 100,\n                        \"stacking\": {\n                            \"mode\": \"normal\"\n                        }\n                    },\n                    \"unit\": \"reqps\"\n                },\n                \"overrides\": [\n                    {\n                        \"matcher\": {\n                            \"id\": \"byRegexp\",\n                            \"options\": \"/2../i\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"color\",\n                                \"value\": \"#56A64B\"\n                            }\n                        ]\n                    },\n                    {\n                        \"matcher\": {\n                            \"id\": \"byRegexp\",\n                            \"options\": \"/3../i\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"color\",\n                                \"value\": \"#F2CC0C\"\n                            }\n                        ]\n                    },\n                    {\n                        \"matcher\": {\n                            \"id\": \"byRegexp\",\n                            \"options\": \"/4../i\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"color\",\n                                \"value\": \"#3274D9\"\n                            }\n                        ]\n                    },\n                    {\n                        \"matcher\": {\n                            \"id\": \"byRegexp\",\n                            \"options\": \"/5../i\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"color\",\n                                \"value\": \"#E02F44\"\n                            }\n                        ]\n                    }\n                ]\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 6,\n                \"x\": 6,\n                \"y\": 16\n            },\n            \"id\": 9,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum by (code) (code_resource:apiserver_request_total:rate5m{verb=\\\"write\\\", cluster=\\\"$cluster\\\"})\",\n                    \"legendFormat\": \"{{ code }}\"\n                }\n            ],\n            \"title\": \"Write SLI - Requests\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"description\": \"How many percent of write requests (POST|PUT|PATCH|DELETE) per second are returned with errors (5xx)?\",\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"min\": 0,\n                    \"unit\": \"percentunit\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 6,\n                \"x\": 12,\n                \"y\": 16\n            },\n            \"id\": 10,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum by (resource) (code_resource:apiserver_request_total:rate5m{verb=\\\"write\\\",code=~\\\"5..\\\", cluster=\\\"$cluster\\\"}) / sum by (resource) (code_resource:apiserver_request_total:rate5m{verb=\\\"write\\\", cluster=\\\"$cluster\\\"})\",\n                    \"legendFormat\": \"{{ resource }}\"\n                }\n            ],\n            \"title\": \"Write SLI - Errors\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"description\": \"How many seconds is the 99th percentile for writing (POST|PUT|PATCH|DELETE) a given resource?\",\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"unit\": \"s\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 6,\n                \"x\": 18,\n                \"y\": 16\n            },\n            \"id\": 11,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"cluster_quantile:apiserver_request_sli_duration_seconds:histogram_quantile{verb=\\\"write\\\", cluster=\\\"$cluster\\\"}\",\n                    \"legendFormat\": \"{{ resource }}\"\n                }\n            ],\n            \"title\": \"Write SLI - Duration\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"min\": 0,\n                    \"unit\": \"ops\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 23\n            },\n            \"id\": 12,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"placement\": \"right\",\n                    \"showLegend\": false\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(workqueue_adds_total{job=\\\"apiserver\\\", instance=~\\\"$instance\\\", cluster=\\\"$cluster\\\"}[$__rate_interval])) by (instance, name)\",\n                    \"legendFormat\": \"{{instance}} {{name}}\"\n                }\n            ],\n            \"title\": \"Work Queue Add Rate\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"min\": 0,\n                    \"unit\": \"short\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 23\n            },\n            \"id\": 13,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"placement\": \"right\",\n                    \"showLegend\": false\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(workqueue_depth{job=\\\"apiserver\\\", instance=~\\\"$instance\\\", cluster=\\\"$cluster\\\"}[$__rate_interval])) by (instance, name)\",\n                    \"legendFormat\": \"{{instance}} {{name}}\"\n                }\n            ],\n            \"title\": \"Work Queue Depth\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"min\": 0,\n                    \"unit\": \"s\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 30\n            },\n            \"id\": 14,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"histogram_quantile(0.99, sum(rate(workqueue_queue_duration_seconds_bucket{job=\\\"apiserver\\\", instance=~\\\"$instance\\\", cluster=\\\"$cluster\\\"}[$__rate_interval])) by (instance, name, le))\",\n                    \"legendFormat\": \"{{instance}} {{name}}\"\n                }\n            ],\n            \"title\": \"Work Queue Latency\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"unit\": \"bytes\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 8,\n                \"x\": 0,\n                \"y\": 37\n            },\n            \"id\": 15,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"process_resident_memory_bytes{job=\\\"apiserver\\\",instance=~\\\"$instance\\\", cluster=\\\"$cluster\\\"}\",\n                    \"legendFormat\": \"{{instance}}\"\n                }\n            ],\n            \"title\": \"Memory\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"min\": 0,\n                    \"unit\": \"short\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 8,\n                \"x\": 8,\n                \"y\": 37\n            },\n            \"id\": 16,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"rate(process_cpu_seconds_total{job=\\\"apiserver\\\",instance=~\\\"$instance\\\", cluster=\\\"$cluster\\\"}[$__rate_interval])\",\n                    \"legendFormat\": \"{{instance}}\"\n                }\n            ],\n            \"title\": \"CPU usage\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"unit\": \"short\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 8,\n                \"x\": 16,\n                \"y\": 37\n            },\n            \"id\": 17,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"go_goroutines{job=\\\"apiserver\\\",instance=~\\\"$instance\\\", cluster=\\\"$cluster\\\"}\",\n                    \"legendFormat\": \"{{instance}}\"\n                }\n            ],\n            \"title\": \"Goroutines\",\n            \"type\": \"timeseries\"\n        }\n    ],\n    \"refresh\": \"10s\",\n    \"schemaVersion\": 39,\n    \"tags\": [\n        \"kubernetes-mixin\"\n    ],\n    \"templating\": {\n        \"list\": [\n            {\n                \"current\": {\n                    \"selected\": true,\n                    \"text\": \"default\",\n                    \"value\": \"default\"\n                },\n                \"hide\": 0,\n                \"label\": \"Data source\",\n                \"name\": \"datasource\",\n                \"query\": \"prometheus\",\n                \"regex\": \"\",\n                \"type\": \"datasource\"\n            },\n            {\n                \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"${datasource}\"\n                },\n                \"hide\": 0,\n                \"label\": \"cluster\",\n                \"name\": \"cluster\",\n                \"query\": \"label_values(up{job=\\\"apiserver\\\"}, cluster)\",\n                \"refresh\": 2,\n                \"sort\": 1,\n                \"type\": \"query\"\n            },\n            {\n                \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"${datasource}\"\n                },\n                \"hide\": 0,\n                \"includeAll\": true,\n                \"name\": \"instance\",\n                \"query\": \"label_values(up{job=\\\"apiserver\\\", cluster=\\\"$cluster\\\"}, instance)\",\n                \"refresh\": 2,\n                \"sort\": 1,\n                \"type\": \"query\"\n            }\n        ]\n    },\n    \"time\": {\n        \"from\": \"now-1h\",\n        \"to\": \"now\"\n    },\n    \"timezone\": \"UTC\",\n    \"title\": \"Kubernetes / API server\",\n    \"uid\": \"09ec8aa1e996d6ffcd6817bbaff4db1b\"\n}"},"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"grafana","app.kubernetes.io/name":"grafana","app.kubernetes.io/part-of":"kube-prometheus","app.kubernetes.io/version":"11.3.1"},"name":"grafana-dashboard-apiserver","namespace":"monitoring"}}
    creationTimestamp: "2024-11-25T14:40:26Z"
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 11.3.1
    name: grafana-dashboard-apiserver
    namespace: monitoring
    resourceVersion: "3039606"
    uid: 580ddcea-4e69-4a56-8e87-f94c45f93170
- apiVersion: v1
  data:
    cluster-total.json: |-
      {
          "editable": false,
          "links": [
              {
                  "asDropdown": true,
                  "includeVars": true,
                  "keepTime": true,
                  "tags": [
                      "kubernetes-mixin"
                  ],
                  "targetBlank": false,
                  "title": "Kubernetes",
                  "type": "dashboards"
              }
          ],
          "panels": [
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "showPoints": "never"
                          },
                          "unit": "binBps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 0,
                      "y": 0
                  },
                  "id": 1,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (namespace) (\n    rate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Current Rate of Bytes Received",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "showPoints": "never"
                          },
                          "unit": "binBps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 12,
                      "y": 0
                  },
                  "id": 2,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (namespace) (\n    rate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Current Rate of Bytes Transmitted",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/Bytes/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "binBps"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/Packets/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "pps"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Namespace"
                              },
                              "properties": [
                                  {
                                      "id": "links",
                                      "value": [
                                          {
                                              "title": "Drill down",
                                              "url": "/d/8b7a8b326d7a6f1f04244066368c67af/kubernetes-networking-namespace-pods?${datasource:queryparam}&var-cluster=${cluster}&var-namespace=${__data.fields.Namespace}"
                                          }
                                      ]
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 24,
                      "x": 0,
                      "y": 9
                  },
                  "id": 3,
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (namespace) (\n    rate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (namespace) (\n    rate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "avg by (namespace) (\n    rate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "avg by (namespace) (\n    rate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (namespace) (\n    rate(container_network_receive_packets_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (namespace) (\n    rate(container_network_transmit_packets_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (namespace) (\n    rate(container_network_receive_packets_dropped_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (namespace) (\n    rate(container_network_transmit_packets_dropped_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "format": "table",
                          "instant": true
                      }
                  ],
                  "title": "Current Status",
                  "transformations": [
                      {
                          "id": "joinByField",
                          "options": {
                              "byField": "namespace",
                              "mode": "outer"
                          }
                      },
                      {
                          "id": "organize",
                          "options": {
                              "excludeByName": {
                                  "Time": true,
                                  "Time 1": true,
                                  "Time 2": true,
                                  "Time 3": true,
                                  "Time 4": true,
                                  "Time 5": true,
                                  "Time 6": true,
                                  "Time 7": true,
                                  "Time 8": true
                              },
                              "indexByName": {
                                  "Time 1": 0,
                                  "Time 2": 1,
                                  "Time 3": 2,
                                  "Time 4": 3,
                                  "Time 5": 4,
                                  "Time 6": 5,
                                  "Time 7": 6,
                                  "Time 8": 7,
                                  "Value #A": 9,
                                  "Value #B": 10,
                                  "Value #C": 11,
                                  "Value #D": 12,
                                  "Value #E": 13,
                                  "Value #F": 14,
                                  "Value #G": 15,
                                  "Value #H": 16,
                                  "namespace": 8
                              },
                              "renameByName": {
                                  "Value #A": "Rx Bytes",
                                  "Value #B": "Tx Bytes",
                                  "Value #C": "Rx Bytes (Avg)",
                                  "Value #D": "Tx Bytes (Avg)",
                                  "Value #E": "Rx Packets",
                                  "Value #F": "Tx Packets",
                                  "Value #G": "Rx Packets Dropped",
                                  "Value #H": "Tx Packets Dropped",
                                  "namespace": "Namespace"
                              }
                          }
                      }
                  ],
                  "type": "table"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "showPoints": "never"
                          },
                          "unit": "binBps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 0,
                      "y": 18
                  },
                  "id": 4,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "avg by (namespace) (\n    rate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Average Rate of Bytes Received",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "showPoints": "never"
                          },
                          "unit": "binBps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 12,
                      "y": 18
                  },
                  "id": 5,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "avg by (namespace) (\n    rate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Average Rate of Bytes Transmitted",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "showPoints": "never"
                          },
                          "unit": "binBps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 0,
                      "y": 27
                  },
                  "id": 6,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (namespace) (\n    rate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Receive Bandwidth",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "showPoints": "never"
                          },
                          "unit": "binBps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 12,
                      "y": 27
                  },
                  "id": 7,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (namespace) (\n    rate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Transmit Bandwidth",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "showPoints": "never"
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 0,
                      "y": 36
                  },
                  "id": 8,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (namespace) (\n    rate(container_network_receive_packets_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Received Packets",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "showPoints": "never"
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 12,
                      "y": 36
                  },
                  "id": 9,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (namespace) (\n    rate(container_network_transmit_packets_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Transmitted Packets",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "showPoints": "never"
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 0,
                      "y": 45
                  },
                  "id": 10,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (namespace) (\n    rate(container_network_receive_packets_dropped_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Received Packets Dropped",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "showPoints": "never"
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 12,
                      "y": 45
                  },
                  "id": 11,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (namespace) (\n    rate(container_network_transmit_packets_dropped_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Transmitted Packets Dropped",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "showPoints": "never"
                          },
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 0,
                      "y": 54
                  },
                  "id": 12,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (instance) (\n    rate(node_netstat_Tcp_RetransSegs{cluster=\"$cluster\"}[$__rate_interval]) / rate(node_netstat_Tcp_OutSegs{cluster=\"$cluster\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of TCP Retransmits out of all sent segments",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "showPoints": "never"
                          },
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 12,
                      "y": 54
                  },
                  "id": 13,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (instance) (\n    rate(node_netstat_TcpExt_TCPSynRetrans{cluster=\"$cluster\"}[$__rate_interval]) / rate(node_netstat_Tcp_RetransSegs{cluster=\"$cluster\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of TCP SYN Retransmits out of all retransmits",
                  "type": "timeseries"
              }
          ],
          "refresh": "10s",
          "schemaVersion": 39,
          "tags": [
              "kubernetes-mixin"
          ],
          "templating": {
              "list": [
                  {
                      "current": {
                          "selected": true,
                          "text": "default",
                          "value": "default"
                      },
                      "hide": 0,
                      "label": "Data source",
                      "name": "datasource",
                      "query": "prometheus",
                      "regex": "",
                      "type": "datasource"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "cluster",
                      "name": "cluster",
                      "query": "label_values(up{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\"}, cluster)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  }
              ]
          },
          "time": {
              "from": "now-1h",
              "to": "now"
          },
          "timezone": "UTC",
          "title": "Kubernetes / Networking / Cluster",
          "uid": "ff635a025bcfea7bc3dd4f508990a3e9"
      }
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"cluster-total.json":"{\n    \"editable\": false,\n    \"links\": [\n        {\n            \"asDropdown\": true,\n            \"includeVars\": true,\n            \"keepTime\": true,\n            \"tags\": [\n                \"kubernetes-mixin\"\n            ],\n            \"targetBlank\": false,\n            \"title\": \"Kubernetes\",\n            \"type\": \"dashboards\"\n        }\n    ],\n    \"panels\": [\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"showPoints\": \"never\"\n                    },\n                    \"unit\": \"binBps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 0\n            },\n            \"id\": 1,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum by (namespace) (\\n    rate(container_network_receive_bytes_total{cluster=\\\"$cluster\\\",namespace!=\\\"\\\"}[$__rate_interval])\\n  * on (cluster,namespace,pod) group_left ()\\n    topk by (cluster,namespace,pod) (\\n      1,\\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\\\"false\\\"})\\n    )\\n)\\n\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Current Rate of Bytes Received\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"showPoints\": \"never\"\n                    },\n                    \"unit\": \"binBps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 0\n            },\n            \"id\": 2,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum by (namespace) (\\n    rate(container_network_transmit_bytes_total{cluster=\\\"$cluster\\\",namespace!=\\\"\\\"}[$__rate_interval])\\n  * on (cluster,namespace,pod) group_left ()\\n    topk by (cluster,namespace,pod) (\\n      1,\\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\\\"false\\\"})\\n    )\\n)\\n\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Current Rate of Bytes Transmitted\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"overrides\": [\n                    {\n                        \"matcher\": {\n                            \"id\": \"byRegexp\",\n                            \"options\": \"/Bytes/\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"unit\",\n                                \"value\": \"binBps\"\n                            }\n                        ]\n                    },\n                    {\n                        \"matcher\": {\n                            \"id\": \"byRegexp\",\n                            \"options\": \"/Packets/\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"unit\",\n                                \"value\": \"pps\"\n                            }\n                        ]\n                    },\n                    {\n                        \"matcher\": {\n                            \"id\": \"byName\",\n                            \"options\": \"Namespace\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"links\",\n                                \"value\": [\n                                    {\n                                        \"title\": \"Drill down\",\n                                        \"url\": \"/d/8b7a8b326d7a6f1f04244066368c67af/kubernetes-networking-namespace-pods?${datasource:queryparam}\u0026var-cluster=${cluster}\u0026var-namespace=${__data.fields.Namespace}\"\n                                    }\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            },\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 9\n            },\n            \"id\": 3,\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum by (namespace) (\\n    rate(container_network_receive_bytes_total{cluster=\\\"$cluster\\\",namespace!=\\\"\\\"}[$__rate_interval])\\n  * on (cluster,namespace,pod) group_left ()\\n    topk by (cluster,namespace,pod) (\\n      1,\\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\\\"false\\\"})\\n    )\\n)\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum by (namespace) (\\n    rate(container_network_transmit_bytes_total{cluster=\\\"$cluster\\\",namespace!=\\\"\\\"}[$__rate_interval])\\n  * on (cluster,namespace,pod) group_left ()\\n    topk by (cluster,namespace,pod) (\\n      1,\\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\\\"false\\\"})\\n    )\\n)\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"avg by (namespace) (\\n    rate(container_network_receive_bytes_total{cluster=\\\"$cluster\\\",namespace!=\\\"\\\"}[$__rate_interval])\\n  * on (cluster,namespace,pod) group_left ()\\n    topk by (cluster,namespace,pod) (\\n      1,\\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\\\"false\\\"})\\n    )\\n)\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"avg by (namespace) (\\n    rate(container_network_transmit_bytes_total{cluster=\\\"$cluster\\\",namespace!=\\\"\\\"}[$__rate_interval])\\n  * on (cluster,namespace,pod) group_left ()\\n    topk by (cluster,namespace,pod) (\\n      1,\\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\\\"false\\\"})\\n    )\\n)\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum by (namespace) (\\n    rate(container_network_receive_packets_total{cluster=\\\"$cluster\\\",namespace!=\\\"\\\"}[$__rate_interval])\\n  * on (cluster,namespace,pod) group_left ()\\n    topk by (cluster,namespace,pod) (\\n      1,\\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\\\"false\\\"})\\n    )\\n)\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum by (namespace) (\\n    rate(container_network_transmit_packets_total{cluster=\\\"$cluster\\\",namespace!=\\\"\\\"}[$__rate_interval])\\n  * on (cluster,namespace,pod) group_left ()\\n    topk by (cluster,namespace,pod) (\\n      1,\\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\\\"false\\\"})\\n    )\\n)\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum by (namespace) (\\n    rate(container_network_receive_packets_dropped_total{cluster=\\\"$cluster\\\",namespace!=\\\"\\\"}[$__rate_interval])\\n  * on (cluster,namespace,pod) group_left ()\\n    topk by (cluster,namespace,pod) (\\n      1,\\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\\\"false\\\"})\\n    )\\n)\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum by (namespace) (\\n    rate(container_network_transmit_packets_dropped_total{cluster=\\\"$cluster\\\",namespace!=\\\"\\\"}[$__rate_interval])\\n  * on (cluster,namespace,pod) group_left ()\\n    topk by (cluster,namespace,pod) (\\n      1,\\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\\\"false\\\"})\\n    )\\n)\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                }\n            ],\n            \"title\": \"Current Status\",\n            \"transformations\": [\n                {\n                    \"id\": \"joinByField\",\n                    \"options\": {\n                        \"byField\": \"namespace\",\n                        \"mode\": \"outer\"\n                    }\n                },\n                {\n                    \"id\": \"organize\",\n                    \"options\": {\n                        \"excludeByName\": {\n                            \"Time\": true,\n                            \"Time 1\": true,\n                            \"Time 2\": true,\n                            \"Time 3\": true,\n                            \"Time 4\": true,\n                            \"Time 5\": true,\n                            \"Time 6\": true,\n                            \"Time 7\": true,\n                            \"Time 8\": true\n                        },\n                        \"indexByName\": {\n                            \"Time 1\": 0,\n                            \"Time 2\": 1,\n                            \"Time 3\": 2,\n                            \"Time 4\": 3,\n                            \"Time 5\": 4,\n                            \"Time 6\": 5,\n                            \"Time 7\": 6,\n                            \"Time 8\": 7,\n                            \"Value #A\": 9,\n                            \"Value #B\": 10,\n                            \"Value #C\": 11,\n                            \"Value #D\": 12,\n                            \"Value #E\": 13,\n                            \"Value #F\": 14,\n                            \"Value #G\": 15,\n                            \"Value #H\": 16,\n                            \"namespace\": 8\n                        },\n                        \"renameByName\": {\n                            \"Value #A\": \"Rx Bytes\",\n                            \"Value #B\": \"Tx Bytes\",\n                            \"Value #C\": \"Rx Bytes (Avg)\",\n                            \"Value #D\": \"Tx Bytes (Avg)\",\n                            \"Value #E\": \"Rx Packets\",\n                            \"Value #F\": \"Tx Packets\",\n                            \"Value #G\": \"Rx Packets Dropped\",\n                            \"Value #H\": \"Tx Packets Dropped\",\n                            \"namespace\": \"Namespace\"\n                        }\n                    }\n                }\n            ],\n            \"type\": \"table\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"showPoints\": \"never\"\n                    },\n                    \"unit\": \"binBps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 18\n            },\n            \"id\": 4,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"avg by (namespace) (\\n    rate(container_network_receive_bytes_total{cluster=\\\"$cluster\\\",namespace!=\\\"\\\"}[$__rate_interval])\\n  * on (cluster,namespace,pod) group_left ()\\n    topk by (cluster,namespace,pod) (\\n      1,\\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\\\"false\\\"})\\n    )\\n)\\n\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Average Rate of Bytes Received\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"showPoints\": \"never\"\n                    },\n                    \"unit\": \"binBps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 18\n            },\n            \"id\": 5,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"avg by (namespace) (\\n    rate(container_network_transmit_bytes_total{cluster=\\\"$cluster\\\",namespace!=\\\"\\\"}[$__rate_interval])\\n  * on (cluster,namespace,pod) group_left ()\\n    topk by (cluster,namespace,pod) (\\n      1,\\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\\\"false\\\"})\\n    )\\n)\\n\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Average Rate of Bytes Transmitted\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"showPoints\": \"never\"\n                    },\n                    \"unit\": \"binBps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 27\n            },\n            \"id\": 6,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum by (namespace) (\\n    rate(container_network_receive_bytes_total{cluster=\\\"$cluster\\\",namespace!=\\\"\\\"}[$__rate_interval])\\n  * on (cluster,namespace,pod) group_left ()\\n    topk by (cluster,namespace,pod) (\\n      1,\\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\\\"false\\\"})\\n    )\\n)\\n\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Receive Bandwidth\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"showPoints\": \"never\"\n                    },\n                    \"unit\": \"binBps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 27\n            },\n            \"id\": 7,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum by (namespace) (\\n    rate(container_network_transmit_bytes_total{cluster=\\\"$cluster\\\",namespace!=\\\"\\\"}[$__rate_interval])\\n  * on (cluster,namespace,pod) group_left ()\\n    topk by (cluster,namespace,pod) (\\n      1,\\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\\\"false\\\"})\\n    )\\n)\\n\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Transmit Bandwidth\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"showPoints\": \"never\"\n                    },\n                    \"unit\": \"pps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 36\n            },\n            \"id\": 8,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum by (namespace) (\\n    rate(container_network_receive_packets_total{cluster=\\\"$cluster\\\",namespace!=\\\"\\\"}[$__rate_interval])\\n  * on (cluster,namespace,pod) group_left ()\\n    topk by (cluster,namespace,pod) (\\n      1,\\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\\\"false\\\"})\\n    )\\n)\\n\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Rate of Received Packets\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"showPoints\": \"never\"\n                    },\n                    \"unit\": \"pps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 36\n            },\n            \"id\": 9,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum by (namespace) (\\n    rate(container_network_transmit_packets_total{cluster=\\\"$cluster\\\",namespace!=\\\"\\\"}[$__rate_interval])\\n  * on (cluster,namespace,pod) group_left ()\\n    topk by (cluster,namespace,pod) (\\n      1,\\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\\\"false\\\"})\\n    )\\n)\\n\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Rate of Transmitted Packets\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"showPoints\": \"never\"\n                    },\n                    \"unit\": \"pps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 45\n            },\n            \"id\": 10,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum by (namespace) (\\n    rate(container_network_receive_packets_dropped_total{cluster=\\\"$cluster\\\",namespace!=\\\"\\\"}[$__rate_interval])\\n  * on (cluster,namespace,pod) group_left ()\\n    topk by (cluster,namespace,pod) (\\n      1,\\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\\\"false\\\"})\\n    )\\n)\\n\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Rate of Received Packets Dropped\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"showPoints\": \"never\"\n                    },\n                    \"unit\": \"pps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 45\n            },\n            \"id\": 11,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum by (namespace) (\\n    rate(container_network_transmit_packets_dropped_total{cluster=\\\"$cluster\\\",namespace!=\\\"\\\"}[$__rate_interval])\\n  * on (cluster,namespace,pod) group_left ()\\n    topk by (cluster,namespace,pod) (\\n      1,\\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\\\"false\\\"})\\n    )\\n)\\n\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Rate of Transmitted Packets Dropped\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"showPoints\": \"never\"\n                    },\n                    \"unit\": \"percentunit\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 54\n            },\n            \"id\": 12,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum by (instance) (\\n    rate(node_netstat_Tcp_RetransSegs{cluster=\\\"$cluster\\\"}[$__rate_interval]) / rate(node_netstat_Tcp_OutSegs{cluster=\\\"$cluster\\\"}[$__rate_interval])\\n  * on (cluster,namespace,pod) group_left ()\\n    topk by (cluster,namespace,pod) (\\n      1,\\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\\\"false\\\"})\\n    )\\n)\\n\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Rate of TCP Retransmits out of all sent segments\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"showPoints\": \"never\"\n                    },\n                    \"unit\": \"percentunit\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 54\n            },\n            \"id\": 13,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum by (instance) (\\n    rate(node_netstat_TcpExt_TCPSynRetrans{cluster=\\\"$cluster\\\"}[$__rate_interval]) / rate(node_netstat_Tcp_RetransSegs{cluster=\\\"$cluster\\\"}[$__rate_interval])\\n  * on (cluster,namespace,pod) group_left ()\\n    topk by (cluster,namespace,pod) (\\n      1,\\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\\\"false\\\"})\\n    )\\n)\\n\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Rate of TCP SYN Retransmits out of all retransmits\",\n            \"type\": \"timeseries\"\n        }\n    ],\n    \"refresh\": \"10s\",\n    \"schemaVersion\": 39,\n    \"tags\": [\n        \"kubernetes-mixin\"\n    ],\n    \"templating\": {\n        \"list\": [\n            {\n                \"current\": {\n                    \"selected\": true,\n                    \"text\": \"default\",\n                    \"value\": \"default\"\n                },\n                \"hide\": 0,\n                \"label\": \"Data source\",\n                \"name\": \"datasource\",\n                \"query\": \"prometheus\",\n                \"regex\": \"\",\n                \"type\": \"datasource\"\n            },\n            {\n                \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"${datasource}\"\n                },\n                \"hide\": 0,\n                \"label\": \"cluster\",\n                \"name\": \"cluster\",\n                \"query\": \"label_values(up{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\"}, cluster)\",\n                \"refresh\": 2,\n                \"sort\": 1,\n                \"type\": \"query\"\n            }\n        ]\n    },\n    \"time\": {\n        \"from\": \"now-1h\",\n        \"to\": \"now\"\n    },\n    \"timezone\": \"UTC\",\n    \"title\": \"Kubernetes / Networking / Cluster\",\n    \"uid\": \"ff635a025bcfea7bc3dd4f508990a3e9\"\n}"},"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"grafana","app.kubernetes.io/name":"grafana","app.kubernetes.io/part-of":"kube-prometheus","app.kubernetes.io/version":"11.3.1"},"name":"grafana-dashboard-cluster-total","namespace":"monitoring"}}
    creationTimestamp: "2024-11-25T14:40:26Z"
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 11.3.1
    name: grafana-dashboard-cluster-total
    namespace: monitoring
    resourceVersion: "3039609"
    uid: 9cd82c25-2e5a-4dd6-88af-b2b875bc521c
- apiVersion: v1
  data:
    controller-manager.json: |-
      {
          "editable": false,
          "links": [
              {
                  "asDropdown": true,
                  "includeVars": true,
                  "keepTime": true,
                  "tags": [
                      "kubernetes-mixin"
                  ],
                  "targetBlank": false,
                  "title": "Kubernetes",
                  "type": "dashboards"
              }
          ],
          "panels": [
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "none"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 4,
                      "x": 0,
                      "y": 0
                  },
                  "id": 1,
                  "interval": "1m",
                  "options": {
                      "colorMode": "none"
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(up{cluster=\"$cluster\", job=\"kube-controller-manager\"})",
                          "instant": true
                      }
                  ],
                  "title": "Up",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "ops"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 20,
                      "x": 4,
                      "y": 0
                  },
                  "id": 2,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(workqueue_adds_total{cluster=\"$cluster\", job=\"kube-controller-manager\", instance=~\"$instance\"}[$__rate_interval])) by (cluster, instance, name)",
                          "legendFormat": "{{cluster}} {{instance}} {{name}}"
                      }
                  ],
                  "title": "Work Queue Add Rate",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "short"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 7
                  },
                  "id": 3,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(workqueue_depth{cluster=\"$cluster\", job=\"kube-controller-manager\", instance=~\"$instance\"}[$__rate_interval])) by (cluster, instance, name)",
                          "legendFormat": "{{cluster}} {{instance}} {{name}}"
                      }
                  ],
                  "title": "Work Queue Depth",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "s"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 14
                  },
                  "id": 4,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "histogram_quantile(0.99, sum(rate(workqueue_queue_duration_seconds_bucket{cluster=\"$cluster\", job=\"kube-controller-manager\", instance=~\"$instance\"}[$__rate_interval])) by (cluster, instance, name, le))",
                          "legendFormat": "{{cluster}} {{instance}} {{name}}"
                      }
                  ],
                  "title": "Work Queue Latency",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "ops"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 8,
                      "x": 0,
                      "y": 21
                  },
                  "id": 5,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(rest_client_requests_total{job=\"kube-controller-manager\", instance=~\"$instance\",code=~\"2..\"}[$__rate_interval]))",
                          "legendFormat": "2xx"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(rest_client_requests_total{job=\"kube-controller-manager\", instance=~\"$instance\",code=~\"3..\"}[$__rate_interval]))",
                          "legendFormat": "3xx"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(rest_client_requests_total{job=\"kube-controller-manager\", instance=~\"$instance\",code=~\"4..\"}[$__rate_interval]))",
                          "legendFormat": "4xx"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(rest_client_requests_total{job=\"kube-controller-manager\", instance=~\"$instance\",code=~\"5..\"}[$__rate_interval]))",
                          "legendFormat": "5xx"
                      }
                  ],
                  "title": "Kube API Request Rate",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "s"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 16,
                      "x": 8,
                      "y": 21
                  },
                  "id": 6,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "histogram_quantile(0.99, sum(rate(rest_client_request_duration_seconds_bucket{cluster=\"$cluster\", job=\"kube-controller-manager\", instance=~\"$instance\", verb=\"POST\"}[$__rate_interval])) by (verb, url, le))",
                          "legendFormat": "{{verb}} {{url}}"
                      }
                  ],
                  "title": "Post Request Latency 99th Quantile",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "s"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 28
                  },
                  "id": 7,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "histogram_quantile(0.99, sum(rate(rest_client_request_duration_seconds_bucket{cluster=\"$cluster\", job=\"kube-controller-manager\", instance=~\"$instance\", verb=\"GET\"}[$__rate_interval])) by (verb, url, le))",
                          "legendFormat": "{{verb}} {{url}}"
                      }
                  ],
                  "title": "Get Request Latency 99th Quantile",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "bytes"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 8,
                      "x": 0,
                      "y": 35
                  },
                  "id": 8,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "process_resident_memory_bytes{cluster=\"$cluster\", job=\"kube-controller-manager\",instance=~\"$instance\"}",
                          "legendFormat": "{{instance}}"
                      }
                  ],
                  "title": "Memory",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "short"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 8,
                      "x": 8,
                      "y": 35
                  },
                  "id": 9,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "rate(process_cpu_seconds_total{cluster=\"$cluster\", job=\"kube-controller-manager\",instance=~\"$instance\"}[$__rate_interval])",
                          "legendFormat": "{{instance}}"
                      }
                  ],
                  "title": "CPU usage",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "short"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 8,
                      "x": 16,
                      "y": 35
                  },
                  "id": 10,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "go_goroutines{cluster=\"$cluster\", job=\"kube-controller-manager\",instance=~\"$instance\"}",
                          "legendFormat": "{{instance}}"
                      }
                  ],
                  "title": "Goroutines",
                  "type": "timeseries"
              }
          ],
          "refresh": "10s",
          "schemaVersion": 39,
          "tags": [
              "kubernetes-mixin"
          ],
          "templating": {
              "list": [
                  {
                      "current": {
                          "selected": true,
                          "text": "default",
                          "value": "default"
                      },
                      "hide": 0,
                      "label": "Data source",
                      "name": "datasource",
                      "query": "prometheus",
                      "regex": "",
                      "type": "datasource"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "cluster",
                      "name": "cluster",
                      "query": "label_values(up{job=\"kube-controller-manager\"}, cluster)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "includeAll": true,
                      "label": "instance",
                      "name": "instance",
                      "query": "label_values(up{cluster=\"$cluster\", job=\"kube-controller-manager\"}, instance)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  }
              ]
          },
          "time": {
              "from": "now-1h",
              "to": "now"
          },
          "timezone": "UTC",
          "title": "Kubernetes / Controller Manager",
          "uid": "72e0e05bef5099e5f049b05fdc429ed4"
      }
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"controller-manager.json":"{\n    \"editable\": false,\n    \"links\": [\n        {\n            \"asDropdown\": true,\n            \"includeVars\": true,\n            \"keepTime\": true,\n            \"tags\": [\n                \"kubernetes-mixin\"\n            ],\n            \"targetBlank\": false,\n            \"title\": \"Kubernetes\",\n            \"type\": \"dashboards\"\n        }\n    ],\n    \"panels\": [\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"unit\": \"none\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 4,\n                \"x\": 0,\n                \"y\": 0\n            },\n            \"id\": 1,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"colorMode\": \"none\"\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(up{cluster=\\\"$cluster\\\", job=\\\"kube-controller-manager\\\"})\",\n                    \"instant\": true\n                }\n            ],\n            \"title\": \"Up\",\n            \"type\": \"stat\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"ops\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 20,\n                \"x\": 4,\n                \"y\": 0\n            },\n            \"id\": 2,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(workqueue_adds_total{cluster=\\\"$cluster\\\", job=\\\"kube-controller-manager\\\", instance=~\\\"$instance\\\"}[$__rate_interval])) by (cluster, instance, name)\",\n                    \"legendFormat\": \"{{cluster}} {{instance}} {{name}}\"\n                }\n            ],\n            \"title\": \"Work Queue Add Rate\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"short\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 7\n            },\n            \"id\": 3,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(workqueue_depth{cluster=\\\"$cluster\\\", job=\\\"kube-controller-manager\\\", instance=~\\\"$instance\\\"}[$__rate_interval])) by (cluster, instance, name)\",\n                    \"legendFormat\": \"{{cluster}} {{instance}} {{name}}\"\n                }\n            ],\n            \"title\": \"Work Queue Depth\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"s\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 14\n            },\n            \"id\": 4,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"histogram_quantile(0.99, sum(rate(workqueue_queue_duration_seconds_bucket{cluster=\\\"$cluster\\\", job=\\\"kube-controller-manager\\\", instance=~\\\"$instance\\\"}[$__rate_interval])) by (cluster, instance, name, le))\",\n                    \"legendFormat\": \"{{cluster}} {{instance}} {{name}}\"\n                }\n            ],\n            \"title\": \"Work Queue Latency\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"ops\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 8,\n                \"x\": 0,\n                \"y\": 21\n            },\n            \"id\": 5,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(rest_client_requests_total{job=\\\"kube-controller-manager\\\", instance=~\\\"$instance\\\",code=~\\\"2..\\\"}[$__rate_interval]))\",\n                    \"legendFormat\": \"2xx\"\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(rest_client_requests_total{job=\\\"kube-controller-manager\\\", instance=~\\\"$instance\\\",code=~\\\"3..\\\"}[$__rate_interval]))\",\n                    \"legendFormat\": \"3xx\"\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(rest_client_requests_total{job=\\\"kube-controller-manager\\\", instance=~\\\"$instance\\\",code=~\\\"4..\\\"}[$__rate_interval]))\",\n                    \"legendFormat\": \"4xx\"\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(rest_client_requests_total{job=\\\"kube-controller-manager\\\", instance=~\\\"$instance\\\",code=~\\\"5..\\\"}[$__rate_interval]))\",\n                    \"legendFormat\": \"5xx\"\n                }\n            ],\n            \"title\": \"Kube API Request Rate\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"s\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 16,\n                \"x\": 8,\n                \"y\": 21\n            },\n            \"id\": 6,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"histogram_quantile(0.99, sum(rate(rest_client_request_duration_seconds_bucket{cluster=\\\"$cluster\\\", job=\\\"kube-controller-manager\\\", instance=~\\\"$instance\\\", verb=\\\"POST\\\"}[$__rate_interval])) by (verb, url, le))\",\n                    \"legendFormat\": \"{{verb}} {{url}}\"\n                }\n            ],\n            \"title\": \"Post Request Latency 99th Quantile\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"s\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 28\n            },\n            \"id\": 7,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"histogram_quantile(0.99, sum(rate(rest_client_request_duration_seconds_bucket{cluster=\\\"$cluster\\\", job=\\\"kube-controller-manager\\\", instance=~\\\"$instance\\\", verb=\\\"GET\\\"}[$__rate_interval])) by (verb, url, le))\",\n                    \"legendFormat\": \"{{verb}} {{url}}\"\n                }\n            ],\n            \"title\": \"Get Request Latency 99th Quantile\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"bytes\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 8,\n                \"x\": 0,\n                \"y\": 35\n            },\n            \"id\": 8,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"process_resident_memory_bytes{cluster=\\\"$cluster\\\", job=\\\"kube-controller-manager\\\",instance=~\\\"$instance\\\"}\",\n                    \"legendFormat\": \"{{instance}}\"\n                }\n            ],\n            \"title\": \"Memory\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"short\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 8,\n                \"x\": 8,\n                \"y\": 35\n            },\n            \"id\": 9,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"rate(process_cpu_seconds_total{cluster=\\\"$cluster\\\", job=\\\"kube-controller-manager\\\",instance=~\\\"$instance\\\"}[$__rate_interval])\",\n                    \"legendFormat\": \"{{instance}}\"\n                }\n            ],\n            \"title\": \"CPU usage\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"short\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 8,\n                \"x\": 16,\n                \"y\": 35\n            },\n            \"id\": 10,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"go_goroutines{cluster=\\\"$cluster\\\", job=\\\"kube-controller-manager\\\",instance=~\\\"$instance\\\"}\",\n                    \"legendFormat\": \"{{instance}}\"\n                }\n            ],\n            \"title\": \"Goroutines\",\n            \"type\": \"timeseries\"\n        }\n    ],\n    \"refresh\": \"10s\",\n    \"schemaVersion\": 39,\n    \"tags\": [\n        \"kubernetes-mixin\"\n    ],\n    \"templating\": {\n        \"list\": [\n            {\n                \"current\": {\n                    \"selected\": true,\n                    \"text\": \"default\",\n                    \"value\": \"default\"\n                },\n                \"hide\": 0,\n                \"label\": \"Data source\",\n                \"name\": \"datasource\",\n                \"query\": \"prometheus\",\n                \"regex\": \"\",\n                \"type\": \"datasource\"\n            },\n            {\n                \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"${datasource}\"\n                },\n                \"hide\": 0,\n                \"label\": \"cluster\",\n                \"name\": \"cluster\",\n                \"query\": \"label_values(up{job=\\\"kube-controller-manager\\\"}, cluster)\",\n                \"refresh\": 2,\n                \"sort\": 1,\n                \"type\": \"query\"\n            },\n            {\n                \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"${datasource}\"\n                },\n                \"hide\": 0,\n                \"includeAll\": true,\n                \"label\": \"instance\",\n                \"name\": \"instance\",\n                \"query\": \"label_values(up{cluster=\\\"$cluster\\\", job=\\\"kube-controller-manager\\\"}, instance)\",\n                \"refresh\": 2,\n                \"sort\": 1,\n                \"type\": \"query\"\n            }\n        ]\n    },\n    \"time\": {\n        \"from\": \"now-1h\",\n        \"to\": \"now\"\n    },\n    \"timezone\": \"UTC\",\n    \"title\": \"Kubernetes / Controller Manager\",\n    \"uid\": \"72e0e05bef5099e5f049b05fdc429ed4\"\n}"},"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"grafana","app.kubernetes.io/name":"grafana","app.kubernetes.io/part-of":"kube-prometheus","app.kubernetes.io/version":"11.3.1"},"name":"grafana-dashboard-controller-manager","namespace":"monitoring"}}
    creationTimestamp: "2024-11-25T14:40:26Z"
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 11.3.1
    name: grafana-dashboard-controller-manager
    namespace: monitoring
    resourceVersion: "3039613"
    uid: 68b9a3f5-43ac-40b2-9c81-45da8a6df9db
- apiVersion: v1
  data:
    grafana-overview.json: |-
      {
          "annotations": {
              "list": [
                  {
                      "builtIn": 1,
                      "datasource": "-- Grafana --",
                      "enable": true,
                      "hide": true,
                      "iconColor": "rgba(0, 211, 255, 1)",
                      "name": "Annotations & Alerts",
                      "target": {
                          "limit": 100,
                          "matchAny": false,
                          "tags": [

                          ],
                          "type": "dashboard"
                      },
                      "type": "dashboard"
                  }
              ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 0,
          "id": 3085,
          "iteration": 1631554945276,
          "links": [

          ],
          "panels": [
              {
                  "datasource": "$datasource",
                  "fieldConfig": {
                      "defaults": {
                          "mappings": [

                          ],
                          "noValue": "0",
                          "thresholds": {
                              "mode": "absolute",
                              "steps": [
                                  {
                                      "color": "green",
                                      "value": null
                                  },
                                  {
                                      "color": "red",
                                      "value": 80
                                  }
                              ]
                          }
                      },
                      "overrides": [

                      ]
                  },
                  "gridPos": {
                      "h": 5,
                      "w": 6,
                      "x": 0,
                      "y": 0
                  },
                  "id": 6,
                  "options": {
                      "colorMode": "value",
                      "graphMode": "area",
                      "justifyMode": "auto",
                      "orientation": "auto",
                      "reduceOptions": {
                          "calcs": [
                              "mean"
                          ],
                          "fields": "",
                          "values": false
                      },
                      "text": {

                      },
                      "textMode": "auto"
                  },
                  "pluginVersion": "8.1.3",
                  "targets": [
                      {
                          "expr": "grafana_alerting_result_total{job=~\"$job\", instance=~\"$instance\", state=\"alerting\"}",
                          "instant": true,
                          "interval": "",
                          "legendFormat": "",
                          "refId": "A"
                      }
                  ],
                  "timeFrom": null,
                  "timeShift": null,
                  "title": "Firing Alerts",
                  "type": "stat"
              },
              {
                  "datasource": "$datasource",
                  "fieldConfig": {
                      "defaults": {
                          "mappings": [

                          ],
                          "thresholds": {
                              "mode": "absolute",
                              "steps": [
                                  {
                                      "color": "green",
                                      "value": null
                                  },
                                  {
                                      "color": "red",
                                      "value": 80
                                  }
                              ]
                          }
                      },
                      "overrides": [

                      ]
                  },
                  "gridPos": {
                      "h": 5,
                      "w": 6,
                      "x": 6,
                      "y": 0
                  },
                  "id": 8,
                  "options": {
                      "colorMode": "value",
                      "graphMode": "area",
                      "justifyMode": "auto",
                      "orientation": "auto",
                      "reduceOptions": {
                          "calcs": [
                              "mean"
                          ],
                          "fields": "",
                          "values": false
                      },
                      "text": {

                      },
                      "textMode": "auto"
                  },
                  "pluginVersion": "8.1.3",
                  "targets": [
                      {
                          "expr": "sum(grafana_stat_totals_dashboard{job=~\"$job\", instance=~\"$instance\"})",
                          "interval": "",
                          "legendFormat": "",
                          "refId": "A"
                      }
                  ],
                  "timeFrom": null,
                  "timeShift": null,
                  "title": "Dashboards",
                  "type": "stat"
              },
              {
                  "datasource": "$datasource",
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "align": null,
                              "displayMode": "auto"
                          },
                          "mappings": [

                          ],
                          "thresholds": {
                              "mode": "absolute",
                              "steps": [
                                  {
                                      "color": "green",
                                      "value": null
                                  },
                                  {
                                      "color": "red",
                                      "value": 80
                                  }
                              ]
                          }
                      },
                      "overrides": [

                      ]
                  },
                  "gridPos": {
                      "h": 5,
                      "w": 12,
                      "x": 12,
                      "y": 0
                  },
                  "id": 10,
                  "options": {
                      "showHeader": true
                  },
                  "pluginVersion": "8.1.3",
                  "targets": [
                      {
                          "expr": "grafana_build_info{job=~\"$job\", instance=~\"$instance\"}",
                          "instant": true,
                          "interval": "",
                          "legendFormat": "",
                          "refId": "A"
                      }
                  ],
                  "timeFrom": null,
                  "timeShift": null,
                  "title": "Build Info",
                  "transformations": [
                      {
                          "id": "labelsToFields",
                          "options": {

                          }
                      },
                      {
                          "id": "organize",
                          "options": {
                              "excludeByName": {
                                  "Time": true,
                                  "Value": true,
                                  "branch": true,
                                  "container": true,
                                  "goversion": true,
                                  "namespace": true,
                                  "pod": true,
                                  "revision": true
                              },
                              "indexByName": {
                                  "Time": 7,
                                  "Value": 11,
                                  "branch": 4,
                                  "container": 8,
                                  "edition": 2,
                                  "goversion": 6,
                                  "instance": 1,
                                  "job": 0,
                                  "namespace": 9,
                                  "pod": 10,
                                  "revision": 5,
                                  "version": 3
                              },
                              "renameByName": {

                              }
                          }
                      }
                  ],
                  "type": "table"
              },
              {
                  "aliasColors": {

                  },
                  "bars": false,
                  "dashLength": 10,
                  "dashes": false,
                  "datasource": "$datasource",
                  "fieldConfig": {
                      "defaults": {
                          "links": [

                          ]
                      },
                      "overrides": [

                      ]
                  },
                  "fill": 1,
                  "fillGradient": 0,
                  "gridPos": {
                      "h": 8,
                      "w": 12,
                      "x": 0,
                      "y": 5
                  },
                  "hiddenSeries": false,
                  "id": 2,
                  "legend": {
                      "avg": false,
                      "current": false,
                      "max": false,
                      "min": false,
                      "show": true,
                      "total": false,
                      "values": false
                  },
                  "lines": true,
                  "linewidth": 1,
                  "nullPointMode": "null",
                  "options": {
                      "alertThreshold": true
                  },
                  "percentage": false,
                  "pluginVersion": "8.1.3",
                  "pointradius": 2,
                  "points": false,
                  "renderer": "flot",
                  "seriesOverrides": [

                  ],
                  "spaceLength": 10,
                  "stack": true,
                  "steppedLine": false,
                  "targets": [
                      {
                          "expr": "sum by (status_code) (irate(grafana_http_request_duration_seconds_count{job=~\"$job\", instance=~\"$instance\"}[1m])) ",
                          "interval": "",
                          "legendFormat": "{{status_code}}",
                          "refId": "A"
                      }
                  ],
                  "thresholds": [

                  ],
                  "timeFrom": null,
                  "timeRegions": [

                  ],
                  "timeShift": null,
                  "title": "RPS",
                  "tooltip": {
                      "shared": true,
                      "sort": 0,
                      "value_type": "individual"
                  },
                  "type": "graph",
                  "xaxis": {
                      "buckets": null,
                      "mode": "time",
                      "name": null,
                      "show": true,
                      "values": [

                      ]
                  },
                  "yaxes": [
                      {
                          "$$hashKey": "object:157",
                          "format": "reqps",
                          "label": null,
                          "logBase": 1,
                          "max": null,
                          "min": null,
                          "show": true
                      },
                      {
                          "$$hashKey": "object:158",
                          "format": "short",
                          "label": null,
                          "logBase": 1,
                          "max": null,
                          "min": null,
                          "show": false
                      }
                  ],
                  "yaxis": {
                      "align": false,
                      "alignLevel": null
                  }
              },
              {
                  "aliasColors": {

                  },
                  "bars": false,
                  "dashLength": 10,
                  "dashes": false,
                  "datasource": "$datasource",
                  "fieldConfig": {
                      "defaults": {
                          "links": [

                          ]
                      },
                      "overrides": [

                      ]
                  },
                  "fill": 1,
                  "fillGradient": 0,
                  "gridPos": {
                      "h": 8,
                      "w": 12,
                      "x": 12,
                      "y": 5
                  },
                  "hiddenSeries": false,
                  "id": 4,
                  "legend": {
                      "avg": false,
                      "current": false,
                      "max": false,
                      "min": false,
                      "show": true,
                      "total": false,
                      "values": false
                  },
                  "lines": true,
                  "linewidth": 1,
                  "nullPointMode": "null",
                  "options": {
                      "alertThreshold": true
                  },
                  "percentage": false,
                  "pluginVersion": "8.1.3",
                  "pointradius": 2,
                  "points": false,
                  "renderer": "flot",
                  "seriesOverrides": [

                  ],
                  "spaceLength": 10,
                  "stack": false,
                  "steppedLine": false,
                  "targets": [
                      {
                          "exemplar": true,
                          "expr": "histogram_quantile(0.99, sum(irate(grafana_http_request_duration_seconds_bucket{instance=~\"$instance\", job=~\"$job\"}[$__rate_interval])) by (le)) * 1",
                          "interval": "",
                          "legendFormat": "99th Percentile",
                          "refId": "A"
                      },
                      {
                          "exemplar": true,
                          "expr": "histogram_quantile(0.50, sum(irate(grafana_http_request_duration_seconds_bucket{instance=~\"$instance\", job=~\"$job\"}[$__rate_interval])) by (le)) * 1",
                          "interval": "",
                          "legendFormat": "50th Percentile",
                          "refId": "B"
                      },
                      {
                          "exemplar": true,
                          "expr": "sum(irate(grafana_http_request_duration_seconds_sum{instance=~\"$instance\", job=~\"$job\"}[$__rate_interval])) * 1 / sum(irate(grafana_http_request_duration_seconds_count{instance=~\"$instance\", job=~\"$job\"}[$__rate_interval]))",
                          "interval": "",
                          "legendFormat": "Average",
                          "refId": "C"
                      }
                  ],
                  "thresholds": [

                  ],
                  "timeFrom": null,
                  "timeRegions": [

                  ],
                  "timeShift": null,
                  "title": "Request Latency",
                  "tooltip": {
                      "shared": true,
                      "sort": 0,
                      "value_type": "individual"
                  },
                  "type": "graph",
                  "xaxis": {
                      "buckets": null,
                      "mode": "time",
                      "name": null,
                      "show": true,
                      "values": [

                      ]
                  },
                  "yaxes": [
                      {
                          "$$hashKey": "object:210",
                          "format": "ms",
                          "label": null,
                          "logBase": 1,
                          "max": null,
                          "min": null,
                          "show": true
                      },
                      {
                          "$$hashKey": "object:211",
                          "format": "short",
                          "label": null,
                          "logBase": 1,
                          "max": null,
                          "min": null,
                          "show": true
                      }
                  ],
                  "yaxis": {
                      "align": false,
                      "alignLevel": null
                  }
              }
          ],
          "schemaVersion": 30,
          "style": "dark",
          "tags": [

          ],
          "templating": {
              "list": [
                  {
                      "current": {
                          "selected": true,
                          "text": "dev-cortex",
                          "value": "dev-cortex"
                      },
                      "description": null,
                      "error": null,
                      "hide": 0,
                      "includeAll": false,
                      "label": null,
                      "multi": false,
                      "name": "datasource",
                      "options": [

                      ],
                      "query": "prometheus",
                      "queryValue": "",
                      "refresh": 1,
                      "regex": "",
                      "skipUrlSync": false,
                      "type": "datasource"
                  },
                  {
                      "allValue": ".*",
                      "current": {
                          "selected": false,
                          "text": [
                              "default/grafana"
                          ],
                          "value": [
                              "default/grafana"
                          ]
                      },
                      "datasource": "$datasource",
                      "definition": "label_values(grafana_build_info, job)",
                      "description": null,
                      "error": null,
                      "hide": 0,
                      "includeAll": true,
                      "label": null,
                      "multi": true,
                      "name": "job",
                      "options": [

                      ],
                      "query": {
                          "query": "label_values(grafana_build_info, job)",
                          "refId": "Billing Admin-job-Variable-Query"
                      },
                      "refresh": 1,
                      "regex": "",
                      "skipUrlSync": false,
                      "sort": 0,
                      "tagValuesQuery": "",
                      "tagsQuery": "",
                      "type": "query",
                      "useTags": false
                  },
                  {
                      "allValue": ".*",
                      "current": {
                          "selected": false,
                          "text": "All",
                          "value": "$__all"
                      },
                      "datasource": "$datasource",
                      "definition": "label_values(grafana_build_info, instance)",
                      "description": null,
                      "error": null,
                      "hide": 0,
                      "includeAll": true,
                      "label": null,
                      "multi": true,
                      "name": "instance",
                      "options": [

                      ],
                      "query": {
                          "query": "label_values(grafana_build_info, instance)",
                          "refId": "Billing Admin-instance-Variable-Query"
                      },
                      "refresh": 1,
                      "regex": "",
                      "skipUrlSync": false,
                      "sort": 0,
                      "tagValuesQuery": "",
                      "tagsQuery": "",
                      "type": "query",
                      "useTags": false
                  }
              ]
          },
          "time": {
              "from": "now-6h",
              "to": "now"
          },
          "timepicker": {
              "refresh_intervals": [
                  "10s",
                  "30s",
                  "1m",
                  "5m",
                  "15m",
                  "30m",
                  "1h",
                  "2h",
                  "1d"
              ]
          },
          "timezone": "",
          "title": "Grafana Overview",
          "uid": "6be0s85Mk",
          "version": 2
      }
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"grafana-overview.json":"{\n    \"annotations\": {\n        \"list\": [\n            {\n                \"builtIn\": 1,\n                \"datasource\": \"-- Grafana --\",\n                \"enable\": true,\n                \"hide\": true,\n                \"iconColor\": \"rgba(0, 211, 255, 1)\",\n                \"name\": \"Annotations \u0026 Alerts\",\n                \"target\": {\n                    \"limit\": 100,\n                    \"matchAny\": false,\n                    \"tags\": [\n\n                    ],\n                    \"type\": \"dashboard\"\n                },\n                \"type\": \"dashboard\"\n            }\n        ]\n    },\n    \"editable\": true,\n    \"gnetId\": null,\n    \"graphTooltip\": 0,\n    \"id\": 3085,\n    \"iteration\": 1631554945276,\n    \"links\": [\n\n    ],\n    \"panels\": [\n        {\n            \"datasource\": \"$datasource\",\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"mappings\": [\n\n                    ],\n                    \"noValue\": \"0\",\n                    \"thresholds\": {\n                        \"mode\": \"absolute\",\n                        \"steps\": [\n                            {\n                                \"color\": \"green\",\n                                \"value\": null\n                            },\n                            {\n                                \"color\": \"red\",\n                                \"value\": 80\n                            }\n                        ]\n                    }\n                },\n                \"overrides\": [\n\n                ]\n            },\n            \"gridPos\": {\n                \"h\": 5,\n                \"w\": 6,\n                \"x\": 0,\n                \"y\": 0\n            },\n            \"id\": 6,\n            \"options\": {\n                \"colorMode\": \"value\",\n                \"graphMode\": \"area\",\n                \"justifyMode\": \"auto\",\n                \"orientation\": \"auto\",\n                \"reduceOptions\": {\n                    \"calcs\": [\n                        \"mean\"\n                    ],\n                    \"fields\": \"\",\n                    \"values\": false\n                },\n                \"text\": {\n\n                },\n                \"textMode\": \"auto\"\n            },\n            \"pluginVersion\": \"8.1.3\",\n            \"targets\": [\n                {\n                    \"expr\": \"grafana_alerting_result_total{job=~\\\"$job\\\", instance=~\\\"$instance\\\", state=\\\"alerting\\\"}\",\n                    \"instant\": true,\n                    \"interval\": \"\",\n                    \"legendFormat\": \"\",\n                    \"refId\": \"A\"\n                }\n            ],\n            \"timeFrom\": null,\n            \"timeShift\": null,\n            \"title\": \"Firing Alerts\",\n            \"type\": \"stat\"\n        },\n        {\n            \"datasource\": \"$datasource\",\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"mappings\": [\n\n                    ],\n                    \"thresholds\": {\n                        \"mode\": \"absolute\",\n                        \"steps\": [\n                            {\n                                \"color\": \"green\",\n                                \"value\": null\n                            },\n                            {\n                                \"color\": \"red\",\n                                \"value\": 80\n                            }\n                        ]\n                    }\n                },\n                \"overrides\": [\n\n                ]\n            },\n            \"gridPos\": {\n                \"h\": 5,\n                \"w\": 6,\n                \"x\": 6,\n                \"y\": 0\n            },\n            \"id\": 8,\n            \"options\": {\n                \"colorMode\": \"value\",\n                \"graphMode\": \"area\",\n                \"justifyMode\": \"auto\",\n                \"orientation\": \"auto\",\n                \"reduceOptions\": {\n                    \"calcs\": [\n                        \"mean\"\n                    ],\n                    \"fields\": \"\",\n                    \"values\": false\n                },\n                \"text\": {\n\n                },\n                \"textMode\": \"auto\"\n            },\n            \"pluginVersion\": \"8.1.3\",\n            \"targets\": [\n                {\n                    \"expr\": \"sum(grafana_stat_totals_dashboard{job=~\\\"$job\\\", instance=~\\\"$instance\\\"})\",\n                    \"interval\": \"\",\n                    \"legendFormat\": \"\",\n                    \"refId\": \"A\"\n                }\n            ],\n            \"timeFrom\": null,\n            \"timeShift\": null,\n            \"title\": \"Dashboards\",\n            \"type\": \"stat\"\n        },\n        {\n            \"datasource\": \"$datasource\",\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"align\": null,\n                        \"displayMode\": \"auto\"\n                    },\n                    \"mappings\": [\n\n                    ],\n                    \"thresholds\": {\n                        \"mode\": \"absolute\",\n                        \"steps\": [\n                            {\n                                \"color\": \"green\",\n                                \"value\": null\n                            },\n                            {\n                                \"color\": \"red\",\n                                \"value\": 80\n                            }\n                        ]\n                    }\n                },\n                \"overrides\": [\n\n                ]\n            },\n            \"gridPos\": {\n                \"h\": 5,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 0\n            },\n            \"id\": 10,\n            \"options\": {\n                \"showHeader\": true\n            },\n            \"pluginVersion\": \"8.1.3\",\n            \"targets\": [\n                {\n                    \"expr\": \"grafana_build_info{job=~\\\"$job\\\", instance=~\\\"$instance\\\"}\",\n                    \"instant\": true,\n                    \"interval\": \"\",\n                    \"legendFormat\": \"\",\n                    \"refId\": \"A\"\n                }\n            ],\n            \"timeFrom\": null,\n            \"timeShift\": null,\n            \"title\": \"Build Info\",\n            \"transformations\": [\n                {\n                    \"id\": \"labelsToFields\",\n                    \"options\": {\n\n                    }\n                },\n                {\n                    \"id\": \"organize\",\n                    \"options\": {\n                        \"excludeByName\": {\n                            \"Time\": true,\n                            \"Value\": true,\n                            \"branch\": true,\n                            \"container\": true,\n                            \"goversion\": true,\n                            \"namespace\": true,\n                            \"pod\": true,\n                            \"revision\": true\n                        },\n                        \"indexByName\": {\n                            \"Time\": 7,\n                            \"Value\": 11,\n                            \"branch\": 4,\n                            \"container\": 8,\n                            \"edition\": 2,\n                            \"goversion\": 6,\n                            \"instance\": 1,\n                            \"job\": 0,\n                            \"namespace\": 9,\n                            \"pod\": 10,\n                            \"revision\": 5,\n                            \"version\": 3\n                        },\n                        \"renameByName\": {\n\n                        }\n                    }\n                }\n            ],\n            \"type\": \"table\"\n        },\n        {\n            \"aliasColors\": {\n\n            },\n            \"bars\": false,\n            \"dashLength\": 10,\n            \"dashes\": false,\n            \"datasource\": \"$datasource\",\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"links\": [\n\n                    ]\n                },\n                \"overrides\": [\n\n                ]\n            },\n            \"fill\": 1,\n            \"fillGradient\": 0,\n            \"gridPos\": {\n                \"h\": 8,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 5\n            },\n            \"hiddenSeries\": false,\n            \"id\": 2,\n            \"legend\": {\n                \"avg\": false,\n                \"current\": false,\n                \"max\": false,\n                \"min\": false,\n                \"show\": true,\n                \"total\": false,\n                \"values\": false\n            },\n            \"lines\": true,\n            \"linewidth\": 1,\n            \"nullPointMode\": \"null\",\n            \"options\": {\n                \"alertThreshold\": true\n            },\n            \"percentage\": false,\n            \"pluginVersion\": \"8.1.3\",\n            \"pointradius\": 2,\n            \"points\": false,\n            \"renderer\": \"flot\",\n            \"seriesOverrides\": [\n\n            ],\n            \"spaceLength\": 10,\n            \"stack\": true,\n            \"steppedLine\": false,\n            \"targets\": [\n                {\n                    \"expr\": \"sum by (status_code) (irate(grafana_http_request_duration_seconds_count{job=~\\\"$job\\\", instance=~\\\"$instance\\\"}[1m])) \",\n                    \"interval\": \"\",\n                    \"legendFormat\": \"{{status_code}}\",\n                    \"refId\": \"A\"\n                }\n            ],\n            \"thresholds\": [\n\n            ],\n            \"timeFrom\": null,\n            \"timeRegions\": [\n\n            ],\n            \"timeShift\": null,\n            \"title\": \"RPS\",\n            \"tooltip\": {\n                \"shared\": true,\n                \"sort\": 0,\n                \"value_type\": \"individual\"\n            },\n            \"type\": \"graph\",\n            \"xaxis\": {\n                \"buckets\": null,\n                \"mode\": \"time\",\n                \"name\": null,\n                \"show\": true,\n                \"values\": [\n\n                ]\n            },\n            \"yaxes\": [\n                {\n                    \"$$hashKey\": \"object:157\",\n                    \"format\": \"reqps\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": null,\n                    \"show\": true\n                },\n                {\n                    \"$$hashKey\": \"object:158\",\n                    \"format\": \"short\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": null,\n                    \"show\": false\n                }\n            ],\n            \"yaxis\": {\n                \"align\": false,\n                \"alignLevel\": null\n            }\n        },\n        {\n            \"aliasColors\": {\n\n            },\n            \"bars\": false,\n            \"dashLength\": 10,\n            \"dashes\": false,\n            \"datasource\": \"$datasource\",\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"links\": [\n\n                    ]\n                },\n                \"overrides\": [\n\n                ]\n            },\n            \"fill\": 1,\n            \"fillGradient\": 0,\n            \"gridPos\": {\n                \"h\": 8,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 5\n            },\n            \"hiddenSeries\": false,\n            \"id\": 4,\n            \"legend\": {\n                \"avg\": false,\n                \"current\": false,\n                \"max\": false,\n                \"min\": false,\n                \"show\": true,\n                \"total\": false,\n                \"values\": false\n            },\n            \"lines\": true,\n            \"linewidth\": 1,\n            \"nullPointMode\": \"null\",\n            \"options\": {\n                \"alertThreshold\": true\n            },\n            \"percentage\": false,\n            \"pluginVersion\": \"8.1.3\",\n            \"pointradius\": 2,\n            \"points\": false,\n            \"renderer\": \"flot\",\n            \"seriesOverrides\": [\n\n            ],\n            \"spaceLength\": 10,\n            \"stack\": false,\n            \"steppedLine\": false,\n            \"targets\": [\n                {\n                    \"exemplar\": true,\n                    \"expr\": \"histogram_quantile(0.99, sum(irate(grafana_http_request_duration_seconds_bucket{instance=~\\\"$instance\\\", job=~\\\"$job\\\"}[$__rate_interval])) by (le)) * 1\",\n                    \"interval\": \"\",\n                    \"legendFormat\": \"99th Percentile\",\n                    \"refId\": \"A\"\n                },\n                {\n                    \"exemplar\": true,\n                    \"expr\": \"histogram_quantile(0.50, sum(irate(grafana_http_request_duration_seconds_bucket{instance=~\\\"$instance\\\", job=~\\\"$job\\\"}[$__rate_interval])) by (le)) * 1\",\n                    \"interval\": \"\",\n                    \"legendFormat\": \"50th Percentile\",\n                    \"refId\": \"B\"\n                },\n                {\n                    \"exemplar\": true,\n                    \"expr\": \"sum(irate(grafana_http_request_duration_seconds_sum{instance=~\\\"$instance\\\", job=~\\\"$job\\\"}[$__rate_interval])) * 1 / sum(irate(grafana_http_request_duration_seconds_count{instance=~\\\"$instance\\\", job=~\\\"$job\\\"}[$__rate_interval]))\",\n                    \"interval\": \"\",\n                    \"legendFormat\": \"Average\",\n                    \"refId\": \"C\"\n                }\n            ],\n            \"thresholds\": [\n\n            ],\n            \"timeFrom\": null,\n            \"timeRegions\": [\n\n            ],\n            \"timeShift\": null,\n            \"title\": \"Request Latency\",\n            \"tooltip\": {\n                \"shared\": true,\n                \"sort\": 0,\n                \"value_type\": \"individual\"\n            },\n            \"type\": \"graph\",\n            \"xaxis\": {\n                \"buckets\": null,\n                \"mode\": \"time\",\n                \"name\": null,\n                \"show\": true,\n                \"values\": [\n\n                ]\n            },\n            \"yaxes\": [\n                {\n                    \"$$hashKey\": \"object:210\",\n                    \"format\": \"ms\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": null,\n                    \"show\": true\n                },\n                {\n                    \"$$hashKey\": \"object:211\",\n                    \"format\": \"short\",\n                    \"label\": null,\n                    \"logBase\": 1,\n                    \"max\": null,\n                    \"min\": null,\n                    \"show\": true\n                }\n            ],\n            \"yaxis\": {\n                \"align\": false,\n                \"alignLevel\": null\n            }\n        }\n    ],\n    \"schemaVersion\": 30,\n    \"style\": \"dark\",\n    \"tags\": [\n\n    ],\n    \"templating\": {\n        \"list\": [\n            {\n                \"current\": {\n                    \"selected\": true,\n                    \"text\": \"dev-cortex\",\n                    \"value\": \"dev-cortex\"\n                },\n                \"description\": null,\n                \"error\": null,\n                \"hide\": 0,\n                \"includeAll\": false,\n                \"label\": null,\n                \"multi\": false,\n                \"name\": \"datasource\",\n                \"options\": [\n\n                ],\n                \"query\": \"prometheus\",\n                \"queryValue\": \"\",\n                \"refresh\": 1,\n                \"regex\": \"\",\n                \"skipUrlSync\": false,\n                \"type\": \"datasource\"\n            },\n            {\n                \"allValue\": \".*\",\n                \"current\": {\n                    \"selected\": false,\n                    \"text\": [\n                        \"default/grafana\"\n                    ],\n                    \"value\": [\n                        \"default/grafana\"\n                    ]\n                },\n                \"datasource\": \"$datasource\",\n                \"definition\": \"label_values(grafana_build_info, job)\",\n                \"description\": null,\n                \"error\": null,\n                \"hide\": 0,\n                \"includeAll\": true,\n                \"label\": null,\n                \"multi\": true,\n                \"name\": \"job\",\n                \"options\": [\n\n                ],\n                \"query\": {\n                    \"query\": \"label_values(grafana_build_info, job)\",\n                    \"refId\": \"Billing Admin-job-Variable-Query\"\n                },\n                \"refresh\": 1,\n                \"regex\": \"\",\n                \"skipUrlSync\": false,\n                \"sort\": 0,\n                \"tagValuesQuery\": \"\",\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            },\n            {\n                \"allValue\": \".*\",\n                \"current\": {\n                    \"selected\": false,\n                    \"text\": \"All\",\n                    \"value\": \"$__all\"\n                },\n                \"datasource\": \"$datasource\",\n                \"definition\": \"label_values(grafana_build_info, instance)\",\n                \"description\": null,\n                \"error\": null,\n                \"hide\": 0,\n                \"includeAll\": true,\n                \"label\": null,\n                \"multi\": true,\n                \"name\": \"instance\",\n                \"options\": [\n\n                ],\n                \"query\": {\n                    \"query\": \"label_values(grafana_build_info, instance)\",\n                    \"refId\": \"Billing Admin-instance-Variable-Query\"\n                },\n                \"refresh\": 1,\n                \"regex\": \"\",\n                \"skipUrlSync\": false,\n                \"sort\": 0,\n                \"tagValuesQuery\": \"\",\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            }\n        ]\n    },\n    \"time\": {\n        \"from\": \"now-6h\",\n        \"to\": \"now\"\n    },\n    \"timepicker\": {\n        \"refresh_intervals\": [\n            \"10s\",\n            \"30s\",\n            \"1m\",\n            \"5m\",\n            \"15m\",\n            \"30m\",\n            \"1h\",\n            \"2h\",\n            \"1d\"\n        ]\n    },\n    \"timezone\": \"\",\n    \"title\": \"Grafana Overview\",\n    \"uid\": \"6be0s85Mk\",\n    \"version\": 2\n}"},"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"grafana","app.kubernetes.io/name":"grafana","app.kubernetes.io/part-of":"kube-prometheus","app.kubernetes.io/version":"11.3.1"},"name":"grafana-dashboard-grafana-overview","namespace":"monitoring"}}
    creationTimestamp: "2024-11-25T14:40:26Z"
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 11.3.1
    name: grafana-dashboard-grafana-overview
    namespace: monitoring
    resourceVersion: "3039614"
    uid: 49027b28-19c6-4a4f-b7f1-00faacac7395
- apiVersion: v1
  data:
    k8s-resources-cluster.json: |-
      {
          "editable": false,
          "links": [
              {
                  "asDropdown": true,
                  "includeVars": true,
                  "keepTime": true,
                  "tags": [
                      "kubernetes-mixin"
                  ],
                  "targetBlank": false,
                  "title": "Kubernetes",
                  "type": "dashboards"
              }
          ],
          "panels": [
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 3,
                      "w": 4,
                      "x": 0,
                      "y": 0
                  },
                  "id": 1,
                  "interval": "1m",
                  "options": {
                      "colorMode": "none"
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "cluster:node_cpu:ratio_rate5m{cluster=\"$cluster\"}",
                          "instant": true
                      }
                  ],
                  "title": "CPU Utilisation",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 3,
                      "w": 4,
                      "x": 4,
                      "y": 0
                  },
                  "id": 2,
                  "interval": "1m",
                  "options": {
                      "colorMode": "none"
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(namespace_cpu:kube_pod_container_resource_requests:sum{cluster=\"$cluster\"}) / sum(kube_node_status_allocatable{job=\"kube-state-metrics\",resource=\"cpu\",cluster=\"$cluster\"})",
                          "instant": true
                      }
                  ],
                  "title": "CPU Requests Commitment",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 3,
                      "w": 4,
                      "x": 8,
                      "y": 0
                  },
                  "id": 3,
                  "interval": "1m",
                  "options": {
                      "colorMode": "none"
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(namespace_cpu:kube_pod_container_resource_limits:sum{cluster=\"$cluster\"}) / sum(kube_node_status_allocatable{job=\"kube-state-metrics\",resource=\"cpu\",cluster=\"$cluster\"})",
                          "instant": true
                      }
                  ],
                  "title": "CPU Limits Commitment",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 3,
                      "w": 4,
                      "x": 12,
                      "y": 0
                  },
                  "id": 4,
                  "interval": "1m",
                  "options": {
                      "colorMode": "none"
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "1 - sum(:node_memory_MemAvailable_bytes:sum{cluster=\"$cluster\"}) / sum(node_memory_MemTotal_bytes{job=\"node-exporter\",cluster=\"$cluster\"})",
                          "instant": true
                      }
                  ],
                  "title": "Memory Utilisation",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 3,
                      "w": 4,
                      "x": 16,
                      "y": 0
                  },
                  "id": 5,
                  "interval": "1m",
                  "options": {
                      "colorMode": "none"
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(namespace_memory:kube_pod_container_resource_requests:sum{cluster=\"$cluster\"}) / sum(kube_node_status_allocatable{job=\"kube-state-metrics\",resource=\"memory\",cluster=\"$cluster\"})",
                          "instant": true
                      }
                  ],
                  "title": "Memory Requests Commitment",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 3,
                      "w": 4,
                      "x": 20,
                      "y": 0
                  },
                  "id": 6,
                  "interval": "1m",
                  "options": {
                      "colorMode": "none"
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(namespace_memory:kube_pod_container_resource_limits:sum{cluster=\"$cluster\"}) / sum(kube_node_status_allocatable{job=\"kube-state-metrics\",resource=\"memory\",cluster=\"$cluster\"})",
                          "instant": true
                      }
                  ],
                  "title": "Memory Limits Commitment",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          }
                      }
                  },
                  "gridPos": {
                      "h": 6,
                      "w": 24,
                      "x": 0,
                      "y": 6
                  },
                  "id": 7,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\"$cluster\"}) by (namespace)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "CPU Usage",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/%/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "percentunit"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Namespace"
                              },
                              "properties": [
                                  {
                                      "id": "links",
                                      "value": [
                                          {
                                              "title": "Drill down to pods",
                                              "url": "/d/85a562078cdf77779eaa1add43ccec1e/k8s-resources-namespace?${datasource:queryparam}&var-cluster=$cluster&var-namespace=${__data.fields.Namespace}"
                                          }
                                      ]
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 6,
                      "w": 24,
                      "x": 0,
                      "y": 12
                  },
                  "id": 8,
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(kube_pod_owner{job=\"kube-state-metrics\", cluster=\"$cluster\"}) by (namespace)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "count(avg(namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\"}) by (workload, namespace)) by (namespace)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\"$cluster\"}) by (namespace)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(namespace_cpu:kube_pod_container_resource_requests:sum{cluster=\"$cluster\"}) by (namespace)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\"$cluster\"}) by (namespace) / sum(namespace_cpu:kube_pod_container_resource_requests:sum{cluster=\"$cluster\"}) by (namespace)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(namespace_cpu:kube_pod_container_resource_limits:sum{cluster=\"$cluster\"}) by (namespace)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\"$cluster\"}) by (namespace) / sum(namespace_cpu:kube_pod_container_resource_limits:sum{cluster=\"$cluster\"}) by (namespace)",
                          "format": "table",
                          "instant": true
                      }
                  ],
                  "title": "CPU Quota",
                  "transformations": [
                      {
                          "id": "joinByField",
                          "options": {
                              "byField": "namespace",
                              "mode": "outer"
                          }
                      },
                      {
                          "id": "organize",
                          "options": {
                              "excludeByName": {
                                  "Time": true,
                                  "Time 1": true,
                                  "Time 2": true,
                                  "Time 3": true,
                                  "Time 4": true,
                                  "Time 5": true,
                                  "Time 6": true,
                                  "Time 7": true
                              },
                              "indexByName": {
                                  "Time 1": 0,
                                  "Time 2": 1,
                                  "Time 3": 2,
                                  "Time 4": 3,
                                  "Time 5": 4,
                                  "Time 6": 5,
                                  "Time 7": 6,
                                  "Value #A": 8,
                                  "Value #B": 9,
                                  "Value #C": 10,
                                  "Value #D": 11,
                                  "Value #E": 12,
                                  "Value #F": 13,
                                  "Value #G": 14,
                                  "namespace": 7
                              },
                              "renameByName": {
                                  "Value #A": "Pods",
                                  "Value #B": "Workloads",
                                  "Value #C": "CPU Usage",
                                  "Value #D": "CPU Requests",
                                  "Value #E": "CPU Requests %",
                                  "Value #F": "CPU Limits",
                                  "Value #G": "CPU Limits %",
                                  "namespace": "Namespace"
                              }
                          }
                      }
                  ],
                  "type": "table"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "bytes"
                      }
                  },
                  "gridPos": {
                      "h": 6,
                      "w": 24,
                      "x": 0,
                      "y": 18
                  },
                  "id": 9,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(container_memory_rss{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", container!=\"\"}) by (namespace)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Memory",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/%/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "percentunit"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Memory Usage"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "bytes"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Memory Requests"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "bytes"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Memory Limits"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "bytes"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Namespace"
                              },
                              "properties": [
                                  {
                                      "id": "links",
                                      "value": [
                                          {
                                              "title": "Drill down to pods",
                                              "url": "/d/85a562078cdf77779eaa1add43ccec1e/k8s-resources-namespace?${datasource:queryparam}&var-cluster=$cluster&var-namespace=${__data.fields.Namespace}"
                                          }
                                      ]
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 6,
                      "w": 24,
                      "x": 0,
                      "y": 24
                  },
                  "id": 10,
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(kube_pod_owner{job=\"kube-state-metrics\", cluster=\"$cluster\"}) by (namespace)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "count(avg(namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\"}) by (workload, namespace)) by (namespace)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(container_memory_rss{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", container!=\"\"}) by (namespace)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(namespace_memory:kube_pod_container_resource_requests:sum{cluster=\"$cluster\"}) by (namespace)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(container_memory_rss{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", container!=\"\"}) by (namespace) / sum(namespace_memory:kube_pod_container_resource_requests:sum{cluster=\"$cluster\"}) by (namespace)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(namespace_memory:kube_pod_container_resource_limits:sum{cluster=\"$cluster\"}) by (namespace)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(container_memory_rss{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", container!=\"\"}) by (namespace) / sum(namespace_memory:kube_pod_container_resource_limits:sum{cluster=\"$cluster\"}) by (namespace)",
                          "format": "table",
                          "instant": true
                      }
                  ],
                  "title": "Memory Requests by Namespace",
                  "transformations": [
                      {
                          "id": "joinByField",
                          "options": {
                              "byField": "namespace",
                              "mode": "outer"
                          }
                      },
                      {
                          "id": "organize",
                          "options": {
                              "excludeByName": {
                                  "Time": true,
                                  "Time 1": true,
                                  "Time 2": true,
                                  "Time 3": true,
                                  "Time 4": true,
                                  "Time 5": true,
                                  "Time 6": true,
                                  "Time 7": true
                              },
                              "indexByName": {
                                  "Time 1": 0,
                                  "Time 2": 1,
                                  "Time 3": 2,
                                  "Time 4": 3,
                                  "Time 5": 4,
                                  "Time 6": 5,
                                  "Time 7": 6,
                                  "Value #A": 8,
                                  "Value #B": 9,
                                  "Value #C": 10,
                                  "Value #D": 11,
                                  "Value #E": 12,
                                  "Value #F": 13,
                                  "Value #G": 14,
                                  "namespace": 7
                              },
                              "renameByName": {
                                  "Value #A": "Pods",
                                  "Value #B": "Workloads",
                                  "Value #C": "Memory Usage",
                                  "Value #D": "Memory Requests",
                                  "Value #E": "Memory Requests %",
                                  "Value #F": "Memory Limits",
                                  "Value #G": "Memory Limits %",
                                  "namespace": "Namespace"
                              }
                          }
                      }
                  ],
                  "type": "table"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/Bandwidth/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "Bps"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/Packets/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "pps"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Namespace"
                              },
                              "properties": [
                                  {
                                      "id": "links",
                                      "value": [
                                          {
                                              "title": "Drill down to pods",
                                              "url": "/d/85a562078cdf77779eaa1add43ccec1e/k8s-resources-namespace?${datasource:queryparam}&var-cluster=$cluster&var-namespace=${__data.fields.Namespace}"
                                          }
                                      ]
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 6,
                      "w": 24,
                      "x": 0,
                      "y": 30
                  },
                  "id": 11,
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(container_network_receive_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(container_network_transmit_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(container_network_receive_packets_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(container_network_transmit_packets_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(container_network_receive_packets_dropped_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(container_network_transmit_packets_dropped_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                          "format": "table",
                          "instant": true
                      }
                  ],
                  "title": "Current Network Usage",
                  "transformations": [
                      {
                          "id": "joinByField",
                          "options": {
                              "byField": "namespace",
                              "mode": "outer"
                          }
                      },
                      {
                          "id": "organize",
                          "options": {
                              "excludeByName": {
                                  "Time": true,
                                  "Time 1": true,
                                  "Time 2": true,
                                  "Time 3": true,
                                  "Time 4": true,
                                  "Time 5": true,
                                  "Time 6": true
                              },
                              "indexByName": {
                                  "Time 1": 0,
                                  "Time 2": 1,
                                  "Time 3": 2,
                                  "Time 4": 3,
                                  "Time 5": 4,
                                  "Time 6": 5,
                                  "Value #A": 7,
                                  "Value #B": 8,
                                  "Value #C": 9,
                                  "Value #D": 10,
                                  "Value #E": 11,
                                  "Value #F": 12,
                                  "namespace": 6
                              },
                              "renameByName": {
                                  "Value #A": "Current Receive Bandwidth",
                                  "Value #B": "Current Transmit Bandwidth",
                                  "Value #C": "Rate of Received Packets",
                                  "Value #D": "Rate of Transmitted Packets",
                                  "Value #E": "Rate of Received Packets Dropped",
                                  "Value #F": "Rate of Transmitted Packets Dropped",
                                  "namespace": "Namespace"
                              }
                          }
                      }
                  ],
                  "type": "table"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 6,
                      "w": 24,
                      "x": 0,
                      "y": 36
                  },
                  "id": 12,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(container_network_receive_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Receive Bandwidth",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 6,
                      "w": 24,
                      "x": 0,
                      "y": 42
                  },
                  "id": 13,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(container_network_transmit_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Transmit Bandwidth",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 6,
                      "w": 24,
                      "x": 0,
                      "y": 48
                  },
                  "id": 14,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "avg(irate(container_network_receive_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Average Container Bandwidth by Namespace: Received",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 6,
                      "w": 24,
                      "x": 0,
                      "y": 54
                  },
                  "id": 15,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "avg(irate(container_network_transmit_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Average Container Bandwidth by Namespace: Transmitted",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 6,
                      "w": 24,
                      "x": 0,
                      "y": 60
                  },
                  "id": 16,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(irate(container_network_receive_packets_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Received Packets",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 6,
                      "w": 24,
                      "x": 0,
                      "y": 66
                  },
                  "id": 17,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(irate(container_network_transmit_packets_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Transmitted Packets",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 6,
                      "w": 24,
                      "x": 0,
                      "y": 72
                  },
                  "id": 18,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(irate(container_network_receive_packets_dropped_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Received Packets Dropped",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 6,
                      "w": 24,
                      "x": 0,
                      "y": 78
                  },
                  "id": 19,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(irate(container_network_transmit_packets_dropped_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Transmitted Packets Dropped",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "iops"
                      }
                  },
                  "gridPos": {
                      "h": 6,
                      "w": 24,
                      "x": 0,
                      "y": 84
                  },
                  "id": 20,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "ceil(sum by(namespace) (rate(container_fs_reads_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", container!=\"\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", cluster=\"$cluster\", namespace!=\"\"}[$__rate_interval]) + rate(container_fs_writes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", container!=\"\", cluster=\"$cluster\", namespace!=\"\"}[$__rate_interval])))",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "IOPS(Reads+Writes)",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 6,
                      "w": 24,
                      "x": 0,
                      "y": 90
                  },
                  "id": 21,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by(namespace) (rate(container_fs_reads_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", container!=\"\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", cluster=\"$cluster\", namespace!=\"\"}[$__rate_interval]) + rate(container_fs_writes_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", container!=\"\", cluster=\"$cluster\", namespace!=\"\"}[$__rate_interval]))",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "ThroughPut(Read+Write)",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/IOPS/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "iops"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/Throughput/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "Bps"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Namespace"
                              },
                              "properties": [
                                  {
                                      "id": "links",
                                      "value": [
                                          {
                                              "title": "Drill down to pods",
                                              "url": "/d/85a562078cdf77779eaa1add43ccec1e/k8s-resources-namespace?${datasource:queryparam}&var-cluster=$cluster&var-namespace=${__data.fields.Namespace}"
                                          }
                                      ]
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 6,
                      "w": 24,
                      "x": 0,
                      "y": 96
                  },
                  "id": 22,
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by(namespace) (rate(container_fs_reads_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", container!=\"\", cluster=\"$cluster\", namespace!=\"\"}[$__rate_interval]))",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by(namespace) (rate(container_fs_writes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", container!=\"\", cluster=\"$cluster\", namespace!=\"\"}[$__rate_interval]))",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by(namespace) (rate(container_fs_reads_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", container!=\"\", cluster=\"$cluster\", namespace!=\"\"}[$__rate_interval]) + rate(container_fs_writes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", container!=\"\", cluster=\"$cluster\", namespace!=\"\"}[$__rate_interval]))",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by(namespace) (rate(container_fs_reads_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", container!=\"\", cluster=\"$cluster\", namespace!=\"\"}[$__rate_interval]))",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by(namespace) (rate(container_fs_writes_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", container!=\"\", cluster=\"$cluster\", namespace!=\"\"}[$__rate_interval]))",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by(namespace) (rate(container_fs_reads_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", container!=\"\", cluster=\"$cluster\", namespace!=\"\"}[$__rate_interval]) + rate(container_fs_writes_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", container!=\"\", cluster=\"$cluster\", namespace!=\"\"}[$__rate_interval]))",
                          "format": "table",
                          "instant": true
                      }
                  ],
                  "title": "Current Storage IO",
                  "transformations": [
                      {
                          "id": "joinByField",
                          "options": {
                              "byField": "namespace",
                              "mode": "outer"
                          }
                      },
                      {
                          "id": "organize",
                          "options": {
                              "excludeByName": {
                                  "Time": true,
                                  "Time 1": true,
                                  "Time 2": true,
                                  "Time 3": true,
                                  "Time 4": true,
                                  "Time 5": true,
                                  "Time 6": true
                              },
                              "indexByName": {
                                  "Time 1": 0,
                                  "Time 2": 1,
                                  "Time 3": 2,
                                  "Time 4": 3,
                                  "Time 5": 4,
                                  "Time 6": 5,
                                  "Value #A": 7,
                                  "Value #B": 8,
                                  "Value #C": 9,
                                  "Value #D": 10,
                                  "Value #E": 11,
                                  "Value #F": 12,
                                  "namespace": 6
                              },
                              "renameByName": {
                                  "Value #A": "IOPS(Reads)",
                                  "Value #B": "IOPS(Writes)",
                                  "Value #C": "IOPS(Reads + Writes)",
                                  "Value #D": "Throughput(Read)",
                                  "Value #E": "Throughput(Write)",
                                  "Value #F": "Throughput(Read + Write)",
                                  "namespace": "Namespace"
                              }
                          }
                      }
                  ],
                  "type": "table"
              }
          ],
          "refresh": "10s",
          "schemaVersion": 39,
          "tags": [
              "kubernetes-mixin"
          ],
          "templating": {
              "list": [
                  {
                      "current": {
                          "selected": true,
                          "text": "default",
                          "value": "default"
                      },
                      "hide": 0,
                      "label": "Data source",
                      "name": "datasource",
                      "query": "prometheus",
                      "regex": "",
                      "type": "datasource"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "cluster",
                      "name": "cluster",
                      "query": "label_values(up{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\"}, cluster)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  }
              ]
          },
          "time": {
              "from": "now-1h",
              "to": "now"
          },
          "timezone": "UTC",
          "title": "Kubernetes / Compute Resources / Cluster",
          "uid": "efa86fd1d0c121a26444b636a3f509a8"
      }
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"k8s-resources-cluster.json":"{\n    \"editable\": false,\n    \"links\": [\n        {\n            \"asDropdown\": true,\n            \"includeVars\": true,\n            \"keepTime\": true,\n            \"tags\": [\n                \"kubernetes-mixin\"\n            ],\n            \"targetBlank\": false,\n            \"title\": \"Kubernetes\",\n            \"type\": \"dashboards\"\n        }\n    ],\n    \"panels\": [\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"unit\": \"percentunit\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 3,\n                \"w\": 4,\n                \"x\": 0,\n                \"y\": 0\n            },\n            \"id\": 1,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"colorMode\": \"none\"\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"cluster:node_cpu:ratio_rate5m{cluster=\\\"$cluster\\\"}\",\n                    \"instant\": true\n                }\n            ],\n            \"title\": \"CPU Utilisation\",\n            \"type\": \"stat\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"unit\": \"percentunit\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 3,\n                \"w\": 4,\n                \"x\": 4,\n                \"y\": 0\n            },\n            \"id\": 2,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"colorMode\": \"none\"\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(namespace_cpu:kube_pod_container_resource_requests:sum{cluster=\\\"$cluster\\\"}) / sum(kube_node_status_allocatable{job=\\\"kube-state-metrics\\\",resource=\\\"cpu\\\",cluster=\\\"$cluster\\\"})\",\n                    \"instant\": true\n                }\n            ],\n            \"title\": \"CPU Requests Commitment\",\n            \"type\": \"stat\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"unit\": \"percentunit\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 3,\n                \"w\": 4,\n                \"x\": 8,\n                \"y\": 0\n            },\n            \"id\": 3,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"colorMode\": \"none\"\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(namespace_cpu:kube_pod_container_resource_limits:sum{cluster=\\\"$cluster\\\"}) / sum(kube_node_status_allocatable{job=\\\"kube-state-metrics\\\",resource=\\\"cpu\\\",cluster=\\\"$cluster\\\"})\",\n                    \"instant\": true\n                }\n            ],\n            \"title\": \"CPU Limits Commitment\",\n            \"type\": \"stat\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"unit\": \"percentunit\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 3,\n                \"w\": 4,\n                \"x\": 12,\n                \"y\": 0\n            },\n            \"id\": 4,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"colorMode\": \"none\"\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"1 - sum(:node_memory_MemAvailable_bytes:sum{cluster=\\\"$cluster\\\"}) / sum(node_memory_MemTotal_bytes{job=\\\"node-exporter\\\",cluster=\\\"$cluster\\\"})\",\n                    \"instant\": true\n                }\n            ],\n            \"title\": \"Memory Utilisation\",\n            \"type\": \"stat\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"unit\": \"percentunit\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 3,\n                \"w\": 4,\n                \"x\": 16,\n                \"y\": 0\n            },\n            \"id\": 5,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"colorMode\": \"none\"\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(namespace_memory:kube_pod_container_resource_requests:sum{cluster=\\\"$cluster\\\"}) / sum(kube_node_status_allocatable{job=\\\"kube-state-metrics\\\",resource=\\\"memory\\\",cluster=\\\"$cluster\\\"})\",\n                    \"instant\": true\n                }\n            ],\n            \"title\": \"Memory Requests Commitment\",\n            \"type\": \"stat\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"unit\": \"percentunit\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 3,\n                \"w\": 4,\n                \"x\": 20,\n                \"y\": 0\n            },\n            \"id\": 6,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"colorMode\": \"none\"\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(namespace_memory:kube_pod_container_resource_limits:sum{cluster=\\\"$cluster\\\"}) / sum(kube_node_status_allocatable{job=\\\"kube-state-metrics\\\",resource=\\\"memory\\\",cluster=\\\"$cluster\\\"})\",\n                    \"instant\": true\n                }\n            ],\n            \"title\": \"Memory Limits Commitment\",\n            \"type\": \"stat\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    }\n                }\n            },\n            \"gridPos\": {\n                \"h\": 6,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 6\n            },\n            \"id\": 7,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\"}) by (namespace)\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"CPU Usage\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"overrides\": [\n                    {\n                        \"matcher\": {\n                            \"id\": \"byRegexp\",\n                            \"options\": \"/%/\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"unit\",\n                                \"value\": \"percentunit\"\n                            }\n                        ]\n                    },\n                    {\n                        \"matcher\": {\n                            \"id\": \"byName\",\n                            \"options\": \"Namespace\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"links\",\n                                \"value\": [\n                                    {\n                                        \"title\": \"Drill down to pods\",\n                                        \"url\": \"/d/85a562078cdf77779eaa1add43ccec1e/k8s-resources-namespace?${datasource:queryparam}\u0026var-cluster=$cluster\u0026var-namespace=${__data.fields.Namespace}\"\n                                    }\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            },\n            \"gridPos\": {\n                \"h\": 6,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 12\n            },\n            \"id\": 8,\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(kube_pod_owner{job=\\\"kube-state-metrics\\\", cluster=\\\"$cluster\\\"}) by (namespace)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"count(avg(namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\"}) by (workload, namespace)) by (namespace)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\"}) by (namespace)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(namespace_cpu:kube_pod_container_resource_requests:sum{cluster=\\\"$cluster\\\"}) by (namespace)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\"}) by (namespace) / sum(namespace_cpu:kube_pod_container_resource_requests:sum{cluster=\\\"$cluster\\\"}) by (namespace)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(namespace_cpu:kube_pod_container_resource_limits:sum{cluster=\\\"$cluster\\\"}) by (namespace)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\"}) by (namespace) / sum(namespace_cpu:kube_pod_container_resource_limits:sum{cluster=\\\"$cluster\\\"}) by (namespace)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                }\n            ],\n            \"title\": \"CPU Quota\",\n            \"transformations\": [\n                {\n                    \"id\": \"joinByField\",\n                    \"options\": {\n                        \"byField\": \"namespace\",\n                        \"mode\": \"outer\"\n                    }\n                },\n                {\n                    \"id\": \"organize\",\n                    \"options\": {\n                        \"excludeByName\": {\n                            \"Time\": true,\n                            \"Time 1\": true,\n                            \"Time 2\": true,\n                            \"Time 3\": true,\n                            \"Time 4\": true,\n                            \"Time 5\": true,\n                            \"Time 6\": true,\n                            \"Time 7\": true\n                        },\n                        \"indexByName\": {\n                            \"Time 1\": 0,\n                            \"Time 2\": 1,\n                            \"Time 3\": 2,\n                            \"Time 4\": 3,\n                            \"Time 5\": 4,\n                            \"Time 6\": 5,\n                            \"Time 7\": 6,\n                            \"Value #A\": 8,\n                            \"Value #B\": 9,\n                            \"Value #C\": 10,\n                            \"Value #D\": 11,\n                            \"Value #E\": 12,\n                            \"Value #F\": 13,\n                            \"Value #G\": 14,\n                            \"namespace\": 7\n                        },\n                        \"renameByName\": {\n                            \"Value #A\": \"Pods\",\n                            \"Value #B\": \"Workloads\",\n                            \"Value #C\": \"CPU Usage\",\n                            \"Value #D\": \"CPU Requests\",\n                            \"Value #E\": \"CPU Requests %\",\n                            \"Value #F\": \"CPU Limits\",\n                            \"Value #G\": \"CPU Limits %\",\n                            \"namespace\": \"Namespace\"\n                        }\n                    }\n                }\n            ],\n            \"type\": \"table\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"bytes\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 6,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 18\n            },\n            \"id\": 9,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(container_memory_rss{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", container!=\\\"\\\"}) by (namespace)\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Memory\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"overrides\": [\n                    {\n                        \"matcher\": {\n                            \"id\": \"byRegexp\",\n                            \"options\": \"/%/\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"unit\",\n                                \"value\": \"percentunit\"\n                            }\n                        ]\n                    },\n                    {\n                        \"matcher\": {\n                            \"id\": \"byName\",\n                            \"options\": \"Memory Usage\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"unit\",\n                                \"value\": \"bytes\"\n                            }\n                        ]\n                    },\n                    {\n                        \"matcher\": {\n                            \"id\": \"byName\",\n                            \"options\": \"Memory Requests\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"unit\",\n                                \"value\": \"bytes\"\n                            }\n                        ]\n                    },\n                    {\n                        \"matcher\": {\n                            \"id\": \"byName\",\n                            \"options\": \"Memory Limits\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"unit\",\n                                \"value\": \"bytes\"\n                            }\n                        ]\n                    },\n                    {\n                        \"matcher\": {\n                            \"id\": \"byName\",\n                            \"options\": \"Namespace\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"links\",\n                                \"value\": [\n                                    {\n                                        \"title\": \"Drill down to pods\",\n                                        \"url\": \"/d/85a562078cdf77779eaa1add43ccec1e/k8s-resources-namespace?${datasource:queryparam}\u0026var-cluster=$cluster\u0026var-namespace=${__data.fields.Namespace}\"\n                                    }\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            },\n            \"gridPos\": {\n                \"h\": 6,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 24\n            },\n            \"id\": 10,\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(kube_pod_owner{job=\\\"kube-state-metrics\\\", cluster=\\\"$cluster\\\"}) by (namespace)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"count(avg(namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\"}) by (workload, namespace)) by (namespace)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(container_memory_rss{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", container!=\\\"\\\"}) by (namespace)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(namespace_memory:kube_pod_container_resource_requests:sum{cluster=\\\"$cluster\\\"}) by (namespace)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(container_memory_rss{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", container!=\\\"\\\"}) by (namespace) / sum(namespace_memory:kube_pod_container_resource_requests:sum{cluster=\\\"$cluster\\\"}) by (namespace)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(namespace_memory:kube_pod_container_resource_limits:sum{cluster=\\\"$cluster\\\"}) by (namespace)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(container_memory_rss{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", container!=\\\"\\\"}) by (namespace) / sum(namespace_memory:kube_pod_container_resource_limits:sum{cluster=\\\"$cluster\\\"}) by (namespace)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                }\n            ],\n            \"title\": \"Memory Requests by Namespace\",\n            \"transformations\": [\n                {\n                    \"id\": \"joinByField\",\n                    \"options\": {\n                        \"byField\": \"namespace\",\n                        \"mode\": \"outer\"\n                    }\n                },\n                {\n                    \"id\": \"organize\",\n                    \"options\": {\n                        \"excludeByName\": {\n                            \"Time\": true,\n                            \"Time 1\": true,\n                            \"Time 2\": true,\n                            \"Time 3\": true,\n                            \"Time 4\": true,\n                            \"Time 5\": true,\n                            \"Time 6\": true,\n                            \"Time 7\": true\n                        },\n                        \"indexByName\": {\n                            \"Time 1\": 0,\n                            \"Time 2\": 1,\n                            \"Time 3\": 2,\n                            \"Time 4\": 3,\n                            \"Time 5\": 4,\n                            \"Time 6\": 5,\n                            \"Time 7\": 6,\n                            \"Value #A\": 8,\n                            \"Value #B\": 9,\n                            \"Value #C\": 10,\n                            \"Value #D\": 11,\n                            \"Value #E\": 12,\n                            \"Value #F\": 13,\n                            \"Value #G\": 14,\n                            \"namespace\": 7\n                        },\n                        \"renameByName\": {\n                            \"Value #A\": \"Pods\",\n                            \"Value #B\": \"Workloads\",\n                            \"Value #C\": \"Memory Usage\",\n                            \"Value #D\": \"Memory Requests\",\n                            \"Value #E\": \"Memory Requests %\",\n                            \"Value #F\": \"Memory Limits\",\n                            \"Value #G\": \"Memory Limits %\",\n                            \"namespace\": \"Namespace\"\n                        }\n                    }\n                }\n            ],\n            \"type\": \"table\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"overrides\": [\n                    {\n                        \"matcher\": {\n                            \"id\": \"byRegexp\",\n                            \"options\": \"/Bandwidth/\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"unit\",\n                                \"value\": \"Bps\"\n                            }\n                        ]\n                    },\n                    {\n                        \"matcher\": {\n                            \"id\": \"byRegexp\",\n                            \"options\": \"/Packets/\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"unit\",\n                                \"value\": \"pps\"\n                            }\n                        ]\n                    },\n                    {\n                        \"matcher\": {\n                            \"id\": \"byName\",\n                            \"options\": \"Namespace\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"links\",\n                                \"value\": [\n                                    {\n                                        \"title\": \"Drill down to pods\",\n                                        \"url\": \"/d/85a562078cdf77779eaa1add43ccec1e/k8s-resources-namespace?${datasource:queryparam}\u0026var-cluster=$cluster\u0026var-namespace=${__data.fields.Namespace}\"\n                                    }\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            },\n            \"gridPos\": {\n                \"h\": 6,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 30\n            },\n            \"id\": 11,\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(container_network_receive_bytes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=~\\\".+\\\"}[$__rate_interval])) by (namespace)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(container_network_transmit_bytes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=~\\\".+\\\"}[$__rate_interval])) by (namespace)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(container_network_receive_packets_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=~\\\".+\\\"}[$__rate_interval])) by (namespace)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(container_network_transmit_packets_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=~\\\".+\\\"}[$__rate_interval])) by (namespace)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(container_network_receive_packets_dropped_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=~\\\".+\\\"}[$__rate_interval])) by (namespace)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(container_network_transmit_packets_dropped_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=~\\\".+\\\"}[$__rate_interval])) by (namespace)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                }\n            ],\n            \"title\": \"Current Network Usage\",\n            \"transformations\": [\n                {\n                    \"id\": \"joinByField\",\n                    \"options\": {\n                        \"byField\": \"namespace\",\n                        \"mode\": \"outer\"\n                    }\n                },\n                {\n                    \"id\": \"organize\",\n                    \"options\": {\n                        \"excludeByName\": {\n                            \"Time\": true,\n                            \"Time 1\": true,\n                            \"Time 2\": true,\n                            \"Time 3\": true,\n                            \"Time 4\": true,\n                            \"Time 5\": true,\n                            \"Time 6\": true\n                        },\n                        \"indexByName\": {\n                            \"Time 1\": 0,\n                            \"Time 2\": 1,\n                            \"Time 3\": 2,\n                            \"Time 4\": 3,\n                            \"Time 5\": 4,\n                            \"Time 6\": 5,\n                            \"Value #A\": 7,\n                            \"Value #B\": 8,\n                            \"Value #C\": 9,\n                            \"Value #D\": 10,\n                            \"Value #E\": 11,\n                            \"Value #F\": 12,\n                            \"namespace\": 6\n                        },\n                        \"renameByName\": {\n                            \"Value #A\": \"Current Receive Bandwidth\",\n                            \"Value #B\": \"Current Transmit Bandwidth\",\n                            \"Value #C\": \"Rate of Received Packets\",\n                            \"Value #D\": \"Rate of Transmitted Packets\",\n                            \"Value #E\": \"Rate of Received Packets Dropped\",\n                            \"Value #F\": \"Rate of Transmitted Packets Dropped\",\n                            \"namespace\": \"Namespace\"\n                        }\n                    }\n                }\n            ],\n            \"type\": \"table\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"Bps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 6,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 36\n            },\n            \"id\": 12,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(container_network_receive_bytes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=~\\\".+\\\"}[$__rate_interval])) by (namespace)\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Receive Bandwidth\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"Bps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 6,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 42\n            },\n            \"id\": 13,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(container_network_transmit_bytes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=~\\\".+\\\"}[$__rate_interval])) by (namespace)\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Transmit Bandwidth\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"Bps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 6,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 48\n            },\n            \"id\": 14,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"avg(irate(container_network_receive_bytes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=~\\\".+\\\"}[$__rate_interval])) by (namespace)\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Average Container Bandwidth by Namespace: Received\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"Bps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 6,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 54\n            },\n            \"id\": 15,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"avg(irate(container_network_transmit_bytes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=~\\\".+\\\"}[$__rate_interval])) by (namespace)\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Average Container Bandwidth by Namespace: Transmitted\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"pps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 6,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 60\n            },\n            \"id\": 16,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(irate(container_network_receive_packets_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=~\\\".+\\\"}[$__rate_interval])) by (namespace)\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Rate of Received Packets\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"pps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 6,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 66\n            },\n            \"id\": 17,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(irate(container_network_transmit_packets_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=~\\\".+\\\"}[$__rate_interval])) by (namespace)\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Rate of Transmitted Packets\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"pps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 6,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 72\n            },\n            \"id\": 18,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(irate(container_network_receive_packets_dropped_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=~\\\".+\\\"}[$__rate_interval])) by (namespace)\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Rate of Received Packets Dropped\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"pps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 6,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 78\n            },\n            \"id\": 19,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(irate(container_network_transmit_packets_dropped_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=~\\\".+\\\"}[$__rate_interval])) by (namespace)\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Rate of Transmitted Packets Dropped\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"iops\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 6,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 84\n            },\n            \"id\": 20,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"ceil(sum by(namespace) (rate(container_fs_reads_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", container!=\\\"\\\", device=~\\\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\\\", cluster=\\\"$cluster\\\", namespace!=\\\"\\\"}[$__rate_interval]) + rate(container_fs_writes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", container!=\\\"\\\", cluster=\\\"$cluster\\\", namespace!=\\\"\\\"}[$__rate_interval])))\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"IOPS(Reads+Writes)\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"Bps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 6,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 90\n            },\n            \"id\": 21,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum by(namespace) (rate(container_fs_reads_bytes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", container!=\\\"\\\", device=~\\\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\\\", cluster=\\\"$cluster\\\", namespace!=\\\"\\\"}[$__rate_interval]) + rate(container_fs_writes_bytes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", container!=\\\"\\\", cluster=\\\"$cluster\\\", namespace!=\\\"\\\"}[$__rate_interval]))\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"ThroughPut(Read+Write)\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"overrides\": [\n                    {\n                        \"matcher\": {\n                            \"id\": \"byRegexp\",\n                            \"options\": \"/IOPS/\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"unit\",\n                                \"value\": \"iops\"\n                            }\n                        ]\n                    },\n                    {\n                        \"matcher\": {\n                            \"id\": \"byRegexp\",\n                            \"options\": \"/Throughput/\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"unit\",\n                                \"value\": \"Bps\"\n                            }\n                        ]\n                    },\n                    {\n                        \"matcher\": {\n                            \"id\": \"byName\",\n                            \"options\": \"Namespace\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"links\",\n                                \"value\": [\n                                    {\n                                        \"title\": \"Drill down to pods\",\n                                        \"url\": \"/d/85a562078cdf77779eaa1add43ccec1e/k8s-resources-namespace?${datasource:queryparam}\u0026var-cluster=$cluster\u0026var-namespace=${__data.fields.Namespace}\"\n                                    }\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            },\n            \"gridPos\": {\n                \"h\": 6,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 96\n            },\n            \"id\": 22,\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum by(namespace) (rate(container_fs_reads_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", device=~\\\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\\\", container!=\\\"\\\", cluster=\\\"$cluster\\\", namespace!=\\\"\\\"}[$__rate_interval]))\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum by(namespace) (rate(container_fs_writes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", device=~\\\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\\\", container!=\\\"\\\", cluster=\\\"$cluster\\\", namespace!=\\\"\\\"}[$__rate_interval]))\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum by(namespace) (rate(container_fs_reads_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", device=~\\\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\\\", container!=\\\"\\\", cluster=\\\"$cluster\\\", namespace!=\\\"\\\"}[$__rate_interval]) + rate(container_fs_writes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", device=~\\\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\\\", container!=\\\"\\\", cluster=\\\"$cluster\\\", namespace!=\\\"\\\"}[$__rate_interval]))\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum by(namespace) (rate(container_fs_reads_bytes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", device=~\\\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\\\", container!=\\\"\\\", cluster=\\\"$cluster\\\", namespace!=\\\"\\\"}[$__rate_interval]))\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum by(namespace) (rate(container_fs_writes_bytes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", device=~\\\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\\\", container!=\\\"\\\", cluster=\\\"$cluster\\\", namespace!=\\\"\\\"}[$__rate_interval]))\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum by(namespace) (rate(container_fs_reads_bytes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", device=~\\\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\\\", container!=\\\"\\\", cluster=\\\"$cluster\\\", namespace!=\\\"\\\"}[$__rate_interval]) + rate(container_fs_writes_bytes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", device=~\\\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\\\", container!=\\\"\\\", cluster=\\\"$cluster\\\", namespace!=\\\"\\\"}[$__rate_interval]))\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                }\n            ],\n            \"title\": \"Current Storage IO\",\n            \"transformations\": [\n                {\n                    \"id\": \"joinByField\",\n                    \"options\": {\n                        \"byField\": \"namespace\",\n                        \"mode\": \"outer\"\n                    }\n                },\n                {\n                    \"id\": \"organize\",\n                    \"options\": {\n                        \"excludeByName\": {\n                            \"Time\": true,\n                            \"Time 1\": true,\n                            \"Time 2\": true,\n                            \"Time 3\": true,\n                            \"Time 4\": true,\n                            \"Time 5\": true,\n                            \"Time 6\": true\n                        },\n                        \"indexByName\": {\n                            \"Time 1\": 0,\n                            \"Time 2\": 1,\n                            \"Time 3\": 2,\n                            \"Time 4\": 3,\n                            \"Time 5\": 4,\n                            \"Time 6\": 5,\n                            \"Value #A\": 7,\n                            \"Value #B\": 8,\n                            \"Value #C\": 9,\n                            \"Value #D\": 10,\n                            \"Value #E\": 11,\n                            \"Value #F\": 12,\n                            \"namespace\": 6\n                        },\n                        \"renameByName\": {\n                            \"Value #A\": \"IOPS(Reads)\",\n                            \"Value #B\": \"IOPS(Writes)\",\n                            \"Value #C\": \"IOPS(Reads + Writes)\",\n                            \"Value #D\": \"Throughput(Read)\",\n                            \"Value #E\": \"Throughput(Write)\",\n                            \"Value #F\": \"Throughput(Read + Write)\",\n                            \"namespace\": \"Namespace\"\n                        }\n                    }\n                }\n            ],\n            \"type\": \"table\"\n        }\n    ],\n    \"refresh\": \"10s\",\n    \"schemaVersion\": 39,\n    \"tags\": [\n        \"kubernetes-mixin\"\n    ],\n    \"templating\": {\n        \"list\": [\n            {\n                \"current\": {\n                    \"selected\": true,\n                    \"text\": \"default\",\n                    \"value\": \"default\"\n                },\n                \"hide\": 0,\n                \"label\": \"Data source\",\n                \"name\": \"datasource\",\n                \"query\": \"prometheus\",\n                \"regex\": \"\",\n                \"type\": \"datasource\"\n            },\n            {\n                \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"${datasource}\"\n                },\n                \"hide\": 0,\n                \"label\": \"cluster\",\n                \"name\": \"cluster\",\n                \"query\": \"label_values(up{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\"}, cluster)\",\n                \"refresh\": 2,\n                \"sort\": 1,\n                \"type\": \"query\"\n            }\n        ]\n    },\n    \"time\": {\n        \"from\": \"now-1h\",\n        \"to\": \"now\"\n    },\n    \"timezone\": \"UTC\",\n    \"title\": \"Kubernetes / Compute Resources / Cluster\",\n    \"uid\": \"efa86fd1d0c121a26444b636a3f509a8\"\n}"},"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"grafana","app.kubernetes.io/name":"grafana","app.kubernetes.io/part-of":"kube-prometheus","app.kubernetes.io/version":"11.3.1"},"name":"grafana-dashboard-k8s-resources-cluster","namespace":"monitoring"}}
    creationTimestamp: "2024-11-25T14:40:26Z"
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 11.3.1
    name: grafana-dashboard-k8s-resources-cluster
    namespace: monitoring
    resourceVersion: "3039615"
    uid: 5583b162-f217-41aa-b19b-025e0b6b2e33
- apiVersion: v1
  data:
    k8s-resources-multicluster.json: |-
      {
          "editable": false,
          "links": [
              {
                  "asDropdown": true,
                  "includeVars": true,
                  "keepTime": true,
                  "tags": [
                      "kubernetes-mixin"
                  ],
                  "targetBlank": false,
                  "title": "Kubernetes",
                  "type": "dashboards"
              }
          ],
          "panels": [
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "none"
                      }
                  },
                  "gridPos": {
                      "h": 3,
                      "w": 4,
                      "x": 0,
                      "y": 0
                  },
                  "id": 1,
                  "interval": "1m",
                  "options": {
                      "colorMode": "none"
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(cluster:node_cpu:ratio_rate5m) / count(cluster:node_cpu:ratio_rate5m)",
                          "instant": true
                      }
                  ],
                  "title": "CPU Utilisation",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 3,
                      "w": 4,
                      "x": 4,
                      "y": 0
                  },
                  "id": 2,
                  "interval": "1m",
                  "options": {
                      "colorMode": "none"
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(kube_pod_container_resource_requests{job=\"kube-state-metrics\", resource=\"cpu\"}) / sum(kube_node_status_allocatable{job=\"kube-state-metrics\", resource=\"cpu\"})",
                          "instant": true
                      }
                  ],
                  "title": "CPU Requests Commitment",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 3,
                      "w": 4,
                      "x": 8,
                      "y": 0
                  },
                  "id": 3,
                  "interval": "1m",
                  "options": {
                      "colorMode": "none"
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(kube_pod_container_resource_limits{job=\"kube-state-metrics\", resource=\"cpu\"}) / sum(kube_node_status_allocatable{job=\"kube-state-metrics\", resource=\"cpu\"})",
                          "instant": true
                      }
                  ],
                  "title": "CPU Limits Commitment",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 3,
                      "w": 4,
                      "x": 12,
                      "y": 0
                  },
                  "id": 4,
                  "interval": "1m",
                  "options": {
                      "colorMode": "none"
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "1 - sum(:node_memory_MemAvailable_bytes:sum) / sum(node_memory_MemTotal_bytes{job=\"node-exporter\"})",
                          "instant": true
                      }
                  ],
                  "title": "Memory Utilisation",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 3,
                      "w": 4,
                      "x": 16,
                      "y": 0
                  },
                  "id": 5,
                  "interval": "1m",
                  "options": {
                      "colorMode": "none"
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(kube_pod_container_resource_requests{job=\"kube-state-metrics\", resource=\"memory\"}) / sum(kube_node_status_allocatable{job=\"kube-state-metrics\", resource=\"memory\"})",
                          "instant": true
                      }
                  ],
                  "title": "Memory Requests Commitment",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 3,
                      "w": 4,
                      "x": 20,
                      "y": 0
                  },
                  "id": 6,
                  "interval": "1m",
                  "options": {
                      "colorMode": "none"
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(kube_pod_container_resource_limits{job=\"kube-state-metrics\", resource=\"memory\"}) / sum(kube_node_status_allocatable{job=\"kube-state-metrics\", resource=\"memory\"})",
                          "instant": true
                      }
                  ],
                  "title": "Memory Limits Commitment",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "showPoints": "never"
                          }
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 1
                  },
                  "id": 7,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate) by (cluster)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "CPU Usage",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/%/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "percentunit"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Cluster"
                              },
                              "properties": [
                                  {
                                      "id": "links",
                                      "value": [
                                          {
                                              "title": "Drill down",
                                              "url": "/d/efa86fd1d0c121a26444b636a3f509a8/kubernetes-compute-resources-cluster?${datasource:queryparam}&var-cluster=${__data.fields.Cluster}"
                                          }
                                      ]
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 2
                  },
                  "id": 8,
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate) by (cluster)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(kube_pod_container_resource_requests{job=\"kube-state-metrics\", resource=\"cpu\"}) by (cluster)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate) by (cluster) / sum(kube_pod_container_resource_requests{job=\"kube-state-metrics\", resource=\"cpu\"}) by (cluster)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(kube_pod_container_resource_limits{job=\"kube-state-metrics\", resource=\"cpu\"}) by (cluster)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate) by (cluster) / sum(kube_pod_container_resource_limits{job=\"kube-state-metrics\", resource=\"cpu\"}) by (cluster)",
                          "format": "table",
                          "instant": true
                      }
                  ],
                  "title": "CPU Quota",
                  "transformations": [
                      {
                          "id": "joinByField",
                          "options": {
                              "byField": "cluster",
                              "mode": "outer"
                          }
                      },
                      {
                          "id": "organize",
                          "options": {
                              "excludeByName": {
                                  "Time": true,
                                  "Time 1": true,
                                  "Time 2": true,
                                  "Time 3": true,
                                  "Time 4": true,
                                  "Time 5": true
                              },
                              "indexByName": {
                                  "Time 1": 0,
                                  "Time 2": 1,
                                  "Time 3": 2,
                                  "Time 4": 3,
                                  "Time 5": 4,
                                  "Value #A": 6,
                                  "Value #B": 7,
                                  "Value #C": 8,
                                  "Value #D": 9,
                                  "Value #E": 10,
                                  "cluster": 5
                              },
                              "renameByName": {
                                  "Value #A": "CPU Usage",
                                  "Value #B": "CPU Requests",
                                  "Value #C": "CPU Requests %",
                                  "Value #D": "CPU Limits",
                                  "Value #E": "CPU Limits %",
                                  "cluster": "Cluster"
                              }
                          }
                      }
                  ],
                  "type": "table"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "showPoints": "never"
                          },
                          "unit": "bytes"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 3
                  },
                  "id": 9,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(container_memory_rss{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", container!=\"\"}) by (cluster)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Memory Usage (w/o cache)",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "bytes"
                      },
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/%/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "percentunit"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Cluster"
                              },
                              "properties": [
                                  {
                                      "id": "links",
                                      "value": [
                                          {
                                              "title": "Drill down",
                                              "url": "/d/efa86fd1d0c121a26444b636a3f509a8/kubernetes-compute-resources-cluster?${datasource:queryparam}&var-cluster=${__data.fields.Cluster}"
                                          }
                                      ]
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 4
                  },
                  "id": 10,
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(container_memory_rss{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", container!=\"\"}) by (cluster)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(kube_pod_container_resource_requests{job=\"kube-state-metrics\", resource=\"memory\"}) by (cluster)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(container_memory_rss{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", container!=\"\"}) by (cluster) / sum(kube_pod_container_resource_requests{job=\"kube-state-metrics\", resource=\"memory\"}) by (cluster)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(kube_pod_container_resource_limits{job=\"kube-state-metrics\", resource=\"memory\"}) by (cluster)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(container_memory_rss{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", container!=\"\"}) by (cluster) / sum(kube_pod_container_resource_limits{job=\"kube-state-metrics\", resource=\"memory\"}) by (cluster)",
                          "format": "table",
                          "instant": true
                      }
                  ],
                  "title": "Memory Requests by Cluster",
                  "transformations": [
                      {
                          "id": "joinByField",
                          "options": {
                              "byField": "cluster",
                              "mode": "outer"
                          }
                      },
                      {
                          "id": "organize",
                          "options": {
                              "excludeByName": {
                                  "Time": true,
                                  "Time 1": true,
                                  "Time 2": true,
                                  "Time 3": true,
                                  "Time 4": true,
                                  "Time 5": true
                              },
                              "indexByName": {
                                  "Time 1": 0,
                                  "Time 2": 1,
                                  "Time 3": 2,
                                  "Time 4": 3,
                                  "Time 5": 4,
                                  "Value #A": 6,
                                  "Value #B": 7,
                                  "Value #C": 8,
                                  "Value #D": 9,
                                  "Value #E": 10,
                                  "cluster": 5
                              },
                              "renameByName": {
                                  "Value #A": "Memory Usage",
                                  "Value #B": "Memory Requests",
                                  "Value #C": "Memory Requests %",
                                  "Value #D": "Memory Limits",
                                  "Value #E": "Memory Limits %",
                                  "cluster": "Cluster"
                              }
                          }
                      }
                  ],
                  "type": "table"
              }
          ],
          "refresh": "10s",
          "schemaVersion": 39,
          "tags": [
              "kubernetes-mixin"
          ],
          "templating": {
              "list": [
                  {
                      "current": {
                          "selected": true,
                          "text": "default",
                          "value": "default"
                      },
                      "hide": 0,
                      "label": "Data source",
                      "name": "datasource",
                      "query": "prometheus",
                      "regex": "",
                      "type": "datasource"
                  }
              ]
          },
          "time": {
              "from": "now-1h",
              "to": "now"
          },
          "timezone": "UTC",
          "title": "Kubernetes / Compute Resources /  Multi-Cluster",
          "uid": "b59e6c9f2fcbe2e16d77fc492374cc4f"
      }
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"k8s-resources-multicluster.json":"{\n    \"editable\": false,\n    \"links\": [\n        {\n            \"asDropdown\": true,\n            \"includeVars\": true,\n            \"keepTime\": true,\n            \"tags\": [\n                \"kubernetes-mixin\"\n            ],\n            \"targetBlank\": false,\n            \"title\": \"Kubernetes\",\n            \"type\": \"dashboards\"\n        }\n    ],\n    \"panels\": [\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"unit\": \"none\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 3,\n                \"w\": 4,\n                \"x\": 0,\n                \"y\": 0\n            },\n            \"id\": 1,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"colorMode\": \"none\"\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(cluster:node_cpu:ratio_rate5m) / count(cluster:node_cpu:ratio_rate5m)\",\n                    \"instant\": true\n                }\n            ],\n            \"title\": \"CPU Utilisation\",\n            \"type\": \"stat\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"unit\": \"percentunit\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 3,\n                \"w\": 4,\n                \"x\": 4,\n                \"y\": 0\n            },\n            \"id\": 2,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"colorMode\": \"none\"\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(kube_pod_container_resource_requests{job=\\\"kube-state-metrics\\\", resource=\\\"cpu\\\"}) / sum(kube_node_status_allocatable{job=\\\"kube-state-metrics\\\", resource=\\\"cpu\\\"})\",\n                    \"instant\": true\n                }\n            ],\n            \"title\": \"CPU Requests Commitment\",\n            \"type\": \"stat\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"unit\": \"percentunit\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 3,\n                \"w\": 4,\n                \"x\": 8,\n                \"y\": 0\n            },\n            \"id\": 3,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"colorMode\": \"none\"\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(kube_pod_container_resource_limits{job=\\\"kube-state-metrics\\\", resource=\\\"cpu\\\"}) / sum(kube_node_status_allocatable{job=\\\"kube-state-metrics\\\", resource=\\\"cpu\\\"})\",\n                    \"instant\": true\n                }\n            ],\n            \"title\": \"CPU Limits Commitment\",\n            \"type\": \"stat\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"unit\": \"percentunit\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 3,\n                \"w\": 4,\n                \"x\": 12,\n                \"y\": 0\n            },\n            \"id\": 4,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"colorMode\": \"none\"\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"1 - sum(:node_memory_MemAvailable_bytes:sum) / sum(node_memory_MemTotal_bytes{job=\\\"node-exporter\\\"})\",\n                    \"instant\": true\n                }\n            ],\n            \"title\": \"Memory Utilisation\",\n            \"type\": \"stat\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"unit\": \"percentunit\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 3,\n                \"w\": 4,\n                \"x\": 16,\n                \"y\": 0\n            },\n            \"id\": 5,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"colorMode\": \"none\"\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(kube_pod_container_resource_requests{job=\\\"kube-state-metrics\\\", resource=\\\"memory\\\"}) / sum(kube_node_status_allocatable{job=\\\"kube-state-metrics\\\", resource=\\\"memory\\\"})\",\n                    \"instant\": true\n                }\n            ],\n            \"title\": \"Memory Requests Commitment\",\n            \"type\": \"stat\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"unit\": \"percentunit\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 3,\n                \"w\": 4,\n                \"x\": 20,\n                \"y\": 0\n            },\n            \"id\": 6,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"colorMode\": \"none\"\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(kube_pod_container_resource_limits{job=\\\"kube-state-metrics\\\", resource=\\\"memory\\\"}) / sum(kube_node_status_allocatable{job=\\\"kube-state-metrics\\\", resource=\\\"memory\\\"})\",\n                    \"instant\": true\n                }\n            ],\n            \"title\": \"Memory Limits Commitment\",\n            \"type\": \"stat\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"showPoints\": \"never\"\n                    }\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 1\n            },\n            \"id\": 7,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate) by (cluster)\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"CPU Usage\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"overrides\": [\n                    {\n                        \"matcher\": {\n                            \"id\": \"byRegexp\",\n                            \"options\": \"/%/\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"unit\",\n                                \"value\": \"percentunit\"\n                            }\n                        ]\n                    },\n                    {\n                        \"matcher\": {\n                            \"id\": \"byName\",\n                            \"options\": \"Cluster\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"links\",\n                                \"value\": [\n                                    {\n                                        \"title\": \"Drill down\",\n                                        \"url\": \"/d/efa86fd1d0c121a26444b636a3f509a8/kubernetes-compute-resources-cluster?${datasource:queryparam}\u0026var-cluster=${__data.fields.Cluster}\"\n                                    }\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 2\n            },\n            \"id\": 8,\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate) by (cluster)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(kube_pod_container_resource_requests{job=\\\"kube-state-metrics\\\", resource=\\\"cpu\\\"}) by (cluster)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate) by (cluster) / sum(kube_pod_container_resource_requests{job=\\\"kube-state-metrics\\\", resource=\\\"cpu\\\"}) by (cluster)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(kube_pod_container_resource_limits{job=\\\"kube-state-metrics\\\", resource=\\\"cpu\\\"}) by (cluster)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate) by (cluster) / sum(kube_pod_container_resource_limits{job=\\\"kube-state-metrics\\\", resource=\\\"cpu\\\"}) by (cluster)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                }\n            ],\n            \"title\": \"CPU Quota\",\n            \"transformations\": [\n                {\n                    \"id\": \"joinByField\",\n                    \"options\": {\n                        \"byField\": \"cluster\",\n                        \"mode\": \"outer\"\n                    }\n                },\n                {\n                    \"id\": \"organize\",\n                    \"options\": {\n                        \"excludeByName\": {\n                            \"Time\": true,\n                            \"Time 1\": true,\n                            \"Time 2\": true,\n                            \"Time 3\": true,\n                            \"Time 4\": true,\n                            \"Time 5\": true\n                        },\n                        \"indexByName\": {\n                            \"Time 1\": 0,\n                            \"Time 2\": 1,\n                            \"Time 3\": 2,\n                            \"Time 4\": 3,\n                            \"Time 5\": 4,\n                            \"Value #A\": 6,\n                            \"Value #B\": 7,\n                            \"Value #C\": 8,\n                            \"Value #D\": 9,\n                            \"Value #E\": 10,\n                            \"cluster\": 5\n                        },\n                        \"renameByName\": {\n                            \"Value #A\": \"CPU Usage\",\n                            \"Value #B\": \"CPU Requests\",\n                            \"Value #C\": \"CPU Requests %\",\n                            \"Value #D\": \"CPU Limits\",\n                            \"Value #E\": \"CPU Limits %\",\n                            \"cluster\": \"Cluster\"\n                        }\n                    }\n                }\n            ],\n            \"type\": \"table\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"showPoints\": \"never\"\n                    },\n                    \"unit\": \"bytes\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 3\n            },\n            \"id\": 9,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(container_memory_rss{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", container!=\\\"\\\"}) by (cluster)\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Memory Usage (w/o cache)\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"unit\": \"bytes\"\n                },\n                \"overrides\": [\n                    {\n                        \"matcher\": {\n                            \"id\": \"byRegexp\",\n                            \"options\": \"/%/\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"unit\",\n                                \"value\": \"percentunit\"\n                            }\n                        ]\n                    },\n                    {\n                        \"matcher\": {\n                            \"id\": \"byName\",\n                            \"options\": \"Cluster\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"links\",\n                                \"value\": [\n                                    {\n                                        \"title\": \"Drill down\",\n                                        \"url\": \"/d/efa86fd1d0c121a26444b636a3f509a8/kubernetes-compute-resources-cluster?${datasource:queryparam}\u0026var-cluster=${__data.fields.Cluster}\"\n                                    }\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 4\n            },\n            \"id\": 10,\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(container_memory_rss{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", container!=\\\"\\\"}) by (cluster)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(kube_pod_container_resource_requests{job=\\\"kube-state-metrics\\\", resource=\\\"memory\\\"}) by (cluster)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(container_memory_rss{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", container!=\\\"\\\"}) by (cluster) / sum(kube_pod_container_resource_requests{job=\\\"kube-state-metrics\\\", resource=\\\"memory\\\"}) by (cluster)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(kube_pod_container_resource_limits{job=\\\"kube-state-metrics\\\", resource=\\\"memory\\\"}) by (cluster)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(container_memory_rss{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", container!=\\\"\\\"}) by (cluster) / sum(kube_pod_container_resource_limits{job=\\\"kube-state-metrics\\\", resource=\\\"memory\\\"}) by (cluster)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                }\n            ],\n            \"title\": \"Memory Requests by Cluster\",\n            \"transformations\": [\n                {\n                    \"id\": \"joinByField\",\n                    \"options\": {\n                        \"byField\": \"cluster\",\n                        \"mode\": \"outer\"\n                    }\n                },\n                {\n                    \"id\": \"organize\",\n                    \"options\": {\n                        \"excludeByName\": {\n                            \"Time\": true,\n                            \"Time 1\": true,\n                            \"Time 2\": true,\n                            \"Time 3\": true,\n                            \"Time 4\": true,\n                            \"Time 5\": true\n                        },\n                        \"indexByName\": {\n                            \"Time 1\": 0,\n                            \"Time 2\": 1,\n                            \"Time 3\": 2,\n                            \"Time 4\": 3,\n                            \"Time 5\": 4,\n                            \"Value #A\": 6,\n                            \"Value #B\": 7,\n                            \"Value #C\": 8,\n                            \"Value #D\": 9,\n                            \"Value #E\": 10,\n                            \"cluster\": 5\n                        },\n                        \"renameByName\": {\n                            \"Value #A\": \"Memory Usage\",\n                            \"Value #B\": \"Memory Requests\",\n                            \"Value #C\": \"Memory Requests %\",\n                            \"Value #D\": \"Memory Limits\",\n                            \"Value #E\": \"Memory Limits %\",\n                            \"cluster\": \"Cluster\"\n                        }\n                    }\n                }\n            ],\n            \"type\": \"table\"\n        }\n    ],\n    \"refresh\": \"10s\",\n    \"schemaVersion\": 39,\n    \"tags\": [\n        \"kubernetes-mixin\"\n    ],\n    \"templating\": {\n        \"list\": [\n            {\n                \"current\": {\n                    \"selected\": true,\n                    \"text\": \"default\",\n                    \"value\": \"default\"\n                },\n                \"hide\": 0,\n                \"label\": \"Data source\",\n                \"name\": \"datasource\",\n                \"query\": \"prometheus\",\n                \"regex\": \"\",\n                \"type\": \"datasource\"\n            }\n        ]\n    },\n    \"time\": {\n        \"from\": \"now-1h\",\n        \"to\": \"now\"\n    },\n    \"timezone\": \"UTC\",\n    \"title\": \"Kubernetes / Compute Resources /  Multi-Cluster\",\n    \"uid\": \"b59e6c9f2fcbe2e16d77fc492374cc4f\"\n}"},"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"grafana","app.kubernetes.io/name":"grafana","app.kubernetes.io/part-of":"kube-prometheus","app.kubernetes.io/version":"11.3.1"},"name":"grafana-dashboard-k8s-resources-multicluster","namespace":"monitoring"}}
    creationTimestamp: "2024-11-25T14:40:26Z"
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 11.3.1
    name: grafana-dashboard-k8s-resources-multicluster
    namespace: monitoring
    resourceVersion: "3039616"
    uid: 97ec9abe-cf67-41f4-b18c-adce7a37d18c
- apiVersion: v1
  data:
    k8s-resources-namespace.json: |-
      {
          "editable": false,
          "links": [
              {
                  "asDropdown": true,
                  "includeVars": true,
                  "keepTime": true,
                  "tags": [
                      "kubernetes-mixin"
                  ],
                  "targetBlank": false,
                  "title": "Kubernetes",
                  "type": "dashboards"
              }
          ],
          "panels": [
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 3,
                      "w": 6,
                      "x": 0,
                      "y": 0
                  },
                  "id": 1,
                  "interval": "1m",
                  "options": {
                      "colorMode": "none"
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\"$cluster\", namespace=\"$namespace\"}) / sum(kube_pod_container_resource_requests{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"cpu\"})",
                          "instant": true
                      }
                  ],
                  "title": "CPU Utilisation (from requests)",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 3,
                      "w": 6,
                      "x": 6,
                      "y": 0
                  },
                  "id": 2,
                  "interval": "1m",
                  "options": {
                      "colorMode": "none"
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\"$cluster\", namespace=\"$namespace\"}) / sum(kube_pod_container_resource_limits{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"cpu\"})",
                          "instant": true
                      }
                  ],
                  "title": "CPU Utilisation (from limits)",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 3,
                      "w": 6,
                      "x": 12,
                      "y": 0
                  },
                  "id": 3,
                  "interval": "1m",
                  "options": {
                      "colorMode": "none"
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(container_memory_working_set_bytes{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\",container!=\"\", image!=\"\"}) / sum(kube_pod_container_resource_requests{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"memory\"})",
                          "instant": true
                      }
                  ],
                  "title": "Memory Utilisation (from requests)",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 3,
                      "w": 6,
                      "x": 18,
                      "y": 0
                  },
                  "id": 4,
                  "interval": "1m",
                  "options": {
                      "colorMode": "none"
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(container_memory_working_set_bytes{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\",container!=\"\", image!=\"\"}) / sum(kube_pod_container_resource_limits{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"memory\"})",
                          "instant": true
                      }
                  ],
                  "title": "Memory Utilisation (from limits)",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          }
                      },
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byFrameRefID",
                                  "options": "B"
                              },
                              "properties": [
                                  {
                                      "id": "custom.lineStyle",
                                      "value": {
                                          "fill": "dash"
                                      }
                                  },
                                  {
                                      "id": "custom.lineWidth",
                                      "value": 2
                                  },
                                  {
                                      "id": "color",
                                      "value": {
                                          "fixedColor": "red",
                                          "mode": "fixed"
                                      }
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byFrameRefID",
                                  "options": "C"
                              },
                              "properties": [
                                  {
                                      "id": "custom.lineStyle",
                                      "value": {
                                          "fill": "dash"
                                      }
                                  },
                                  {
                                      "id": "custom.lineWidth",
                                      "value": 2
                                  },
                                  {
                                      "id": "color",
                                      "value": {
                                          "fixedColor": "orange",
                                          "mode": "fixed"
                                      }
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 7
                  },
                  "id": 5,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
                          "legendFormat": "__auto"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "scalar(max(kube_resourcequota{cluster=\"$cluster\", namespace=\"$namespace\", type=\"hard\",resource=\"requests.cpu\"}))",
                          "legendFormat": "quota - requests"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "scalar(max(kube_resourcequota{cluster=\"$cluster\", namespace=\"$namespace\", type=\"hard\",resource=\"limits.cpu\"}))",
                          "legendFormat": "quota - limits"
                      }
                  ],
                  "title": "CPU Usage",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/%/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "percentunit"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Pod"
                              },
                              "properties": [
                                  {
                                      "id": "links",
                                      "value": [
                                          {
                                              "title": "Drill down to pods",
                                              "url": "/d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?${datasource:queryparam}&var-cluster=$cluster&var-namespace=$namespace&var-pod=${__data.fields.Pod}"
                                          }
                                      ]
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 14
                  },
                  "id": 6,
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod) / sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod) / sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      }
                  ],
                  "title": "CPU Quota",
                  "transformations": [
                      {
                          "id": "joinByField",
                          "options": {
                              "byField": "pod",
                              "mode": "outer"
                          }
                      },
                      {
                          "id": "organize",
                          "options": {
                              "excludeByName": {
                                  "Time": true,
                                  "Time 1": true,
                                  "Time 2": true,
                                  "Time 3": true,
                                  "Time 4": true,
                                  "Time 5": true
                              },
                              "indexByName": {
                                  "Time 1": 0,
                                  "Time 2": 1,
                                  "Time 3": 2,
                                  "Time 4": 3,
                                  "Time 5": 4,
                                  "Value #A": 6,
                                  "Value #B": 7,
                                  "Value #C": 8,
                                  "Value #D": 9,
                                  "Value #E": 10,
                                  "pod": 5
                              },
                              "renameByName": {
                                  "Value #A": "CPU Usage",
                                  "Value #B": "CPU Requests",
                                  "Value #C": "CPU Requests %",
                                  "Value #D": "CPU Limits",
                                  "Value #E": "CPU Limits %",
                                  "pod": "Pod"
                              }
                          }
                      }
                  ],
                  "type": "table"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "bytes"
                      },
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byFrameRefID",
                                  "options": "B"
                              },
                              "properties": [
                                  {
                                      "id": "custom.lineStyle",
                                      "value": {
                                          "fill": "dash"
                                      }
                                  },
                                  {
                                      "id": "custom.lineWidth",
                                      "value": 2
                                  },
                                  {
                                      "id": "color",
                                      "value": {
                                          "fixedColor": "red",
                                          "mode": "fixed"
                                      }
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byFrameRefID",
                                  "options": "C"
                              },
                              "properties": [
                                  {
                                      "id": "custom.lineStyle",
                                      "value": {
                                          "fill": "dash"
                                      }
                                  },
                                  {
                                      "id": "custom.lineWidth",
                                      "value": 2
                                  },
                                  {
                                      "id": "color",
                                      "value": {
                                          "fixedColor": "orange",
                                          "mode": "fixed"
                                      }
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 21
                  },
                  "id": 7,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(container_memory_working_set_bytes{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", container!=\"\", image!=\"\"}) by (pod)",
                          "legendFormat": "__auto"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "scalar(max(kube_resourcequota{cluster=\"$cluster\", namespace=\"$namespace\", type=\"hard\",resource=\"requests.memory\"}))",
                          "legendFormat": "quota - requests"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "scalar(max(kube_resourcequota{cluster=\"$cluster\", namespace=\"$namespace\", type=\"hard\",resource=\"limits.memory\"}))",
                          "legendFormat": "quota - limits"
                      }
                  ],
                  "title": "Memory Usage (w/o cache)",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "bytes"
                      },
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/%/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "percentunit"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Pod"
                              },
                              "properties": [
                                  {
                                      "id": "links",
                                      "value": [
                                          {
                                              "title": "Drill down to pods",
                                              "url": "/d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?${datasource:queryparam}&var-cluster=$cluster&var-namespace=$namespace&var-pod=${__data.fields.Pod}"
                                          }
                                      ]
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 28
                  },
                  "id": 8,
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(container_memory_working_set_bytes{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\",container!=\"\", image!=\"\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_requests{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(container_memory_working_set_bytes{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\",container!=\"\", image!=\"\"}) by (pod) / sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_requests{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_limits{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(container_memory_working_set_bytes{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\",container!=\"\", image!=\"\"}) by (pod) / sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_limits{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(container_memory_rss{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\",container!=\"\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(container_memory_cache{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\",container!=\"\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(container_memory_swap{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\",container!=\"\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      }
                  ],
                  "title": "Memory Quota",
                  "transformations": [
                      {
                          "id": "joinByField",
                          "options": {
                              "byField": "pod",
                              "mode": "outer"
                          }
                      },
                      {
                          "id": "organize",
                          "options": {
                              "excludeByName": {
                                  "Time": true,
                                  "Time 1": true,
                                  "Time 2": true,
                                  "Time 3": true,
                                  "Time 4": true,
                                  "Time 5": true,
                                  "Time 6": true,
                                  "Time 7": true,
                                  "Time 8": true
                              },
                              "indexByName": {
                                  "Time 1": 0,
                                  "Time 2": 1,
                                  "Time 3": 2,
                                  "Time 4": 3,
                                  "Time 5": 4,
                                  "Time 6": 5,
                                  "Time 7": 6,
                                  "Time 8": 7,
                                  "Value #A": 9,
                                  "Value #B": 10,
                                  "Value #C": 11,
                                  "Value #D": 12,
                                  "Value #E": 13,
                                  "Value #F": 14,
                                  "Value #G": 15,
                                  "Value #H": 16,
                                  "pod": 8
                              },
                              "renameByName": {
                                  "Value #A": "Memory Usage",
                                  "Value #B": "Memory Requests",
                                  "Value #C": "Memory Requests %",
                                  "Value #D": "Memory Limits",
                                  "Value #E": "Memory Limits %",
                                  "Value #F": "Memory Usage (RSS)",
                                  "Value #G": "Memory Usage (Cache)",
                                  "Value #H": "Memory Usage (Swap)",
                                  "pod": "Pod"
                              }
                          }
                      }
                  ],
                  "type": "table"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/Bandwidth/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "Bps"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/Packets/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "pps"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Pod"
                              },
                              "properties": [
                                  {
                                      "id": "links",
                                      "value": [
                                          {
                                              "title": "Drill down to pods",
                                              "url": "/d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?${datasource:queryparam}&var-cluster=$cluster&var-namespace=$namespace&var-pod=${__data.fields.Pod}"
                                          }
                                      ]
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 35
                  },
                  "id": 9,
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(container_network_receive_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(container_network_transmit_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(container_network_receive_packets_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(container_network_transmit_packets_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(container_network_receive_packets_dropped_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(container_network_transmit_packets_dropped_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])) by (pod)",
                          "format": "table",
                          "instant": true
                      }
                  ],
                  "title": "Current Network Usage",
                  "transformations": [
                      {
                          "id": "joinByField",
                          "options": {
                              "byField": "pod",
                              "mode": "outer"
                          }
                      },
                      {
                          "id": "organize",
                          "options": {
                              "excludeByName": {
                                  "Time": true,
                                  "Time 1": true,
                                  "Time 2": true,
                                  "Time 3": true,
                                  "Time 4": true,
                                  "Time 5": true,
                                  "Time 6": true
                              },
                              "indexByName": {
                                  "Time 1": 0,
                                  "Time 2": 1,
                                  "Time 3": 2,
                                  "Time 4": 3,
                                  "Time 5": 4,
                                  "Time 6": 5,
                                  "Value #A": 7,
                                  "Value #B": 8,
                                  "Value #C": 9,
                                  "Value #D": 10,
                                  "Value #E": 11,
                                  "Value #F": 12,
                                  "pod": 6
                              },
                              "renameByName": {
                                  "Value #A": "Current Receive Bandwidth",
                                  "Value #B": "Current Transmit Bandwidth",
                                  "Value #C": "Rate of Received Packets",
                                  "Value #D": "Rate of Transmitted Packets",
                                  "Value #E": "Rate of Received Packets Dropped",
                                  "Value #F": "Rate of Transmitted Packets Dropped",
                                  "pod": "Pod"
                              }
                          }
                      }
                  ],
                  "type": "table"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 42
                  },
                  "id": 10,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(container_network_receive_bytes_total{cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])) by (pod)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Receive Bandwidth",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 42
                  },
                  "id": 11,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(container_network_transmit_bytes_total{cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])) by (pod)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Transmit Bandwidth",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 49
                  },
                  "id": 12,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(irate(container_network_receive_packets_total{cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])) by (pod)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Received Packets",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 49
                  },
                  "id": 13,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(irate(container_network_transmit_packets_total{cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])) by (pod)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Transmitted Packets",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 56
                  },
                  "id": 14,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(irate(container_network_receive_packets_dropped_total{cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])) by (pod)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Received Packets Dropped",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 56
                  },
                  "id": 15,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(irate(container_network_transmit_packets_dropped_total{cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])) by (pod)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Transmitted Packets Dropped",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "iops"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 63
                  },
                  "id": 16,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "ceil(sum by(pod) (rate(container_fs_reads_total{container!=\"\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval]) + rate(container_fs_writes_total{container!=\"\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])))",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "IOPS(Reads+Writes)",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 63
                  },
                  "id": 17,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by(pod) (rate(container_fs_reads_bytes_total{container!=\"\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval]) + rate(container_fs_writes_bytes_total{container!=\"\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval]))",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "ThroughPut(Read+Write)",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/IOPS/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "iops"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/Throughput/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "Bps"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Pod"
                              },
                              "properties": [
                                  {
                                      "id": "links",
                                      "value": [
                                          {
                                              "title": "Drill down to pods",
                                              "url": "/d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?${datasource:queryparam}&var-cluster=$cluster&var-namespace=$namespace&var-pod=${__data.fields.Pod}"
                                          }
                                      ]
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 70
                  },
                  "id": 18,
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by(pod) (rate(container_fs_reads_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval]))",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by(pod) (rate(container_fs_writes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval]))",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by(pod) (rate(container_fs_reads_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval]) + rate(container_fs_writes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval]))",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by(pod) (rate(container_fs_reads_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval]))",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by(pod) (rate(container_fs_writes_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval]))",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by(pod) (rate(container_fs_reads_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval]) + rate(container_fs_writes_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval]))",
                          "format": "table",
                          "instant": true
                      }
                  ],
                  "title": "Current Storage IO",
                  "transformations": [
                      {
                          "id": "joinByField",
                          "options": {
                              "byField": "pod",
                              "mode": "outer"
                          }
                      },
                      {
                          "id": "organize",
                          "options": {
                              "excludeByName": {
                                  "Time": true,
                                  "Time 1": true,
                                  "Time 2": true,
                                  "Time 3": true,
                                  "Time 4": true,
                                  "Time 5": true,
                                  "Time 6": true
                              },
                              "indexByName": {
                                  "Time 1": 0,
                                  "Time 2": 1,
                                  "Time 3": 2,
                                  "Time 4": 3,
                                  "Time 5": 4,
                                  "Time 6": 5,
                                  "Value #A": 7,
                                  "Value #B": 8,
                                  "Value #C": 9,
                                  "Value #D": 10,
                                  "Value #E": 11,
                                  "Value #F": 12,
                                  "pod": 6
                              },
                              "renameByName": {
                                  "Value #A": "IOPS(Reads)",
                                  "Value #B": "IOPS(Writes)",
                                  "Value #C": "IOPS(Reads + Writes)",
                                  "Value #D": "Throughput(Read)",
                                  "Value #E": "Throughput(Write)",
                                  "Value #F": "Throughput(Read + Write)",
                                  "pod": "Pod"
                              }
                          }
                      }
                  ],
                  "type": "table"
              }
          ],
          "refresh": "10s",
          "schemaVersion": 39,
          "tags": [
              "kubernetes-mixin"
          ],
          "templating": {
              "list": [
                  {
                      "current": {
                          "selected": true,
                          "text": "default",
                          "value": "default"
                      },
                      "hide": 0,
                      "label": "Data source",
                      "name": "datasource",
                      "query": "prometheus",
                      "regex": "",
                      "type": "datasource"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "cluster",
                      "name": "cluster",
                      "query": "label_values(up{job=\"kube-state-metrics\"}, cluster)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "namespace",
                      "name": "namespace",
                      "query": "label_values(kube_namespace_status_phase{job=\"kube-state-metrics\", cluster=\"$cluster\"}, namespace)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  }
              ]
          },
          "time": {
              "from": "now-1h",
              "to": "now"
          },
          "timezone": "UTC",
          "title": "Kubernetes / Compute Resources / Namespace (Pods)",
          "uid": "85a562078cdf77779eaa1add43ccec1e"
      }
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"k8s-resources-namespace.json":"{\n    \"editable\": false,\n    \"links\": [\n        {\n            \"asDropdown\": true,\n            \"includeVars\": true,\n            \"keepTime\": true,\n            \"tags\": [\n                \"kubernetes-mixin\"\n            ],\n            \"targetBlank\": false,\n            \"title\": \"Kubernetes\",\n            \"type\": \"dashboards\"\n        }\n    ],\n    \"panels\": [\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"unit\": \"percentunit\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 3,\n                \"w\": 6,\n                \"x\": 0,\n                \"y\": 0\n            },\n            \"id\": 1,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"colorMode\": \"none\"\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}) / sum(kube_pod_container_resource_requests{job=\\\"kube-state-metrics\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"cpu\\\"})\",\n                    \"instant\": true\n                }\n            ],\n            \"title\": \"CPU Utilisation (from requests)\",\n            \"type\": \"stat\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"unit\": \"percentunit\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 3,\n                \"w\": 6,\n                \"x\": 6,\n                \"y\": 0\n            },\n            \"id\": 2,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"colorMode\": \"none\"\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}) / sum(kube_pod_container_resource_limits{job=\\\"kube-state-metrics\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"cpu\\\"})\",\n                    \"instant\": true\n                }\n            ],\n            \"title\": \"CPU Utilisation (from limits)\",\n            \"type\": \"stat\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"unit\": \"percentunit\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 3,\n                \"w\": 6,\n                \"x\": 12,\n                \"y\": 0\n            },\n            \"id\": 3,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"colorMode\": \"none\"\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(container_memory_working_set_bytes{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\", image!=\\\"\\\"}) / sum(kube_pod_container_resource_requests{job=\\\"kube-state-metrics\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"memory\\\"})\",\n                    \"instant\": true\n                }\n            ],\n            \"title\": \"Memory Utilisation (from requests)\",\n            \"type\": \"stat\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"unit\": \"percentunit\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 3,\n                \"w\": 6,\n                \"x\": 18,\n                \"y\": 0\n            },\n            \"id\": 4,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"colorMode\": \"none\"\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(container_memory_working_set_bytes{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\", image!=\\\"\\\"}) / sum(kube_pod_container_resource_limits{job=\\\"kube-state-metrics\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"memory\\\"})\",\n                    \"instant\": true\n                }\n            ],\n            \"title\": \"Memory Utilisation (from limits)\",\n            \"type\": \"stat\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    }\n                },\n                \"overrides\": [\n                    {\n                        \"matcher\": {\n                            \"id\": \"byFrameRefID\",\n                            \"options\": \"B\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"custom.lineStyle\",\n                                \"value\": {\n                                    \"fill\": \"dash\"\n                                }\n                            },\n                            {\n                                \"id\": \"custom.lineWidth\",\n                                \"value\": 2\n                            },\n                            {\n                                \"id\": \"color\",\n                                \"value\": {\n                                    \"fixedColor\": \"red\",\n                                    \"mode\": \"fixed\"\n                                }\n                            }\n                        ]\n                    },\n                    {\n                        \"matcher\": {\n                            \"id\": \"byFrameRefID\",\n                            \"options\": \"C\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"custom.lineStyle\",\n                                \"value\": {\n                                    \"fill\": \"dash\"\n                                }\n                            },\n                            {\n                                \"id\": \"custom.lineWidth\",\n                                \"value\": 2\n                            },\n                            {\n                                \"id\": \"color\",\n                                \"value\": {\n                                    \"fixedColor\": \"orange\",\n                                    \"mode\": \"fixed\"\n                                }\n                            }\n                        ]\n                    }\n                ]\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 7\n            },\n            \"id\": 5,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}) by (pod)\",\n                    \"legendFormat\": \"__auto\"\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"scalar(max(kube_resourcequota{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", type=\\\"hard\\\",resource=\\\"requests.cpu\\\"}))\",\n                    \"legendFormat\": \"quota - requests\"\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"scalar(max(kube_resourcequota{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", type=\\\"hard\\\",resource=\\\"limits.cpu\\\"}))\",\n                    \"legendFormat\": \"quota - limits\"\n                }\n            ],\n            \"title\": \"CPU Usage\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"overrides\": [\n                    {\n                        \"matcher\": {\n                            \"id\": \"byRegexp\",\n                            \"options\": \"/%/\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"unit\",\n                                \"value\": \"percentunit\"\n                            }\n                        ]\n                    },\n                    {\n                        \"matcher\": {\n                            \"id\": \"byName\",\n                            \"options\": \"Pod\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"links\",\n                                \"value\": [\n                                    {\n                                        \"title\": \"Drill down to pods\",\n                                        \"url\": \"/d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?${datasource:queryparam}\u0026var-cluster=$cluster\u0026var-namespace=$namespace\u0026var-pod=${__data.fields.Pod}\"\n                                    }\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 14\n            },\n            \"id\": 6,\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}) by (pod)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}) by (pod)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}) by (pod) / sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}) by (pod)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}) by (pod)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}) by (pod) / sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}) by (pod)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                }\n            ],\n            \"title\": \"CPU Quota\",\n            \"transformations\": [\n                {\n                    \"id\": \"joinByField\",\n                    \"options\": {\n                        \"byField\": \"pod\",\n                        \"mode\": \"outer\"\n                    }\n                },\n                {\n                    \"id\": \"organize\",\n                    \"options\": {\n                        \"excludeByName\": {\n                            \"Time\": true,\n                            \"Time 1\": true,\n                            \"Time 2\": true,\n                            \"Time 3\": true,\n                            \"Time 4\": true,\n                            \"Time 5\": true\n                        },\n                        \"indexByName\": {\n                            \"Time 1\": 0,\n                            \"Time 2\": 1,\n                            \"Time 3\": 2,\n                            \"Time 4\": 3,\n                            \"Time 5\": 4,\n                            \"Value #A\": 6,\n                            \"Value #B\": 7,\n                            \"Value #C\": 8,\n                            \"Value #D\": 9,\n                            \"Value #E\": 10,\n                            \"pod\": 5\n                        },\n                        \"renameByName\": {\n                            \"Value #A\": \"CPU Usage\",\n                            \"Value #B\": \"CPU Requests\",\n                            \"Value #C\": \"CPU Requests %\",\n                            \"Value #D\": \"CPU Limits\",\n                            \"Value #E\": \"CPU Limits %\",\n                            \"pod\": \"Pod\"\n                        }\n                    }\n                }\n            ],\n            \"type\": \"table\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"bytes\"\n                },\n                \"overrides\": [\n                    {\n                        \"matcher\": {\n                            \"id\": \"byFrameRefID\",\n                            \"options\": \"B\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"custom.lineStyle\",\n                                \"value\": {\n                                    \"fill\": \"dash\"\n                                }\n                            },\n                            {\n                                \"id\": \"custom.lineWidth\",\n                                \"value\": 2\n                            },\n                            {\n                                \"id\": \"color\",\n                                \"value\": {\n                                    \"fixedColor\": \"red\",\n                                    \"mode\": \"fixed\"\n                                }\n                            }\n                        ]\n                    },\n                    {\n                        \"matcher\": {\n                            \"id\": \"byFrameRefID\",\n                            \"options\": \"C\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"custom.lineStyle\",\n                                \"value\": {\n                                    \"fill\": \"dash\"\n                                }\n                            },\n                            {\n                                \"id\": \"custom.lineWidth\",\n                                \"value\": 2\n                            },\n                            {\n                                \"id\": \"color\",\n                                \"value\": {\n                                    \"fixedColor\": \"orange\",\n                                    \"mode\": \"fixed\"\n                                }\n                            }\n                        ]\n                    }\n                ]\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 21\n            },\n            \"id\": 7,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(container_memory_working_set_bytes{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", container!=\\\"\\\", image!=\\\"\\\"}) by (pod)\",\n                    \"legendFormat\": \"__auto\"\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"scalar(max(kube_resourcequota{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", type=\\\"hard\\\",resource=\\\"requests.memory\\\"}))\",\n                    \"legendFormat\": \"quota - requests\"\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"scalar(max(kube_resourcequota{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", type=\\\"hard\\\",resource=\\\"limits.memory\\\"}))\",\n                    \"legendFormat\": \"quota - limits\"\n                }\n            ],\n            \"title\": \"Memory Usage (w/o cache)\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"unit\": \"bytes\"\n                },\n                \"overrides\": [\n                    {\n                        \"matcher\": {\n                            \"id\": \"byRegexp\",\n                            \"options\": \"/%/\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"unit\",\n                                \"value\": \"percentunit\"\n                            }\n                        ]\n                    },\n                    {\n                        \"matcher\": {\n                            \"id\": \"byName\",\n                            \"options\": \"Pod\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"links\",\n                                \"value\": [\n                                    {\n                                        \"title\": \"Drill down to pods\",\n                                        \"url\": \"/d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?${datasource:queryparam}\u0026var-cluster=$cluster\u0026var-namespace=$namespace\u0026var-pod=${__data.fields.Pod}\"\n                                    }\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 28\n            },\n            \"id\": 8,\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(container_memory_working_set_bytes{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\", image!=\\\"\\\"}) by (pod)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_requests{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}) by (pod)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(container_memory_working_set_bytes{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\", image!=\\\"\\\"}) by (pod) / sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_requests{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}) by (pod)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_limits{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}) by (pod)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(container_memory_working_set_bytes{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\", image!=\\\"\\\"}) by (pod) / sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_limits{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}) by (pod)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(container_memory_rss{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\"}) by (pod)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(container_memory_cache{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\"}) by (pod)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(container_memory_swap{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\"}) by (pod)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                }\n            ],\n            \"title\": \"Memory Quota\",\n            \"transformations\": [\n                {\n                    \"id\": \"joinByField\",\n                    \"options\": {\n                        \"byField\": \"pod\",\n                        \"mode\": \"outer\"\n                    }\n                },\n                {\n                    \"id\": \"organize\",\n                    \"options\": {\n                        \"excludeByName\": {\n                            \"Time\": true,\n                            \"Time 1\": true,\n                            \"Time 2\": true,\n                            \"Time 3\": true,\n                            \"Time 4\": true,\n                            \"Time 5\": true,\n                            \"Time 6\": true,\n                            \"Time 7\": true,\n                            \"Time 8\": true\n                        },\n                        \"indexByName\": {\n                            \"Time 1\": 0,\n                            \"Time 2\": 1,\n                            \"Time 3\": 2,\n                            \"Time 4\": 3,\n                            \"Time 5\": 4,\n                            \"Time 6\": 5,\n                            \"Time 7\": 6,\n                            \"Time 8\": 7,\n                            \"Value #A\": 9,\n                            \"Value #B\": 10,\n                            \"Value #C\": 11,\n                            \"Value #D\": 12,\n                            \"Value #E\": 13,\n                            \"Value #F\": 14,\n                            \"Value #G\": 15,\n                            \"Value #H\": 16,\n                            \"pod\": 8\n                        },\n                        \"renameByName\": {\n                            \"Value #A\": \"Memory Usage\",\n                            \"Value #B\": \"Memory Requests\",\n                            \"Value #C\": \"Memory Requests %\",\n                            \"Value #D\": \"Memory Limits\",\n                            \"Value #E\": \"Memory Limits %\",\n                            \"Value #F\": \"Memory Usage (RSS)\",\n                            \"Value #G\": \"Memory Usage (Cache)\",\n                            \"Value #H\": \"Memory Usage (Swap)\",\n                            \"pod\": \"Pod\"\n                        }\n                    }\n                }\n            ],\n            \"type\": \"table\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"overrides\": [\n                    {\n                        \"matcher\": {\n                            \"id\": \"byRegexp\",\n                            \"options\": \"/Bandwidth/\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"unit\",\n                                \"value\": \"Bps\"\n                            }\n                        ]\n                    },\n                    {\n                        \"matcher\": {\n                            \"id\": \"byRegexp\",\n                            \"options\": \"/Packets/\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"unit\",\n                                \"value\": \"pps\"\n                            }\n                        ]\n                    },\n                    {\n                        \"matcher\": {\n                            \"id\": \"byName\",\n                            \"options\": \"Pod\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"links\",\n                                \"value\": [\n                                    {\n                                        \"title\": \"Drill down to pods\",\n                                        \"url\": \"/d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?${datasource:queryparam}\u0026var-cluster=$cluster\u0026var-namespace=$namespace\u0026var-pod=${__data.fields.Pod}\"\n                                    }\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 35\n            },\n            \"id\": 9,\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(container_network_receive_bytes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(container_network_transmit_bytes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(container_network_receive_packets_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(container_network_transmit_packets_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(container_network_receive_packets_dropped_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(container_network_transmit_packets_dropped_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                }\n            ],\n            \"title\": \"Current Network Usage\",\n            \"transformations\": [\n                {\n                    \"id\": \"joinByField\",\n                    \"options\": {\n                        \"byField\": \"pod\",\n                        \"mode\": \"outer\"\n                    }\n                },\n                {\n                    \"id\": \"organize\",\n                    \"options\": {\n                        \"excludeByName\": {\n                            \"Time\": true,\n                            \"Time 1\": true,\n                            \"Time 2\": true,\n                            \"Time 3\": true,\n                            \"Time 4\": true,\n                            \"Time 5\": true,\n                            \"Time 6\": true\n                        },\n                        \"indexByName\": {\n                            \"Time 1\": 0,\n                            \"Time 2\": 1,\n                            \"Time 3\": 2,\n                            \"Time 4\": 3,\n                            \"Time 5\": 4,\n                            \"Time 6\": 5,\n                            \"Value #A\": 7,\n                            \"Value #B\": 8,\n                            \"Value #C\": 9,\n                            \"Value #D\": 10,\n                            \"Value #E\": 11,\n                            \"Value #F\": 12,\n                            \"pod\": 6\n                        },\n                        \"renameByName\": {\n                            \"Value #A\": \"Current Receive Bandwidth\",\n                            \"Value #B\": \"Current Transmit Bandwidth\",\n                            \"Value #C\": \"Rate of Received Packets\",\n                            \"Value #D\": \"Rate of Transmitted Packets\",\n                            \"Value #E\": \"Rate of Received Packets Dropped\",\n                            \"Value #F\": \"Rate of Transmitted Packets Dropped\",\n                            \"pod\": \"Pod\"\n                        }\n                    }\n                }\n            ],\n            \"type\": \"table\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"Bps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 42\n            },\n            \"id\": 10,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(container_network_receive_bytes_total{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Receive Bandwidth\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"Bps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 42\n            },\n            \"id\": 11,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(container_network_transmit_bytes_total{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Transmit Bandwidth\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"pps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 49\n            },\n            \"id\": 12,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(irate(container_network_receive_packets_total{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Rate of Received Packets\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"pps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 49\n            },\n            \"id\": 13,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(irate(container_network_transmit_packets_total{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Rate of Transmitted Packets\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"pps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 56\n            },\n            \"id\": 14,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(irate(container_network_receive_packets_dropped_total{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Rate of Received Packets Dropped\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"pps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 56\n            },\n            \"id\": 15,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(irate(container_network_transmit_packets_dropped_total{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Rate of Transmitted Packets Dropped\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"iops\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 63\n            },\n            \"id\": 16,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"ceil(sum by(pod) (rate(container_fs_reads_total{container!=\\\"\\\", device=~\\\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]) + rate(container_fs_writes_total{container!=\\\"\\\", device=~\\\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval])))\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"IOPS(Reads+Writes)\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"Bps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 63\n            },\n            \"id\": 17,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum by(pod) (rate(container_fs_reads_bytes_total{container!=\\\"\\\", device=~\\\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]) + rate(container_fs_writes_bytes_total{container!=\\\"\\\", device=~\\\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]))\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"ThroughPut(Read+Write)\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"overrides\": [\n                    {\n                        \"matcher\": {\n                            \"id\": \"byRegexp\",\n                            \"options\": \"/IOPS/\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"unit\",\n                                \"value\": \"iops\"\n                            }\n                        ]\n                    },\n                    {\n                        \"matcher\": {\n                            \"id\": \"byRegexp\",\n                            \"options\": \"/Throughput/\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"unit\",\n                                \"value\": \"Bps\"\n                            }\n                        ]\n                    },\n                    {\n                        \"matcher\": {\n                            \"id\": \"byName\",\n                            \"options\": \"Pod\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"links\",\n                                \"value\": [\n                                    {\n                                        \"title\": \"Drill down to pods\",\n                                        \"url\": \"/d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?${datasource:queryparam}\u0026var-cluster=$cluster\u0026var-namespace=$namespace\u0026var-pod=${__data.fields.Pod}\"\n                                    }\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 70\n            },\n            \"id\": 18,\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum by(pod) (rate(container_fs_reads_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", device=~\\\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\\\", container!=\\\"\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]))\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum by(pod) (rate(container_fs_writes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", device=~\\\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\\\", container!=\\\"\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]))\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum by(pod) (rate(container_fs_reads_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", device=~\\\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\\\", container!=\\\"\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]) + rate(container_fs_writes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", device=~\\\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\\\", container!=\\\"\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]))\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum by(pod) (rate(container_fs_reads_bytes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", device=~\\\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\\\", container!=\\\"\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]))\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum by(pod) (rate(container_fs_writes_bytes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", device=~\\\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\\\", container!=\\\"\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]))\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum by(pod) (rate(container_fs_reads_bytes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", device=~\\\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\\\", container!=\\\"\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]) + rate(container_fs_writes_bytes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", device=~\\\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\\\", container!=\\\"\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]))\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                }\n            ],\n            \"title\": \"Current Storage IO\",\n            \"transformations\": [\n                {\n                    \"id\": \"joinByField\",\n                    \"options\": {\n                        \"byField\": \"pod\",\n                        \"mode\": \"outer\"\n                    }\n                },\n                {\n                    \"id\": \"organize\",\n                    \"options\": {\n                        \"excludeByName\": {\n                            \"Time\": true,\n                            \"Time 1\": true,\n                            \"Time 2\": true,\n                            \"Time 3\": true,\n                            \"Time 4\": true,\n                            \"Time 5\": true,\n                            \"Time 6\": true\n                        },\n                        \"indexByName\": {\n                            \"Time 1\": 0,\n                            \"Time 2\": 1,\n                            \"Time 3\": 2,\n                            \"Time 4\": 3,\n                            \"Time 5\": 4,\n                            \"Time 6\": 5,\n                            \"Value #A\": 7,\n                            \"Value #B\": 8,\n                            \"Value #C\": 9,\n                            \"Value #D\": 10,\n                            \"Value #E\": 11,\n                            \"Value #F\": 12,\n                            \"pod\": 6\n                        },\n                        \"renameByName\": {\n                            \"Value #A\": \"IOPS(Reads)\",\n                            \"Value #B\": \"IOPS(Writes)\",\n                            \"Value #C\": \"IOPS(Reads + Writes)\",\n                            \"Value #D\": \"Throughput(Read)\",\n                            \"Value #E\": \"Throughput(Write)\",\n                            \"Value #F\": \"Throughput(Read + Write)\",\n                            \"pod\": \"Pod\"\n                        }\n                    }\n                }\n            ],\n            \"type\": \"table\"\n        }\n    ],\n    \"refresh\": \"10s\",\n    \"schemaVersion\": 39,\n    \"tags\": [\n        \"kubernetes-mixin\"\n    ],\n    \"templating\": {\n        \"list\": [\n            {\n                \"current\": {\n                    \"selected\": true,\n                    \"text\": \"default\",\n                    \"value\": \"default\"\n                },\n                \"hide\": 0,\n                \"label\": \"Data source\",\n                \"name\": \"datasource\",\n                \"query\": \"prometheus\",\n                \"regex\": \"\",\n                \"type\": \"datasource\"\n            },\n            {\n                \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"${datasource}\"\n                },\n                \"hide\": 0,\n                \"label\": \"cluster\",\n                \"name\": \"cluster\",\n                \"query\": \"label_values(up{job=\\\"kube-state-metrics\\\"}, cluster)\",\n                \"refresh\": 2,\n                \"sort\": 1,\n                \"type\": \"query\"\n            },\n            {\n                \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"${datasource}\"\n                },\n                \"hide\": 0,\n                \"label\": \"namespace\",\n                \"name\": \"namespace\",\n                \"query\": \"label_values(kube_namespace_status_phase{job=\\\"kube-state-metrics\\\", cluster=\\\"$cluster\\\"}, namespace)\",\n                \"refresh\": 2,\n                \"sort\": 1,\n                \"type\": \"query\"\n            }\n        ]\n    },\n    \"time\": {\n        \"from\": \"now-1h\",\n        \"to\": \"now\"\n    },\n    \"timezone\": \"UTC\",\n    \"title\": \"Kubernetes / Compute Resources / Namespace (Pods)\",\n    \"uid\": \"85a562078cdf77779eaa1add43ccec1e\"\n}"},"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"grafana","app.kubernetes.io/name":"grafana","app.kubernetes.io/part-of":"kube-prometheus","app.kubernetes.io/version":"11.3.1"},"name":"grafana-dashboard-k8s-resources-namespace","namespace":"monitoring"}}
    creationTimestamp: "2024-11-25T14:40:26Z"
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 11.3.1
    name: grafana-dashboard-k8s-resources-namespace
    namespace: monitoring
    resourceVersion: "3039617"
    uid: 5aee08d8-151c-4185-a7a5-90f84c68f2ee
- apiVersion: v1
  data:
    k8s-resources-node.json: |-
      {
          "editable": false,
          "links": [
              {
                  "asDropdown": true,
                  "includeVars": true,
                  "keepTime": true,
                  "tags": [
                      "kubernetes-mixin"
                  ],
                  "targetBlank": false,
                  "title": "Kubernetes",
                  "type": "dashboards"
              }
          ],
          "panels": [
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true,
                              "stacking": {
                                  "mode": "normal"
                              }
                          }
                      },
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "max capacity"
                              },
                              "properties": [
                                  {
                                      "id": "color",
                                      "value": {
                                          "fixedColor": "red",
                                          "mode": "fixed"
                                      }
                                  },
                                  {
                                      "id": "custom.stacking",
                                      "value": {
                                          "mode": "none"
                                      }
                                  },
                                  {
                                      "id": "custom.hideFrom",
                                      "value": {
                                          "legend": false,
                                          "tooltip": true,
                                          "viz": false
                                      }
                                  },
                                  {
                                      "id": "custom.lineStyle",
                                      "value": {
                                          "dash": [
                                              10,
                                              10
                                          ],
                                          "fill": "dash"
                                      }
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 6,
                      "w": 24,
                      "x": 0,
                      "y": 0
                  },
                  "id": 1,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(kube_node_status_capacity{cluster=\"$cluster\", job=\"kube-state-metrics\", node=~\"$node\", resource=\"cpu\"})",
                          "legendFormat": "max capacity"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\"$cluster\", node=~\"$node\"}) by (pod)",
                          "legendFormat": "{{pod}}"
                      }
                  ],
                  "title": "CPU Usage",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/%/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "percentunit"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Pod"
                              },
                              "properties": [
                                  {
                                      "id": "links",
                                      "value": [
                                          {
                                              "title": "Drill down to pods",
                                              "url": "/d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?${datasource:queryparam}&var-cluster=$cluster&var-namespace=$namespace&var-pod=${__data.fields.Pod}"
                                          }
                                      ]
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 6,
                      "w": 24,
                      "x": 0,
                      "y": 6
                  },
                  "id": 2,
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\"$cluster\", node=~\"$node\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests{cluster=\"$cluster\", node=~\"$node\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\"$cluster\", node=~\"$node\"}) by (pod) / sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests{cluster=\"$cluster\", node=~\"$node\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits{cluster=\"$cluster\", node=~\"$node\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\"$cluster\", node=~\"$node\"}) by (pod) / sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits{cluster=\"$cluster\", node=~\"$node\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      }
                  ],
                  "title": "CPU Quota",
                  "transformations": [
                      {
                          "id": "joinByField",
                          "options": {
                              "byField": "pod",
                              "mode": "outer"
                          }
                      },
                      {
                          "id": "organize",
                          "options": {
                              "excludeByName": {
                                  "Time": true,
                                  "Time 1": true,
                                  "Time 2": true,
                                  "Time 3": true,
                                  "Time 4": true,
                                  "Time 5": true
                              },
                              "renameByName": {
                                  "Value #A": "CPU Usage",
                                  "Value #B": "CPU Requests",
                                  "Value #C": "CPU Requests %",
                                  "Value #D": "CPU Limits",
                                  "Value #E": "CPU Limits %",
                                  "pod": "Pod"
                              }
                          }
                      }
                  ],
                  "type": "table"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true,
                              "stacking": {
                                  "mode": "normal"
                              }
                          },
                          "unit": "bytes"
                      },
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "max capacity"
                              },
                              "properties": [
                                  {
                                      "id": "color",
                                      "value": {
                                          "fixedColor": "red",
                                          "mode": "fixed"
                                      }
                                  },
                                  {
                                      "id": "custom.stacking",
                                      "value": {
                                          "mode": "none"
                                      }
                                  },
                                  {
                                      "id": "custom.hideFrom",
                                      "value": {
                                          "legend": false,
                                          "tooltip": true,
                                          "viz": false
                                      }
                                  },
                                  {
                                      "id": "custom.lineStyle",
                                      "value": {
                                          "dash": [
                                              10,
                                              10
                                          ],
                                          "fill": "dash"
                                      }
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 6,
                      "w": 24,
                      "x": 0,
                      "y": 12
                  },
                  "id": 3,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(kube_node_status_capacity{cluster=\"$cluster\", job=\"kube-state-metrics\", node=~\"$node\", resource=\"memory\"})",
                          "legendFormat": "max capacity"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(node_namespace_pod_container:container_memory_working_set_bytes{cluster=\"$cluster\", node=~\"$node\", container!=\"\"}) by (pod)",
                          "legendFormat": "{{pod}}"
                      }
                  ],
                  "title": "Memory Usage (w/o cache)",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "bytes"
                      },
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/%/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "percentunit"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Pod"
                              },
                              "properties": [
                                  {
                                      "id": "links",
                                      "value": [
                                          {
                                              "title": "Drill down to pods",
                                              "url": "/d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?${datasource:queryparam}&var-cluster=$cluster&var-namespace=$namespace&var-pod=${__data.fields.Pod}"
                                          }
                                      ]
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 6,
                      "w": 24,
                      "x": 0,
                      "y": 18
                  },
                  "id": 4,
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(node_namespace_pod_container:container_memory_working_set_bytes{cluster=\"$cluster\", node=~\"$node\",container!=\"\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_requests{cluster=\"$cluster\", node=~\"$node\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(node_namespace_pod_container:container_memory_working_set_bytes{cluster=\"$cluster\", node=~\"$node\",container!=\"\"}) by (pod) / sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_requests{cluster=\"$cluster\", node=~\"$node\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_limits{cluster=\"$cluster\", node=~\"$node\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(node_namespace_pod_container:container_memory_working_set_bytes{cluster=\"$cluster\", node=~\"$node\",container!=\"\"}) by (pod) / sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_limits{cluster=\"$cluster\", node=~\"$node\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(node_namespace_pod_container:container_memory_rss{cluster=\"$cluster\", node=~\"$node\",container!=\"\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(node_namespace_pod_container:container_memory_cache{cluster=\"$cluster\", node=~\"$node\",container!=\"\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(node_namespace_pod_container:container_memory_swap{cluster=\"$cluster\", node=~\"$node\",container!=\"\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      }
                  ],
                  "title": "Memory Quota",
                  "transformations": [
                      {
                          "id": "joinByField",
                          "options": {
                              "byField": "pod",
                              "mode": "outer"
                          }
                      },
                      {
                          "id": "organize",
                          "options": {
                              "excludeByName": {
                                  "Time": true,
                                  "Time 1": true,
                                  "Time 2": true,
                                  "Time 3": true,
                                  "Time 4": true,
                                  "Time 5": true,
                                  "Time 6": true,
                                  "Time 7": true,
                                  "Time 8": true
                              },
                              "renameByName": {
                                  "Value #A": "Memory Usage",
                                  "Value #B": "Memory Requests",
                                  "Value #C": "Memory Requests %",
                                  "Value #D": "Memory Limits",
                                  "Value #E": "Memory Limits %",
                                  "Value #F": "Memory Usage (RSS)",
                                  "Value #G": "Memory Usage (Cache)",
                                  "Value #H": "Memory Usage (Swap)",
                                  "pod": "Pod"
                              }
                          }
                      }
                  ],
                  "type": "table"
              }
          ],
          "refresh": "10s",
          "schemaVersion": 39,
          "tags": [
              "kubernetes-mixin"
          ],
          "templating": {
              "list": [
                  {
                      "current": {
                          "selected": true,
                          "text": "default",
                          "value": "default"
                      },
                      "hide": 0,
                      "label": "Data source",
                      "name": "datasource",
                      "query": "prometheus",
                      "regex": "",
                      "type": "datasource"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "cluster",
                      "name": "cluster",
                      "query": "label_values(up{job=\"kube-state-metrics\"}, cluster)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "node",
                      "multi": true,
                      "name": "node",
                      "query": "label_values(kube_node_info{cluster=\"$cluster\"}, node)",
                      "refresh": 2,
                      "type": "query"
                  }
              ]
          },
          "time": {
              "from": "now-1h",
              "to": "now"
          },
          "timezone": "UTC",
          "title": "Kubernetes / Compute Resources / Node (Pods)",
          "uid": "200ac8fdbfbb74b39aff88118e4d1c2c"
      }
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"k8s-resources-node.json":"{\n    \"editable\": false,\n    \"links\": [\n        {\n            \"asDropdown\": true,\n            \"includeVars\": true,\n            \"keepTime\": true,\n            \"tags\": [\n                \"kubernetes-mixin\"\n            ],\n            \"targetBlank\": false,\n            \"title\": \"Kubernetes\",\n            \"type\": \"dashboards\"\n        }\n    ],\n    \"panels\": [\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true,\n                        \"stacking\": {\n                            \"mode\": \"normal\"\n                        }\n                    }\n                },\n                \"overrides\": [\n                    {\n                        \"matcher\": {\n                            \"id\": \"byName\",\n                            \"options\": \"max capacity\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"color\",\n                                \"value\": {\n                                    \"fixedColor\": \"red\",\n                                    \"mode\": \"fixed\"\n                                }\n                            },\n                            {\n                                \"id\": \"custom.stacking\",\n                                \"value\": {\n                                    \"mode\": \"none\"\n                                }\n                            },\n                            {\n                                \"id\": \"custom.hideFrom\",\n                                \"value\": {\n                                    \"legend\": false,\n                                    \"tooltip\": true,\n                                    \"viz\": false\n                                }\n                            },\n                            {\n                                \"id\": \"custom.lineStyle\",\n                                \"value\": {\n                                    \"dash\": [\n                                        10,\n                                        10\n                                    ],\n                                    \"fill\": \"dash\"\n                                }\n                            }\n                        ]\n                    }\n                ]\n            },\n            \"gridPos\": {\n                \"h\": 6,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 0\n            },\n            \"id\": 1,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(kube_node_status_capacity{cluster=\\\"$cluster\\\", job=\\\"kube-state-metrics\\\", node=~\\\"$node\\\", resource=\\\"cpu\\\"})\",\n                    \"legendFormat\": \"max capacity\"\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\", node=~\\\"$node\\\"}) by (pod)\",\n                    \"legendFormat\": \"{{pod}}\"\n                }\n            ],\n            \"title\": \"CPU Usage\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"overrides\": [\n                    {\n                        \"matcher\": {\n                            \"id\": \"byRegexp\",\n                            \"options\": \"/%/\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"unit\",\n                                \"value\": \"percentunit\"\n                            }\n                        ]\n                    },\n                    {\n                        \"matcher\": {\n                            \"id\": \"byName\",\n                            \"options\": \"Pod\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"links\",\n                                \"value\": [\n                                    {\n                                        \"title\": \"Drill down to pods\",\n                                        \"url\": \"/d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?${datasource:queryparam}\u0026var-cluster=$cluster\u0026var-namespace=$namespace\u0026var-pod=${__data.fields.Pod}\"\n                                    }\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            },\n            \"gridPos\": {\n                \"h\": 6,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 6\n            },\n            \"id\": 2,\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\", node=~\\\"$node\\\"}) by (pod)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests{cluster=\\\"$cluster\\\", node=~\\\"$node\\\"}) by (pod)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\", node=~\\\"$node\\\"}) by (pod) / sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests{cluster=\\\"$cluster\\\", node=~\\\"$node\\\"}) by (pod)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits{cluster=\\\"$cluster\\\", node=~\\\"$node\\\"}) by (pod)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\", node=~\\\"$node\\\"}) by (pod) / sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits{cluster=\\\"$cluster\\\", node=~\\\"$node\\\"}) by (pod)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                }\n            ],\n            \"title\": \"CPU Quota\",\n            \"transformations\": [\n                {\n                    \"id\": \"joinByField\",\n                    \"options\": {\n                        \"byField\": \"pod\",\n                        \"mode\": \"outer\"\n                    }\n                },\n                {\n                    \"id\": \"organize\",\n                    \"options\": {\n                        \"excludeByName\": {\n                            \"Time\": true,\n                            \"Time 1\": true,\n                            \"Time 2\": true,\n                            \"Time 3\": true,\n                            \"Time 4\": true,\n                            \"Time 5\": true\n                        },\n                        \"renameByName\": {\n                            \"Value #A\": \"CPU Usage\",\n                            \"Value #B\": \"CPU Requests\",\n                            \"Value #C\": \"CPU Requests %\",\n                            \"Value #D\": \"CPU Limits\",\n                            \"Value #E\": \"CPU Limits %\",\n                            \"pod\": \"Pod\"\n                        }\n                    }\n                }\n            ],\n            \"type\": \"table\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true,\n                        \"stacking\": {\n                            \"mode\": \"normal\"\n                        }\n                    },\n                    \"unit\": \"bytes\"\n                },\n                \"overrides\": [\n                    {\n                        \"matcher\": {\n                            \"id\": \"byName\",\n                            \"options\": \"max capacity\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"color\",\n                                \"value\": {\n                                    \"fixedColor\": \"red\",\n                                    \"mode\": \"fixed\"\n                                }\n                            },\n                            {\n                                \"id\": \"custom.stacking\",\n                                \"value\": {\n                                    \"mode\": \"none\"\n                                }\n                            },\n                            {\n                                \"id\": \"custom.hideFrom\",\n                                \"value\": {\n                                    \"legend\": false,\n                                    \"tooltip\": true,\n                                    \"viz\": false\n                                }\n                            },\n                            {\n                                \"id\": \"custom.lineStyle\",\n                                \"value\": {\n                                    \"dash\": [\n                                        10,\n                                        10\n                                    ],\n                                    \"fill\": \"dash\"\n                                }\n                            }\n                        ]\n                    }\n                ]\n            },\n            \"gridPos\": {\n                \"h\": 6,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 12\n            },\n            \"id\": 3,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(kube_node_status_capacity{cluster=\\\"$cluster\\\", job=\\\"kube-state-metrics\\\", node=~\\\"$node\\\", resource=\\\"memory\\\"})\",\n                    \"legendFormat\": \"max capacity\"\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(node_namespace_pod_container:container_memory_working_set_bytes{cluster=\\\"$cluster\\\", node=~\\\"$node\\\", container!=\\\"\\\"}) by (pod)\",\n                    \"legendFormat\": \"{{pod}}\"\n                }\n            ],\n            \"title\": \"Memory Usage (w/o cache)\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"unit\": \"bytes\"\n                },\n                \"overrides\": [\n                    {\n                        \"matcher\": {\n                            \"id\": \"byRegexp\",\n                            \"options\": \"/%/\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"unit\",\n                                \"value\": \"percentunit\"\n                            }\n                        ]\n                    },\n                    {\n                        \"matcher\": {\n                            \"id\": \"byName\",\n                            \"options\": \"Pod\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"links\",\n                                \"value\": [\n                                    {\n                                        \"title\": \"Drill down to pods\",\n                                        \"url\": \"/d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?${datasource:queryparam}\u0026var-cluster=$cluster\u0026var-namespace=$namespace\u0026var-pod=${__data.fields.Pod}\"\n                                    }\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            },\n            \"gridPos\": {\n                \"h\": 6,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 18\n            },\n            \"id\": 4,\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(node_namespace_pod_container:container_memory_working_set_bytes{cluster=\\\"$cluster\\\", node=~\\\"$node\\\",container!=\\\"\\\"}) by (pod)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_requests{cluster=\\\"$cluster\\\", node=~\\\"$node\\\"}) by (pod)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(node_namespace_pod_container:container_memory_working_set_bytes{cluster=\\\"$cluster\\\", node=~\\\"$node\\\",container!=\\\"\\\"}) by (pod) / sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_requests{cluster=\\\"$cluster\\\", node=~\\\"$node\\\"}) by (pod)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_limits{cluster=\\\"$cluster\\\", node=~\\\"$node\\\"}) by (pod)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(node_namespace_pod_container:container_memory_working_set_bytes{cluster=\\\"$cluster\\\", node=~\\\"$node\\\",container!=\\\"\\\"}) by (pod) / sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_limits{cluster=\\\"$cluster\\\", node=~\\\"$node\\\"}) by (pod)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(node_namespace_pod_container:container_memory_rss{cluster=\\\"$cluster\\\", node=~\\\"$node\\\",container!=\\\"\\\"}) by (pod)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(node_namespace_pod_container:container_memory_cache{cluster=\\\"$cluster\\\", node=~\\\"$node\\\",container!=\\\"\\\"}) by (pod)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(node_namespace_pod_container:container_memory_swap{cluster=\\\"$cluster\\\", node=~\\\"$node\\\",container!=\\\"\\\"}) by (pod)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                }\n            ],\n            \"title\": \"Memory Quota\",\n            \"transformations\": [\n                {\n                    \"id\": \"joinByField\",\n                    \"options\": {\n                        \"byField\": \"pod\",\n                        \"mode\": \"outer\"\n                    }\n                },\n                {\n                    \"id\": \"organize\",\n                    \"options\": {\n                        \"excludeByName\": {\n                            \"Time\": true,\n                            \"Time 1\": true,\n                            \"Time 2\": true,\n                            \"Time 3\": true,\n                            \"Time 4\": true,\n                            \"Time 5\": true,\n                            \"Time 6\": true,\n                            \"Time 7\": true,\n                            \"Time 8\": true\n                        },\n                        \"renameByName\": {\n                            \"Value #A\": \"Memory Usage\",\n                            \"Value #B\": \"Memory Requests\",\n                            \"Value #C\": \"Memory Requests %\",\n                            \"Value #D\": \"Memory Limits\",\n                            \"Value #E\": \"Memory Limits %\",\n                            \"Value #F\": \"Memory Usage (RSS)\",\n                            \"Value #G\": \"Memory Usage (Cache)\",\n                            \"Value #H\": \"Memory Usage (Swap)\",\n                            \"pod\": \"Pod\"\n                        }\n                    }\n                }\n            ],\n            \"type\": \"table\"\n        }\n    ],\n    \"refresh\": \"10s\",\n    \"schemaVersion\": 39,\n    \"tags\": [\n        \"kubernetes-mixin\"\n    ],\n    \"templating\": {\n        \"list\": [\n            {\n                \"current\": {\n                    \"selected\": true,\n                    \"text\": \"default\",\n                    \"value\": \"default\"\n                },\n                \"hide\": 0,\n                \"label\": \"Data source\",\n                \"name\": \"datasource\",\n                \"query\": \"prometheus\",\n                \"regex\": \"\",\n                \"type\": \"datasource\"\n            },\n            {\n                \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"${datasource}\"\n                },\n                \"hide\": 0,\n                \"label\": \"cluster\",\n                \"name\": \"cluster\",\n                \"query\": \"label_values(up{job=\\\"kube-state-metrics\\\"}, cluster)\",\n                \"refresh\": 2,\n                \"sort\": 1,\n                \"type\": \"query\"\n            },\n            {\n                \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"${datasource}\"\n                },\n                \"hide\": 0,\n                \"label\": \"node\",\n                \"multi\": true,\n                \"name\": \"node\",\n                \"query\": \"label_values(kube_node_info{cluster=\\\"$cluster\\\"}, node)\",\n                \"refresh\": 2,\n                \"type\": \"query\"\n            }\n        ]\n    },\n    \"time\": {\n        \"from\": \"now-1h\",\n        \"to\": \"now\"\n    },\n    \"timezone\": \"UTC\",\n    \"title\": \"Kubernetes / Compute Resources / Node (Pods)\",\n    \"uid\": \"200ac8fdbfbb74b39aff88118e4d1c2c\"\n}"},"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"grafana","app.kubernetes.io/name":"grafana","app.kubernetes.io/part-of":"kube-prometheus","app.kubernetes.io/version":"11.3.1"},"name":"grafana-dashboard-k8s-resources-node","namespace":"monitoring"}}
    creationTimestamp: "2024-11-25T14:40:26Z"
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 11.3.1
    name: grafana-dashboard-k8s-resources-node
    namespace: monitoring
    resourceVersion: "3039620"
    uid: a99d45d6-df93-45cc-8c91-51fd4768ea8f
- apiVersion: v1
  data:
    k8s-resources-pod.json: |-
      {
          "editable": false,
          "links": [
              {
                  "asDropdown": true,
                  "includeVars": true,
                  "keepTime": true,
                  "tags": [
                      "kubernetes-mixin"
                  ],
                  "targetBlank": false,
                  "title": "Kubernetes",
                  "type": "dashboards"
              }
          ],
          "panels": [
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          }
                      },
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byFrameRefID",
                                  "options": "B"
                              },
                              "properties": [
                                  {
                                      "id": "custom.lineStyle",
                                      "value": {
                                          "fill": "dash"
                                      }
                                  },
                                  {
                                      "id": "custom.lineWidth",
                                      "value": 2
                                  },
                                  {
                                      "id": "color",
                                      "value": {
                                          "fixedColor": "red",
                                          "mode": "fixed"
                                      }
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byFrameRefID",
                                  "options": "C"
                              },
                              "properties": [
                                  {
                                      "id": "custom.lineStyle",
                                      "value": {
                                          "fill": "dash"
                                      }
                                  },
                                  {
                                      "id": "custom.lineWidth",
                                      "value": 2
                                  },
                                  {
                                      "id": "color",
                                      "value": {
                                          "fixedColor": "orange",
                                          "mode": "fixed"
                                      }
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 0
                  },
                  "id": 1,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{namespace=\"$namespace\", pod=\"$pod\", cluster=\"$cluster\", container!=\"\"}) by (container)",
                          "legendFormat": "__auto"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(\n    kube_pod_container_resource_requests{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", resource=\"cpu\"}\n)\n",
                          "legendFormat": "requests"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(\n    kube_pod_container_resource_limits{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", resource=\"cpu\"}\n)\n",
                          "legendFormat": "limits"
                      }
                  ],
                  "title": "CPU Usage",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "axisColorMode": "thresholds",
                              "axisSoftMax": 1,
                              "axisSoftMin": 0,
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true,
                              "thresholdsStyle": {
                                  "mode": "dashed+area"
                              }
                          },
                          "unit": "percentunit"
                      },
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byFrameRefID",
                                  "options": "A"
                              },
                              "properties": [
                                  {
                                      "id": "thresholds",
                                      "value": {
                                          "mode": "absolute",
                                          "steps": [
                                              {
                                                  "color": "green",
                                                  "value": null
                                              },
                                              {
                                                  "color": "red",
                                                  "value": 0.25
                                              }
                                          ]
                                      }
                                  },
                                  {
                                      "id": "color",
                                      "value": {
                                          "mode": "thresholds",
                                          "seriesBy": "lastNotNull"
                                      }
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 7
                  },
                  "id": 2,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(increase(container_cpu_cfs_throttled_periods_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", namespace=\"$namespace\", pod=\"$pod\", container!=\"\", cluster=\"$cluster\"}[$__rate_interval])) by (container) /sum(increase(container_cpu_cfs_periods_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", namespace=\"$namespace\", pod=\"$pod\", container!=\"\", cluster=\"$cluster\"}[$__rate_interval])) by (container)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "CPU Throttling",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/%/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "percentunit"
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 14
                  },
                  "id": 3,
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container!=\"\"}) by (container)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container!=\"\"}) by (container)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container!=\"\"}) by (container) / sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container!=\"\"}) by (container)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container!=\"\"}) by (container)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container!=\"\"}) by (container) / sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container!=\"\"}) by (container)",
                          "format": "table",
                          "instant": true
                      }
                  ],
                  "title": "CPU Quota",
                  "transformations": [
                      {
                          "id": "joinByField",
                          "options": {
                              "byField": "container",
                              "mode": "outer"
                          }
                      },
                      {
                          "id": "organize",
                          "options": {
                              "excludeByName": {
                                  "Time": true,
                                  "Time 1": true,
                                  "Time 2": true,
                                  "Time 3": true,
                                  "Time 4": true,
                                  "Time 5": true
                              },
                              "indexByName": {
                                  "Time 1": 0,
                                  "Time 2": 1,
                                  "Time 3": 2,
                                  "Time 4": 3,
                                  "Time 5": 4,
                                  "Value #A": 6,
                                  "Value #B": 7,
                                  "Value #C": 8,
                                  "Value #D": 9,
                                  "Value #E": 10,
                                  "container": 5
                              },
                              "renameByName": {
                                  "Value #A": "CPU Usage",
                                  "Value #B": "CPU Requests",
                                  "Value #C": "CPU Requests %",
                                  "Value #D": "CPU Limits",
                                  "Value #E": "CPU Limits %",
                                  "container": "Container"
                              }
                          }
                      }
                  ],
                  "type": "table"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "bytes"
                      },
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byFrameRefID",
                                  "options": "B"
                              },
                              "properties": [
                                  {
                                      "id": "custom.lineStyle",
                                      "value": {
                                          "fill": "dash"
                                      }
                                  },
                                  {
                                      "id": "custom.lineWidth",
                                      "value": 2
                                  },
                                  {
                                      "id": "color",
                                      "value": {
                                          "fixedColor": "red",
                                          "mode": "fixed"
                                      }
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byFrameRefID",
                                  "options": "C"
                              },
                              "properties": [
                                  {
                                      "id": "custom.lineStyle",
                                      "value": {
                                          "fill": "dash"
                                      }
                                  },
                                  {
                                      "id": "custom.lineWidth",
                                      "value": 2
                                  },
                                  {
                                      "id": "color",
                                      "value": {
                                          "fixedColor": "orange",
                                          "mode": "fixed"
                                      }
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 21
                  },
                  "id": 4,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(container_memory_working_set_bytes{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container!=\"\", image!=\"\"}) by (container)",
                          "legendFormat": "__auto"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(\n    kube_pod_container_resource_requests{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", resource=\"memory\"}\n)\n",
                          "legendFormat": "requests"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(\n    kube_pod_container_resource_limits{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", resource=\"memory\"}\n)\n",
                          "legendFormat": "limits"
                      }
                  ],
                  "title": "Memory Usage (WSS)",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "bytes"
                      },
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/%/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "percentunit"
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 28
                  },
                  "id": 5,
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(container_memory_working_set_bytes{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container!=\"\", image!=\"\"}) by (container)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_requests{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}) by (container)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(container_memory_working_set_bytes{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", image!=\"\"}) by (container) / sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_requests{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}) by (container)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_limits{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}) by (container)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(container_memory_working_set_bytes{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container!=\"\", image!=\"\"}) by (container) / sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_limits{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}) by (container)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(container_memory_rss{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container != \"\", container != \"POD\"}) by (container)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(container_memory_cache{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container != \"\", container != \"POD\"}) by (container)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(container_memory_swap{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container != \"\", container != \"POD\"}) by (container)",
                          "format": "table",
                          "instant": true
                      }
                  ],
                  "title": "Memory Quota",
                  "transformations": [
                      {
                          "id": "joinByField",
                          "options": {
                              "byField": "container",
                              "mode": "outer"
                          }
                      },
                      {
                          "id": "organize",
                          "options": {
                              "excludeByName": {
                                  "Time": true,
                                  "Time 1": true,
                                  "Time 2": true,
                                  "Time 3": true,
                                  "Time 4": true,
                                  "Time 5": true,
                                  "Time 6": true,
                                  "Time 7": true,
                                  "Time 8": true
                              },
                              "indexByName": {
                                  "Time 1": 0,
                                  "Time 2": 1,
                                  "Time 3": 2,
                                  "Time 4": 3,
                                  "Time 5": 4,
                                  "Time 6": 5,
                                  "Time 7": 6,
                                  "Time 8": 7,
                                  "Value #A": 9,
                                  "Value #B": 10,
                                  "Value #C": 11,
                                  "Value #D": 12,
                                  "Value #E": 13,
                                  "Value #F": 14,
                                  "Value #G": 15,
                                  "Value #H": 16,
                                  "container": 8
                              },
                              "renameByName": {
                                  "Value #A": "Memory Usage",
                                  "Value #B": "Memory Requests",
                                  "Value #C": "Memory Requests %",
                                  "Value #D": "Memory Limits",
                                  "Value #E": "Memory Limits %",
                                  "Value #F": "Memory Usage (RSS)",
                                  "Value #G": "Memory Usage (Cache)",
                                  "Value #H": "Memory Usage (Swap)",
                                  "container": "Container"
                              }
                          }
                      }
                  ],
                  "type": "table"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 35
                  },
                  "id": 6,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(irate(container_network_receive_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", pod=~\"$pod\"}[$__rate_interval])) by (pod)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Receive Bandwidth",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 35
                  },
                  "id": 7,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(container_network_transmit_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", pod=~\"$pod\"}[$__rate_interval])) by (pod)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Transmit Bandwidth",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 42
                  },
                  "id": 8,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(container_network_receive_packets_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", pod=~\"$pod\"}[$__rate_interval])) by (pod)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Received Packets",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 42
                  },
                  "id": 9,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(container_network_transmit_packets_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", pod=~\"$pod\"}[$__rate_interval])) by (pod)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Transmitted Packets",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 49
                  },
                  "id": 10,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(container_network_receive_packets_dropped_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", pod=~\"$pod\"}[$__rate_interval])) by (pod)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Received Packets Dropped",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 49
                  },
                  "id": 11,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(container_network_transmit_packets_dropped_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", pod=~\"$pod\"}[$__rate_interval])) by (pod)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Transmitted Packets Dropped",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "iops"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 56
                  },
                  "id": 12,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "ceil(sum by(pod) (rate(container_fs_reads_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\", pod=~\"$pod\"}[$__rate_interval])))",
                          "legendFormat": "Reads"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "ceil(sum by(pod) (rate(container_fs_writes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", container!=\"\", cluster=\"$cluster\",namespace=\"$namespace\", pod=~\"$pod\"}[$__rate_interval])))",
                          "legendFormat": "Writes"
                      }
                  ],
                  "title": "IOPS (Pod)",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 56
                  },
                  "id": 13,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by(pod) (rate(container_fs_reads_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\", pod=~\"$pod\"}[$__rate_interval]))",
                          "legendFormat": "Reads"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by(pod) (rate(container_fs_writes_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\", pod=~\"$pod\"}[$__rate_interval]))",
                          "legendFormat": "Writes"
                      }
                  ],
                  "title": "ThroughPut (Pod)",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "iops"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 63
                  },
                  "id": 14,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "ceil(sum by(container) (rate(container_fs_reads_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}[$__rate_interval]) + rate(container_fs_writes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}[$__rate_interval])))",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "IOPS (Containers)",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 63
                  },
                  "id": 15,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by(container) (rate(container_fs_reads_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}[$__rate_interval]) + rate(container_fs_writes_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}[$__rate_interval]))",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "ThroughPut (Containers)",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/IOPS/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "iops"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/Throughput/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "Bps"
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 70
                  },
                  "id": 16,
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by(container) (rate(container_fs_reads_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}[$__rate_interval]))",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by(container) (rate(container_fs_writes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\",device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}[$__rate_interval]))",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by(container) (rate(container_fs_reads_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}[$__rate_interval]) + rate(container_fs_writes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}[$__rate_interval]))",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by(container) (rate(container_fs_reads_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}[$__rate_interval]))",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by(container) (rate(container_fs_writes_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}[$__rate_interval]))",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by(container) (rate(container_fs_reads_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}[$__rate_interval]) + rate(container_fs_writes_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}[$__rate_interval]))",
                          "format": "table",
                          "instant": true
                      }
                  ],
                  "title": "Current Storage IO",
                  "transformations": [
                      {
                          "id": "joinByField",
                          "options": {
                              "byField": "container",
                              "mode": "outer"
                          }
                      },
                      {
                          "id": "organize",
                          "options": {
                              "excludeByName": {
                                  "Time": true,
                                  "Time 1": true,
                                  "Time 2": true,
                                  "Time 3": true,
                                  "Time 4": true,
                                  "Time 5": true,
                                  "Time 6": true
                              },
                              "indexByName": {
                                  "Time 1": 0,
                                  "Time 2": 1,
                                  "Time 3": 2,
                                  "Time 4": 3,
                                  "Time 5": 4,
                                  "Time 6": 5,
                                  "Value #A": 7,
                                  "Value #B": 8,
                                  "Value #C": 9,
                                  "Value #D": 10,
                                  "Value #E": 11,
                                  "Value #F": 12,
                                  "container": 6
                              },
                              "renameByName": {
                                  "Value #A": "IOPS(Reads)",
                                  "Value #B": "IOPS(Writes)",
                                  "Value #C": "IOPS(Reads + Writes)",
                                  "Value #D": "Throughput(Read)",
                                  "Value #E": "Throughput(Write)",
                                  "Value #F": "Throughput(Read + Write)",
                                  "container": "Container"
                              }
                          }
                      }
                  ],
                  "type": "table"
              }
          ],
          "refresh": "10s",
          "schemaVersion": 39,
          "tags": [
              "kubernetes-mixin"
          ],
          "templating": {
              "list": [
                  {
                      "current": {
                          "selected": true,
                          "text": "default",
                          "value": "default"
                      },
                      "hide": 0,
                      "label": "Data source",
                      "name": "datasource",
                      "query": "prometheus",
                      "regex": "",
                      "type": "datasource"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "cluster",
                      "name": "cluster",
                      "query": "label_values(up{job=\"kube-state-metrics\"}, cluster)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "namespace",
                      "name": "namespace",
                      "query": "label_values(kube_namespace_status_phase{job=\"kube-state-metrics\", cluster=\"$cluster\"}, namespace)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "pod",
                      "name": "pod",
                      "query": "label_values(kube_pod_info{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\"}, pod)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  }
              ]
          },
          "time": {
              "from": "now-1h",
              "to": "now"
          },
          "timezone": "UTC",
          "title": "Kubernetes / Compute Resources / Pod",
          "uid": "6581e46e4e5c7ba40a07646395ef7b23"
      }
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"k8s-resources-pod.json":"{\n    \"editable\": false,\n    \"links\": [\n        {\n            \"asDropdown\": true,\n            \"includeVars\": true,\n            \"keepTime\": true,\n            \"tags\": [\n                \"kubernetes-mixin\"\n            ],\n            \"targetBlank\": false,\n            \"title\": \"Kubernetes\",\n            \"type\": \"dashboards\"\n        }\n    ],\n    \"panels\": [\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    }\n                },\n                \"overrides\": [\n                    {\n                        \"matcher\": {\n                            \"id\": \"byFrameRefID\",\n                            \"options\": \"B\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"custom.lineStyle\",\n                                \"value\": {\n                                    \"fill\": \"dash\"\n                                }\n                            },\n                            {\n                                \"id\": \"custom.lineWidth\",\n                                \"value\": 2\n                            },\n                            {\n                                \"id\": \"color\",\n                                \"value\": {\n                                    \"fixedColor\": \"red\",\n                                    \"mode\": \"fixed\"\n                                }\n                            }\n                        ]\n                    },\n                    {\n                        \"matcher\": {\n                            \"id\": \"byFrameRefID\",\n                            \"options\": \"C\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"custom.lineStyle\",\n                                \"value\": {\n                                    \"fill\": \"dash\"\n                                }\n                            },\n                            {\n                                \"id\": \"custom.lineWidth\",\n                                \"value\": 2\n                            },\n                            {\n                                \"id\": \"color\",\n                                \"value\": {\n                                    \"fixedColor\": \"orange\",\n                                    \"mode\": \"fixed\"\n                                }\n                            }\n                        ]\n                    }\n                ]\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 0\n            },\n            \"id\": 1,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{namespace=\\\"$namespace\\\", pod=\\\"$pod\\\", cluster=\\\"$cluster\\\", container!=\\\"\\\"}) by (container)\",\n                    \"legendFormat\": \"__auto\"\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(\\n    kube_pod_container_resource_requests{job=\\\"kube-state-metrics\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\", resource=\\\"cpu\\\"}\\n)\\n\",\n                    \"legendFormat\": \"requests\"\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(\\n    kube_pod_container_resource_limits{job=\\\"kube-state-metrics\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\", resource=\\\"cpu\\\"}\\n)\\n\",\n                    \"legendFormat\": \"limits\"\n                }\n            ],\n            \"title\": \"CPU Usage\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"axisColorMode\": \"thresholds\",\n                        \"axisSoftMax\": 1,\n                        \"axisSoftMin\": 0,\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true,\n                        \"thresholdsStyle\": {\n                            \"mode\": \"dashed+area\"\n                        }\n                    },\n                    \"unit\": \"percentunit\"\n                },\n                \"overrides\": [\n                    {\n                        \"matcher\": {\n                            \"id\": \"byFrameRefID\",\n                            \"options\": \"A\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"thresholds\",\n                                \"value\": {\n                                    \"mode\": \"absolute\",\n                                    \"steps\": [\n                                        {\n                                            \"color\": \"green\",\n                                            \"value\": null\n                                        },\n                                        {\n                                            \"color\": \"red\",\n                                            \"value\": 0.25\n                                        }\n                                    ]\n                                }\n                            },\n                            {\n                                \"id\": \"color\",\n                                \"value\": {\n                                    \"mode\": \"thresholds\",\n                                    \"seriesBy\": \"lastNotNull\"\n                                }\n                            }\n                        ]\n                    }\n                ]\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 7\n            },\n            \"id\": 2,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(increase(container_cpu_cfs_throttled_periods_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\", container!=\\\"\\\", cluster=\\\"$cluster\\\"}[$__rate_interval])) by (container) /sum(increase(container_cpu_cfs_periods_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\", container!=\\\"\\\", cluster=\\\"$cluster\\\"}[$__rate_interval])) by (container)\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"CPU Throttling\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"overrides\": [\n                    {\n                        \"matcher\": {\n                            \"id\": \"byRegexp\",\n                            \"options\": \"/%/\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"unit\",\n                                \"value\": \"percentunit\"\n                            }\n                        ]\n                    }\n                ]\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 14\n            },\n            \"id\": 3,\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\", container!=\\\"\\\"}) by (container)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\", container!=\\\"\\\"}) by (container)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\", container!=\\\"\\\"}) by (container) / sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\", container!=\\\"\\\"}) by (container)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\", container!=\\\"\\\"}) by (container)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\", container!=\\\"\\\"}) by (container) / sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\", container!=\\\"\\\"}) by (container)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                }\n            ],\n            \"title\": \"CPU Quota\",\n            \"transformations\": [\n                {\n                    \"id\": \"joinByField\",\n                    \"options\": {\n                        \"byField\": \"container\",\n                        \"mode\": \"outer\"\n                    }\n                },\n                {\n                    \"id\": \"organize\",\n                    \"options\": {\n                        \"excludeByName\": {\n                            \"Time\": true,\n                            \"Time 1\": true,\n                            \"Time 2\": true,\n                            \"Time 3\": true,\n                            \"Time 4\": true,\n                            \"Time 5\": true\n                        },\n                        \"indexByName\": {\n                            \"Time 1\": 0,\n                            \"Time 2\": 1,\n                            \"Time 3\": 2,\n                            \"Time 4\": 3,\n                            \"Time 5\": 4,\n                            \"Value #A\": 6,\n                            \"Value #B\": 7,\n                            \"Value #C\": 8,\n                            \"Value #D\": 9,\n                            \"Value #E\": 10,\n                            \"container\": 5\n                        },\n                        \"renameByName\": {\n                            \"Value #A\": \"CPU Usage\",\n                            \"Value #B\": \"CPU Requests\",\n                            \"Value #C\": \"CPU Requests %\",\n                            \"Value #D\": \"CPU Limits\",\n                            \"Value #E\": \"CPU Limits %\",\n                            \"container\": \"Container\"\n                        }\n                    }\n                }\n            ],\n            \"type\": \"table\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"bytes\"\n                },\n                \"overrides\": [\n                    {\n                        \"matcher\": {\n                            \"id\": \"byFrameRefID\",\n                            \"options\": \"B\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"custom.lineStyle\",\n                                \"value\": {\n                                    \"fill\": \"dash\"\n                                }\n                            },\n                            {\n                                \"id\": \"custom.lineWidth\",\n                                \"value\": 2\n                            },\n                            {\n                                \"id\": \"color\",\n                                \"value\": {\n                                    \"fixedColor\": \"red\",\n                                    \"mode\": \"fixed\"\n                                }\n                            }\n                        ]\n                    },\n                    {\n                        \"matcher\": {\n                            \"id\": \"byFrameRefID\",\n                            \"options\": \"C\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"custom.lineStyle\",\n                                \"value\": {\n                                    \"fill\": \"dash\"\n                                }\n                            },\n                            {\n                                \"id\": \"custom.lineWidth\",\n                                \"value\": 2\n                            },\n                            {\n                                \"id\": \"color\",\n                                \"value\": {\n                                    \"fixedColor\": \"orange\",\n                                    \"mode\": \"fixed\"\n                                }\n                            }\n                        ]\n                    }\n                ]\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 21\n            },\n            \"id\": 4,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(container_memory_working_set_bytes{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\", container!=\\\"\\\", image!=\\\"\\\"}) by (container)\",\n                    \"legendFormat\": \"__auto\"\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(\\n    kube_pod_container_resource_requests{job=\\\"kube-state-metrics\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\", resource=\\\"memory\\\"}\\n)\\n\",\n                    \"legendFormat\": \"requests\"\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(\\n    kube_pod_container_resource_limits{job=\\\"kube-state-metrics\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\", resource=\\\"memory\\\"}\\n)\\n\",\n                    \"legendFormat\": \"limits\"\n                }\n            ],\n            \"title\": \"Memory Usage (WSS)\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"unit\": \"bytes\"\n                },\n                \"overrides\": [\n                    {\n                        \"matcher\": {\n                            \"id\": \"byRegexp\",\n                            \"options\": \"/%/\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"unit\",\n                                \"value\": \"percentunit\"\n                            }\n                        ]\n                    }\n                ]\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 28\n            },\n            \"id\": 5,\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(container_memory_working_set_bytes{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\", container!=\\\"\\\", image!=\\\"\\\"}) by (container)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_requests{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\"}) by (container)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(container_memory_working_set_bytes{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\", image!=\\\"\\\"}) by (container) / sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_requests{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\"}) by (container)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_limits{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\"}) by (container)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(container_memory_working_set_bytes{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\", container!=\\\"\\\", image!=\\\"\\\"}) by (container) / sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_limits{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\"}) by (container)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(container_memory_rss{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\", container != \\\"\\\", container != \\\"POD\\\"}) by (container)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(container_memory_cache{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\", container != \\\"\\\", container != \\\"POD\\\"}) by (container)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(container_memory_swap{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\", container != \\\"\\\", container != \\\"POD\\\"}) by (container)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                }\n            ],\n            \"title\": \"Memory Quota\",\n            \"transformations\": [\n                {\n                    \"id\": \"joinByField\",\n                    \"options\": {\n                        \"byField\": \"container\",\n                        \"mode\": \"outer\"\n                    }\n                },\n                {\n                    \"id\": \"organize\",\n                    \"options\": {\n                        \"excludeByName\": {\n                            \"Time\": true,\n                            \"Time 1\": true,\n                            \"Time 2\": true,\n                            \"Time 3\": true,\n                            \"Time 4\": true,\n                            \"Time 5\": true,\n                            \"Time 6\": true,\n                            \"Time 7\": true,\n                            \"Time 8\": true\n                        },\n                        \"indexByName\": {\n                            \"Time 1\": 0,\n                            \"Time 2\": 1,\n                            \"Time 3\": 2,\n                            \"Time 4\": 3,\n                            \"Time 5\": 4,\n                            \"Time 6\": 5,\n                            \"Time 7\": 6,\n                            \"Time 8\": 7,\n                            \"Value #A\": 9,\n                            \"Value #B\": 10,\n                            \"Value #C\": 11,\n                            \"Value #D\": 12,\n                            \"Value #E\": 13,\n                            \"Value #F\": 14,\n                            \"Value #G\": 15,\n                            \"Value #H\": 16,\n                            \"container\": 8\n                        },\n                        \"renameByName\": {\n                            \"Value #A\": \"Memory Usage\",\n                            \"Value #B\": \"Memory Requests\",\n                            \"Value #C\": \"Memory Requests %\",\n                            \"Value #D\": \"Memory Limits\",\n                            \"Value #E\": \"Memory Limits %\",\n                            \"Value #F\": \"Memory Usage (RSS)\",\n                            \"Value #G\": \"Memory Usage (Cache)\",\n                            \"Value #H\": \"Memory Usage (Swap)\",\n                            \"container\": \"Container\"\n                        }\n                    }\n                }\n            ],\n            \"type\": \"table\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"Bps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 35\n            },\n            \"id\": 6,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(irate(container_network_receive_bytes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=~\\\"$pod\\\"}[$__rate_interval])) by (pod)\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Receive Bandwidth\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"Bps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 35\n            },\n            \"id\": 7,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(container_network_transmit_bytes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=~\\\"$pod\\\"}[$__rate_interval])) by (pod)\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Transmit Bandwidth\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"pps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 42\n            },\n            \"id\": 8,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(container_network_receive_packets_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=~\\\"$pod\\\"}[$__rate_interval])) by (pod)\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Rate of Received Packets\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"pps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 42\n            },\n            \"id\": 9,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(container_network_transmit_packets_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=~\\\"$pod\\\"}[$__rate_interval])) by (pod)\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Rate of Transmitted Packets\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"pps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 49\n            },\n            \"id\": 10,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(container_network_receive_packets_dropped_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=~\\\"$pod\\\"}[$__rate_interval])) by (pod)\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Rate of Received Packets Dropped\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"pps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 49\n            },\n            \"id\": 11,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(container_network_transmit_packets_dropped_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=~\\\"$pod\\\"}[$__rate_interval])) by (pod)\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Rate of Transmitted Packets Dropped\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"iops\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 56\n            },\n            \"id\": 12,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"ceil(sum by(pod) (rate(container_fs_reads_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", device=~\\\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\\\", container!=\\\"\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=~\\\"$pod\\\"}[$__rate_interval])))\",\n                    \"legendFormat\": \"Reads\"\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"ceil(sum by(pod) (rate(container_fs_writes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", device=~\\\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\\\", container!=\\\"\\\", cluster=\\\"$cluster\\\",namespace=\\\"$namespace\\\", pod=~\\\"$pod\\\"}[$__rate_interval])))\",\n                    \"legendFormat\": \"Writes\"\n                }\n            ],\n            \"title\": \"IOPS (Pod)\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"Bps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 56\n            },\n            \"id\": 13,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum by(pod) (rate(container_fs_reads_bytes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", device=~\\\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\\\", container!=\\\"\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=~\\\"$pod\\\"}[$__rate_interval]))\",\n                    \"legendFormat\": \"Reads\"\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum by(pod) (rate(container_fs_writes_bytes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", device=~\\\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\\\", container!=\\\"\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=~\\\"$pod\\\"}[$__rate_interval]))\",\n                    \"legendFormat\": \"Writes\"\n                }\n            ],\n            \"title\": \"ThroughPut (Pod)\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"iops\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 63\n            },\n            \"id\": 14,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"ceil(sum by(container) (rate(container_fs_reads_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", container!=\\\"\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\"}[$__rate_interval]) + rate(container_fs_writes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", container!=\\\"\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\"}[$__rate_interval])))\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"IOPS (Containers)\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"Bps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 63\n            },\n            \"id\": 15,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum by(container) (rate(container_fs_reads_bytes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", container!=\\\"\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\"}[$__rate_interval]) + rate(container_fs_writes_bytes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", container!=\\\"\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\"}[$__rate_interval]))\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"ThroughPut (Containers)\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"overrides\": [\n                    {\n                        \"matcher\": {\n                            \"id\": \"byRegexp\",\n                            \"options\": \"/IOPS/\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"unit\",\n                                \"value\": \"iops\"\n                            }\n                        ]\n                    },\n                    {\n                        \"matcher\": {\n                            \"id\": \"byRegexp\",\n                            \"options\": \"/Throughput/\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"unit\",\n                                \"value\": \"Bps\"\n                            }\n                        ]\n                    }\n                ]\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 70\n            },\n            \"id\": 16,\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum by(container) (rate(container_fs_reads_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", device=~\\\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\\\", container!=\\\"\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\"}[$__rate_interval]))\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum by(container) (rate(container_fs_writes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\",device=~\\\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\\\", container!=\\\"\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\"}[$__rate_interval]))\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum by(container) (rate(container_fs_reads_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", device=~\\\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\\\", container!=\\\"\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\"}[$__rate_interval]) + rate(container_fs_writes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", device=~\\\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\\\", container!=\\\"\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\"}[$__rate_interval]))\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum by(container) (rate(container_fs_reads_bytes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", device=~\\\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\\\", container!=\\\"\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\"}[$__rate_interval]))\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum by(container) (rate(container_fs_writes_bytes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", device=~\\\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\\\", container!=\\\"\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\"}[$__rate_interval]))\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum by(container) (rate(container_fs_reads_bytes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", device=~\\\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\\\", container!=\\\"\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\"}[$__rate_interval]) + rate(container_fs_writes_bytes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", device=~\\\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\\\", container!=\\\"\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\"}[$__rate_interval]))\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                }\n            ],\n            \"title\": \"Current Storage IO\",\n            \"transformations\": [\n                {\n                    \"id\": \"joinByField\",\n                    \"options\": {\n                        \"byField\": \"container\",\n                        \"mode\": \"outer\"\n                    }\n                },\n                {\n                    \"id\": \"organize\",\n                    \"options\": {\n                        \"excludeByName\": {\n                            \"Time\": true,\n                            \"Time 1\": true,\n                            \"Time 2\": true,\n                            \"Time 3\": true,\n                            \"Time 4\": true,\n                            \"Time 5\": true,\n                            \"Time 6\": true\n                        },\n                        \"indexByName\": {\n                            \"Time 1\": 0,\n                            \"Time 2\": 1,\n                            \"Time 3\": 2,\n                            \"Time 4\": 3,\n                            \"Time 5\": 4,\n                            \"Time 6\": 5,\n                            \"Value #A\": 7,\n                            \"Value #B\": 8,\n                            \"Value #C\": 9,\n                            \"Value #D\": 10,\n                            \"Value #E\": 11,\n                            \"Value #F\": 12,\n                            \"container\": 6\n                        },\n                        \"renameByName\": {\n                            \"Value #A\": \"IOPS(Reads)\",\n                            \"Value #B\": \"IOPS(Writes)\",\n                            \"Value #C\": \"IOPS(Reads + Writes)\",\n                            \"Value #D\": \"Throughput(Read)\",\n                            \"Value #E\": \"Throughput(Write)\",\n                            \"Value #F\": \"Throughput(Read + Write)\",\n                            \"container\": \"Container\"\n                        }\n                    }\n                }\n            ],\n            \"type\": \"table\"\n        }\n    ],\n    \"refresh\": \"10s\",\n    \"schemaVersion\": 39,\n    \"tags\": [\n        \"kubernetes-mixin\"\n    ],\n    \"templating\": {\n        \"list\": [\n            {\n                \"current\": {\n                    \"selected\": true,\n                    \"text\": \"default\",\n                    \"value\": \"default\"\n                },\n                \"hide\": 0,\n                \"label\": \"Data source\",\n                \"name\": \"datasource\",\n                \"query\": \"prometheus\",\n                \"regex\": \"\",\n                \"type\": \"datasource\"\n            },\n            {\n                \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"${datasource}\"\n                },\n                \"hide\": 0,\n                \"label\": \"cluster\",\n                \"name\": \"cluster\",\n                \"query\": \"label_values(up{job=\\\"kube-state-metrics\\\"}, cluster)\",\n                \"refresh\": 2,\n                \"sort\": 1,\n                \"type\": \"query\"\n            },\n            {\n                \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"${datasource}\"\n                },\n                \"hide\": 0,\n                \"label\": \"namespace\",\n                \"name\": \"namespace\",\n                \"query\": \"label_values(kube_namespace_status_phase{job=\\\"kube-state-metrics\\\", cluster=\\\"$cluster\\\"}, namespace)\",\n                \"refresh\": 2,\n                \"sort\": 1,\n                \"type\": \"query\"\n            },\n            {\n                \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"${datasource}\"\n                },\n                \"hide\": 0,\n                \"label\": \"pod\",\n                \"name\": \"pod\",\n                \"query\": \"label_values(kube_pod_info{job=\\\"kube-state-metrics\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}, pod)\",\n                \"refresh\": 2,\n                \"sort\": 1,\n                \"type\": \"query\"\n            }\n        ]\n    },\n    \"time\": {\n        \"from\": \"now-1h\",\n        \"to\": \"now\"\n    },\n    \"timezone\": \"UTC\",\n    \"title\": \"Kubernetes / Compute Resources / Pod\",\n    \"uid\": \"6581e46e4e5c7ba40a07646395ef7b23\"\n}"},"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"grafana","app.kubernetes.io/name":"grafana","app.kubernetes.io/part-of":"kube-prometheus","app.kubernetes.io/version":"11.3.1"},"name":"grafana-dashboard-k8s-resources-pod","namespace":"monitoring"}}
    creationTimestamp: "2024-11-25T14:40:26Z"
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 11.3.1
    name: grafana-dashboard-k8s-resources-pod
    namespace: monitoring
    resourceVersion: "3039621"
    uid: 1ac5e523-0b5c-41c3-bc38-5e44ba53a1bf
- apiVersion: v1
  data:
    k8s-resources-workload.json: |-
      {
          "editable": false,
          "links": [
              {
                  "asDropdown": true,
                  "includeVars": true,
                  "keepTime": true,
                  "tags": [
                      "kubernetes-mixin"
                  ],
                  "targetBlank": false,
                  "title": "Kubernetes",
                  "type": "dashboards"
              }
          ],
          "panels": [
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          }
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 0
                  },
                  "id": 1,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(\n    node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\"$cluster\", namespace=\"$namespace\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "CPU Usage",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/%/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "percentunit"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Pod"
                              },
                              "properties": [
                                  {
                                      "id": "links",
                                      "value": [
                                          {
                                              "title": "Drill down to pods",
                                              "url": "/d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?${datasource:queryparam}&var-cluster=$cluster&var-namespace=$namespace&var-pod=${__data.fields.Pod}"
                                          }
                                      ]
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 7
                  },
                  "id": 2,
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(\n    node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\"$cluster\", namespace=\"$namespace\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(\n    kube_pod_container_resource_requests{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"cpu\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(\n    node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\"$cluster\", namespace=\"$namespace\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n/sum(\n    kube_pod_container_resource_requests{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"cpu\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(\n    kube_pod_container_resource_limits{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"cpu\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(\n    node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\"$cluster\", namespace=\"$namespace\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n/sum(\n    kube_pod_container_resource_limits{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"cpu\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n",
                          "format": "table",
                          "instant": true
                      }
                  ],
                  "title": "CPU Quota",
                  "transformations": [
                      {
                          "id": "joinByField",
                          "options": {
                              "byField": "pod",
                              "mode": "outer"
                          }
                      },
                      {
                          "id": "organize",
                          "options": {
                              "excludeByName": {
                                  "Time": true,
                                  "Time 1": true,
                                  "Time 2": true,
                                  "Time 3": true,
                                  "Time 4": true,
                                  "Time 5": true
                              },
                              "indexByName": {
                                  "Time 1": 0,
                                  "Time 2": 1,
                                  "Time 3": 2,
                                  "Time 4": 3,
                                  "Time 5": 4,
                                  "Value #A": 6,
                                  "Value #B": 7,
                                  "Value #C": 8,
                                  "Value #D": 9,
                                  "Value #E": 10,
                                  "pod": 5
                              },
                              "renameByName": {
                                  "Value #A": "CPU Usage",
                                  "Value #B": "CPU Requests",
                                  "Value #C": "CPU Requests %",
                                  "Value #D": "CPU Limits",
                                  "Value #E": "CPU Limits %",
                                  "pod": "Pod"
                              }
                          }
                      }
                  ],
                  "type": "table"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "bytes"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 14
                  },
                  "id": 3,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(\n    container_memory_working_set_bytes{cluster=\"$cluster\", namespace=\"$namespace\", container!=\"\", image!=\"\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Memory Usage",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "bytes"
                      },
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/%/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "percentunit"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Pod"
                              },
                              "properties": [
                                  {
                                      "id": "links",
                                      "value": [
                                          {
                                              "title": "Drill down to pods",
                                              "url": "/d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?${datasource:queryparam}&var-cluster=$cluster&var-namespace=$namespace&var-pod=${__data.fields.Pod}"
                                          }
                                      ]
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 21
                  },
                  "id": 4,
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(\n    container_memory_working_set_bytes{cluster=\"$cluster\", namespace=\"$namespace\", container!=\"\", image!=\"\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(\n    kube_pod_container_resource_requests{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"memory\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(\n    container_memory_working_set_bytes{cluster=\"$cluster\", namespace=\"$namespace\", container!=\"\", image!=\"\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n/sum(\n    kube_pod_container_resource_requests{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"memory\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(\n    kube_pod_container_resource_limits{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"memory\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(\n    container_memory_working_set_bytes{cluster=\"$cluster\", namespace=\"$namespace\", container!=\"\", image!=\"\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n/sum(\n    kube_pod_container_resource_limits{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"memory\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n",
                          "format": "table",
                          "instant": true
                      }
                  ],
                  "title": "Memory Quota",
                  "transformations": [
                      {
                          "id": "joinByField",
                          "options": {
                              "byField": "pod",
                              "mode": "outer"
                          }
                      },
                      {
                          "id": "organize",
                          "options": {
                              "excludeByName": {
                                  "Time": true,
                                  "Time 1": true,
                                  "Time 2": true,
                                  "Time 3": true,
                                  "Time 4": true,
                                  "Time 5": true
                              },
                              "indexByName": {
                                  "Time 1": 0,
                                  "Time 2": 1,
                                  "Time 3": 2,
                                  "Time 4": 3,
                                  "Time 5": 4,
                                  "Value #A": 9,
                                  "Value #B": 10,
                                  "Value #C": 11,
                                  "Value #D": 12,
                                  "Value #E": 13,
                                  "pod": 8
                              },
                              "renameByName": {
                                  "Value #A": "Memory Usage",
                                  "Value #B": "Memory Requests",
                                  "Value #C": "Memory Requests %",
                                  "Value #D": "Memory Limits",
                                  "Value #E": "Memory Limits %",
                                  "pod": "Pod"
                              }
                          }
                      }
                  ],
                  "type": "table"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/Bandwidth/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "Bps"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/Packets/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "pps"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Pod"
                              },
                              "properties": [
                                  {
                                      "id": "links",
                                      "value": [
                                          {
                                              "title": "Drill down to pods",
                                              "url": "/d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?${datasource:queryparam}&var-cluster=$cluster&var-namespace=$namespace&var-pod=${__data.fields.Pod}"
                                          }
                                      ]
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 28
                  },
                  "id": 5,
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "(sum(rate(container_network_receive_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "(sum(rate(container_network_transmit_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "(sum(rate(container_network_receive_packets_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "(sum(rate(container_network_transmit_packets_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "(sum(rate(container_network_receive_packets_dropped_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "(sum(rate(container_network_transmit_packets_dropped_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                          "format": "table",
                          "instant": true
                      }
                  ],
                  "title": "Current Network Usage",
                  "transformations": [
                      {
                          "id": "joinByField",
                          "options": {
                              "byField": "pod",
                              "mode": "outer"
                          }
                      },
                      {
                          "id": "organize",
                          "options": {
                              "excludeByName": {
                                  "Time": true,
                                  "Time 1": true,
                                  "Time 2": true,
                                  "Time 3": true,
                                  "Time 4": true,
                                  "Time 5": true,
                                  "Time 6": true
                              },
                              "indexByName": {
                                  "Time 1": 0,
                                  "Time 2": 1,
                                  "Time 3": 2,
                                  "Time 4": 3,
                                  "Time 5": 4,
                                  "Time 6": 5,
                                  "Value #A": 7,
                                  "Value #B": 8,
                                  "Value #C": 9,
                                  "Value #D": 10,
                                  "Value #E": 11,
                                  "Value #F": 12,
                                  "pod": 6
                              },
                              "renameByName": {
                                  "Value #A": "Current Receive Bandwidth",
                                  "Value #B": "Current Transmit Bandwidth",
                                  "Value #C": "Rate of Received Packets",
                                  "Value #D": "Rate of Transmitted Packets",
                                  "Value #E": "Rate of Received Packets Dropped",
                                  "Value #F": "Rate of Transmitted Packets Dropped",
                                  "pod": "Pod"
                              }
                          }
                      }
                  ],
                  "type": "table"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 35
                  },
                  "id": 6,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "(sum(rate(container_network_receive_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Receive Bandwidth",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 35
                  },
                  "id": 7,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "(sum(rate(container_network_transmit_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Transmit Bandwidth",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 42
                  },
                  "id": 8,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "(avg(rate(container_network_receive_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Average Container Bandwidth by Pod: Received",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 42
                  },
                  "id": 9,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "(avg(rate(container_network_transmit_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Average Container Bandwidth by Pod: Transmitted",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 49
                  },
                  "id": 10,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "(sum(rate(container_network_receive_packets_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Received Packets",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 49
                  },
                  "id": 11,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "(sum(rate(container_network_transmit_packets_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Transmitted Packets",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 56
                  },
                  "id": 12,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "(sum(rate(container_network_receive_packets_dropped_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Received Packets Dropped",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 56
                  },
                  "id": 13,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "(sum(rate(container_network_transmit_packets_dropped_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Transmitted Packets Dropped",
                  "type": "timeseries"
              }
          ],
          "refresh": "10s",
          "schemaVersion": 39,
          "tags": [
              "kubernetes-mixin"
          ],
          "templating": {
              "list": [
                  {
                      "current": {
                          "selected": true,
                          "text": "default",
                          "value": "default"
                      },
                      "hide": 0,
                      "label": "Data source",
                      "name": "datasource",
                      "query": "prometheus",
                      "regex": "",
                      "type": "datasource"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "cluster",
                      "name": "cluster",
                      "query": "label_values(up{job=\"kube-state-metrics\"}, cluster)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "namespace",
                      "name": "namespace",
                      "query": "label_values(kube_namespace_status_phase{job=\"kube-state-metrics\", cluster=\"$cluster\"}, namespace)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "includeAll": true,
                      "label": "workload_type",
                      "name": "type",
                      "query": "label_values(namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\"}, workload_type)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "workload",
                      "name": "workload",
                      "query": "label_values(namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}, workload)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  }
              ]
          },
          "time": {
              "from": "now-1h",
              "to": "now"
          },
          "timezone": "UTC",
          "title": "Kubernetes / Compute Resources / Workload",
          "uid": "a164a7f0339f99e89cea5cb47e9be617"
      }
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"k8s-resources-workload.json":"{\n    \"editable\": false,\n    \"links\": [\n        {\n            \"asDropdown\": true,\n            \"includeVars\": true,\n            \"keepTime\": true,\n            \"tags\": [\n                \"kubernetes-mixin\"\n            ],\n            \"targetBlank\": false,\n            \"title\": \"Kubernetes\",\n            \"type\": \"dashboards\"\n        }\n    ],\n    \"panels\": [\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    }\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 0\n            },\n            \"id\": 1,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(\\n    node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}\\n  * on(namespace,pod)\\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=\\\"$workload\\\", workload_type=~\\\"$type\\\"}\\n) by (pod)\\n\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"CPU Usage\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"overrides\": [\n                    {\n                        \"matcher\": {\n                            \"id\": \"byRegexp\",\n                            \"options\": \"/%/\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"unit\",\n                                \"value\": \"percentunit\"\n                            }\n                        ]\n                    },\n                    {\n                        \"matcher\": {\n                            \"id\": \"byName\",\n                            \"options\": \"Pod\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"links\",\n                                \"value\": [\n                                    {\n                                        \"title\": \"Drill down to pods\",\n                                        \"url\": \"/d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?${datasource:queryparam}\u0026var-cluster=$cluster\u0026var-namespace=$namespace\u0026var-pod=${__data.fields.Pod}\"\n                                    }\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 7\n            },\n            \"id\": 2,\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(\\n    node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}\\n  * on(namespace,pod)\\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=\\\"$workload\\\", workload_type=~\\\"$type\\\"}\\n) by (pod)\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(\\n    kube_pod_container_resource_requests{job=\\\"kube-state-metrics\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"cpu\\\"}\\n  * on(namespace,pod)\\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=\\\"$workload\\\", workload_type=~\\\"$type\\\"}\\n) by (pod)\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(\\n    node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}\\n  * on(namespace,pod)\\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=\\\"$workload\\\", workload_type=~\\\"$type\\\"}\\n) by (pod)\\n/sum(\\n    kube_pod_container_resource_requests{job=\\\"kube-state-metrics\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"cpu\\\"}\\n  * on(namespace,pod)\\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=\\\"$workload\\\", workload_type=~\\\"$type\\\"}\\n) by (pod)\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(\\n    kube_pod_container_resource_limits{job=\\\"kube-state-metrics\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"cpu\\\"}\\n  * on(namespace,pod)\\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=\\\"$workload\\\", workload_type=~\\\"$type\\\"}\\n) by (pod)\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(\\n    node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}\\n  * on(namespace,pod)\\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=\\\"$workload\\\", workload_type=~\\\"$type\\\"}\\n) by (pod)\\n/sum(\\n    kube_pod_container_resource_limits{job=\\\"kube-state-metrics\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"cpu\\\"}\\n  * on(namespace,pod)\\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=\\\"$workload\\\", workload_type=~\\\"$type\\\"}\\n) by (pod)\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                }\n            ],\n            \"title\": \"CPU Quota\",\n            \"transformations\": [\n                {\n                    \"id\": \"joinByField\",\n                    \"options\": {\n                        \"byField\": \"pod\",\n                        \"mode\": \"outer\"\n                    }\n                },\n                {\n                    \"id\": \"organize\",\n                    \"options\": {\n                        \"excludeByName\": {\n                            \"Time\": true,\n                            \"Time 1\": true,\n                            \"Time 2\": true,\n                            \"Time 3\": true,\n                            \"Time 4\": true,\n                            \"Time 5\": true\n                        },\n                        \"indexByName\": {\n                            \"Time 1\": 0,\n                            \"Time 2\": 1,\n                            \"Time 3\": 2,\n                            \"Time 4\": 3,\n                            \"Time 5\": 4,\n                            \"Value #A\": 6,\n                            \"Value #B\": 7,\n                            \"Value #C\": 8,\n                            \"Value #D\": 9,\n                            \"Value #E\": 10,\n                            \"pod\": 5\n                        },\n                        \"renameByName\": {\n                            \"Value #A\": \"CPU Usage\",\n                            \"Value #B\": \"CPU Requests\",\n                            \"Value #C\": \"CPU Requests %\",\n                            \"Value #D\": \"CPU Limits\",\n                            \"Value #E\": \"CPU Limits %\",\n                            \"pod\": \"Pod\"\n                        }\n                    }\n                }\n            ],\n            \"type\": \"table\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"bytes\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 14\n            },\n            \"id\": 3,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(\\n    container_memory_working_set_bytes{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", container!=\\\"\\\", image!=\\\"\\\"}\\n  * on(namespace,pod)\\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=\\\"$workload\\\", workload_type=~\\\"$type\\\"}\\n) by (pod)\\n\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Memory Usage\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"unit\": \"bytes\"\n                },\n                \"overrides\": [\n                    {\n                        \"matcher\": {\n                            \"id\": \"byRegexp\",\n                            \"options\": \"/%/\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"unit\",\n                                \"value\": \"percentunit\"\n                            }\n                        ]\n                    },\n                    {\n                        \"matcher\": {\n                            \"id\": \"byName\",\n                            \"options\": \"Pod\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"links\",\n                                \"value\": [\n                                    {\n                                        \"title\": \"Drill down to pods\",\n                                        \"url\": \"/d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?${datasource:queryparam}\u0026var-cluster=$cluster\u0026var-namespace=$namespace\u0026var-pod=${__data.fields.Pod}\"\n                                    }\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 21\n            },\n            \"id\": 4,\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(\\n    container_memory_working_set_bytes{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", container!=\\\"\\\", image!=\\\"\\\"}\\n  * on(namespace,pod)\\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=\\\"$workload\\\", workload_type=~\\\"$type\\\"}\\n) by (pod)\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(\\n    kube_pod_container_resource_requests{job=\\\"kube-state-metrics\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"memory\\\"}\\n  * on(namespace,pod)\\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=\\\"$workload\\\", workload_type=~\\\"$type\\\"}\\n) by (pod)\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(\\n    container_memory_working_set_bytes{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", container!=\\\"\\\", image!=\\\"\\\"}\\n  * on(namespace,pod)\\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=\\\"$workload\\\", workload_type=~\\\"$type\\\"}\\n) by (pod)\\n/sum(\\n    kube_pod_container_resource_requests{job=\\\"kube-state-metrics\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"memory\\\"}\\n  * on(namespace,pod)\\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=\\\"$workload\\\", workload_type=~\\\"$type\\\"}\\n) by (pod)\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(\\n    kube_pod_container_resource_limits{job=\\\"kube-state-metrics\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"memory\\\"}\\n  * on(namespace,pod)\\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=\\\"$workload\\\", workload_type=~\\\"$type\\\"}\\n) by (pod)\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(\\n    container_memory_working_set_bytes{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", container!=\\\"\\\", image!=\\\"\\\"}\\n  * on(namespace,pod)\\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=\\\"$workload\\\", workload_type=~\\\"$type\\\"}\\n) by (pod)\\n/sum(\\n    kube_pod_container_resource_limits{job=\\\"kube-state-metrics\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"memory\\\"}\\n  * on(namespace,pod)\\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=\\\"$workload\\\", workload_type=~\\\"$type\\\"}\\n) by (pod)\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                }\n            ],\n            \"title\": \"Memory Quota\",\n            \"transformations\": [\n                {\n                    \"id\": \"joinByField\",\n                    \"options\": {\n                        \"byField\": \"pod\",\n                        \"mode\": \"outer\"\n                    }\n                },\n                {\n                    \"id\": \"organize\",\n                    \"options\": {\n                        \"excludeByName\": {\n                            \"Time\": true,\n                            \"Time 1\": true,\n                            \"Time 2\": true,\n                            \"Time 3\": true,\n                            \"Time 4\": true,\n                            \"Time 5\": true\n                        },\n                        \"indexByName\": {\n                            \"Time 1\": 0,\n                            \"Time 2\": 1,\n                            \"Time 3\": 2,\n                            \"Time 4\": 3,\n                            \"Time 5\": 4,\n                            \"Value #A\": 9,\n                            \"Value #B\": 10,\n                            \"Value #C\": 11,\n                            \"Value #D\": 12,\n                            \"Value #E\": 13,\n                            \"pod\": 8\n                        },\n                        \"renameByName\": {\n                            \"Value #A\": \"Memory Usage\",\n                            \"Value #B\": \"Memory Requests\",\n                            \"Value #C\": \"Memory Requests %\",\n                            \"Value #D\": \"Memory Limits\",\n                            \"Value #E\": \"Memory Limits %\",\n                            \"pod\": \"Pod\"\n                        }\n                    }\n                }\n            ],\n            \"type\": \"table\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"overrides\": [\n                    {\n                        \"matcher\": {\n                            \"id\": \"byRegexp\",\n                            \"options\": \"/Bandwidth/\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"unit\",\n                                \"value\": \"Bps\"\n                            }\n                        ]\n                    },\n                    {\n                        \"matcher\": {\n                            \"id\": \"byRegexp\",\n                            \"options\": \"/Packets/\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"unit\",\n                                \"value\": \"pps\"\n                            }\n                        ]\n                    },\n                    {\n                        \"matcher\": {\n                            \"id\": \"byName\",\n                            \"options\": \"Pod\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"links\",\n                                \"value\": [\n                                    {\n                                        \"title\": \"Drill down to pods\",\n                                        \"url\": \"/d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?${datasource:queryparam}\u0026var-cluster=$cluster\u0026var-namespace=$namespace\u0026var-pod=${__data.fields.Pod}\"\n                                    }\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 28\n            },\n            \"id\": 5,\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"(sum(rate(container_network_receive_bytes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=~\\\"$type\\\"}) by (pod))\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"(sum(rate(container_network_transmit_bytes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=~\\\"$type\\\"}) by (pod))\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"(sum(rate(container_network_receive_packets_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=~\\\"$type\\\"}) by (pod))\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"(sum(rate(container_network_transmit_packets_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=~\\\"$type\\\"}) by (pod))\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"(sum(rate(container_network_receive_packets_dropped_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=~\\\"$type\\\"}) by (pod))\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"(sum(rate(container_network_transmit_packets_dropped_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=~\\\"$type\\\"}) by (pod))\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                }\n            ],\n            \"title\": \"Current Network Usage\",\n            \"transformations\": [\n                {\n                    \"id\": \"joinByField\",\n                    \"options\": {\n                        \"byField\": \"pod\",\n                        \"mode\": \"outer\"\n                    }\n                },\n                {\n                    \"id\": \"organize\",\n                    \"options\": {\n                        \"excludeByName\": {\n                            \"Time\": true,\n                            \"Time 1\": true,\n                            \"Time 2\": true,\n                            \"Time 3\": true,\n                            \"Time 4\": true,\n                            \"Time 5\": true,\n                            \"Time 6\": true\n                        },\n                        \"indexByName\": {\n                            \"Time 1\": 0,\n                            \"Time 2\": 1,\n                            \"Time 3\": 2,\n                            \"Time 4\": 3,\n                            \"Time 5\": 4,\n                            \"Time 6\": 5,\n                            \"Value #A\": 7,\n                            \"Value #B\": 8,\n                            \"Value #C\": 9,\n                            \"Value #D\": 10,\n                            \"Value #E\": 11,\n                            \"Value #F\": 12,\n                            \"pod\": 6\n                        },\n                        \"renameByName\": {\n                            \"Value #A\": \"Current Receive Bandwidth\",\n                            \"Value #B\": \"Current Transmit Bandwidth\",\n                            \"Value #C\": \"Rate of Received Packets\",\n                            \"Value #D\": \"Rate of Transmitted Packets\",\n                            \"Value #E\": \"Rate of Received Packets Dropped\",\n                            \"Value #F\": \"Rate of Transmitted Packets Dropped\",\n                            \"pod\": \"Pod\"\n                        }\n                    }\n                }\n            ],\n            \"type\": \"table\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"Bps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 35\n            },\n            \"id\": 6,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"(sum(rate(container_network_receive_bytes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=~\\\"$type\\\"}) by (pod))\\n\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Receive Bandwidth\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"Bps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 35\n            },\n            \"id\": 7,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"(sum(rate(container_network_transmit_bytes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=~\\\"$type\\\"}) by (pod))\\n\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Transmit Bandwidth\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"Bps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 42\n            },\n            \"id\": 8,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"(avg(rate(container_network_receive_bytes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=~\\\"$type\\\"}) by (pod))\\n\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Average Container Bandwidth by Pod: Received\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"Bps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 42\n            },\n            \"id\": 9,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"(avg(rate(container_network_transmit_bytes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=~\\\"$type\\\"}) by (pod))\\n\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Average Container Bandwidth by Pod: Transmitted\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"pps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 49\n            },\n            \"id\": 10,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"(sum(rate(container_network_receive_packets_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=~\\\"$type\\\"}) by (pod))\\n\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Rate of Received Packets\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"pps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 49\n            },\n            \"id\": 11,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"(sum(rate(container_network_transmit_packets_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=~\\\"$type\\\"}) by (pod))\\n\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Rate of Transmitted Packets\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"pps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 56\n            },\n            \"id\": 12,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"(sum(rate(container_network_receive_packets_dropped_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=~\\\"$type\\\"}) by (pod))\\n\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Rate of Received Packets Dropped\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"pps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 56\n            },\n            \"id\": 13,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"(sum(rate(container_network_transmit_packets_dropped_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=~\\\"$type\\\"}) by (pod))\\n\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Rate of Transmitted Packets Dropped\",\n            \"type\": \"timeseries\"\n        }\n    ],\n    \"refresh\": \"10s\",\n    \"schemaVersion\": 39,\n    \"tags\": [\n        \"kubernetes-mixin\"\n    ],\n    \"templating\": {\n        \"list\": [\n            {\n                \"current\": {\n                    \"selected\": true,\n                    \"text\": \"default\",\n                    \"value\": \"default\"\n                },\n                \"hide\": 0,\n                \"label\": \"Data source\",\n                \"name\": \"datasource\",\n                \"query\": \"prometheus\",\n                \"regex\": \"\",\n                \"type\": \"datasource\"\n            },\n            {\n                \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"${datasource}\"\n                },\n                \"hide\": 0,\n                \"label\": \"cluster\",\n                \"name\": \"cluster\",\n                \"query\": \"label_values(up{job=\\\"kube-state-metrics\\\"}, cluster)\",\n                \"refresh\": 2,\n                \"sort\": 1,\n                \"type\": \"query\"\n            },\n            {\n                \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"${datasource}\"\n                },\n                \"hide\": 0,\n                \"label\": \"namespace\",\n                \"name\": \"namespace\",\n                \"query\": \"label_values(kube_namespace_status_phase{job=\\\"kube-state-metrics\\\", cluster=\\\"$cluster\\\"}, namespace)\",\n                \"refresh\": 2,\n                \"sort\": 1,\n                \"type\": \"query\"\n            },\n            {\n                \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"${datasource}\"\n                },\n                \"hide\": 0,\n                \"includeAll\": true,\n                \"label\": \"workload_type\",\n                \"name\": \"type\",\n                \"query\": \"label_values(namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}, workload_type)\",\n                \"refresh\": 2,\n                \"sort\": 1,\n                \"type\": \"query\"\n            },\n            {\n                \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"${datasource}\"\n                },\n                \"hide\": 0,\n                \"label\": \"workload\",\n                \"name\": \"workload\",\n                \"query\": \"label_values(namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload_type=~\\\"$type\\\"}, workload)\",\n                \"refresh\": 2,\n                \"sort\": 1,\n                \"type\": \"query\"\n            }\n        ]\n    },\n    \"time\": {\n        \"from\": \"now-1h\",\n        \"to\": \"now\"\n    },\n    \"timezone\": \"UTC\",\n    \"title\": \"Kubernetes / Compute Resources / Workload\",\n    \"uid\": \"a164a7f0339f99e89cea5cb47e9be617\"\n}"},"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"grafana","app.kubernetes.io/name":"grafana","app.kubernetes.io/part-of":"kube-prometheus","app.kubernetes.io/version":"11.3.1"},"name":"grafana-dashboard-k8s-resources-workload","namespace":"monitoring"}}
    creationTimestamp: "2024-11-25T14:40:26Z"
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 11.3.1
    name: grafana-dashboard-k8s-resources-workload
    namespace: monitoring
    resourceVersion: "3039622"
    uid: 5868f7a2-9edb-4169-8887-889fa507cbe1
- apiVersion: v1
  data:
    k8s-resources-workloads-namespace.json: |-
      {
          "editable": false,
          "links": [
              {
                  "asDropdown": true,
                  "includeVars": true,
                  "keepTime": true,
                  "tags": [
                      "kubernetes-mixin"
                  ],
                  "targetBlank": false,
                  "title": "Kubernetes",
                  "type": "dashboards"
              }
          ],
          "panels": [
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          }
                      },
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byFrameRefID",
                                  "options": "B"
                              },
                              "properties": [
                                  {
                                      "id": "custom.lineStyle",
                                      "value": {
                                          "fill": "dash"
                                      }
                                  },
                                  {
                                      "id": "custom.lineWidth",
                                      "value": 2
                                  },
                                  {
                                      "id": "color",
                                      "value": {
                                          "fixedColor": "red",
                                          "mode": "fixed"
                                      }
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byFrameRefID",
                                  "options": "C"
                              },
                              "properties": [
                                  {
                                      "id": "custom.lineStyle",
                                      "value": {
                                          "fill": "dash"
                                      }
                                  },
                                  {
                                      "id": "custom.lineWidth",
                                      "value": 2
                                  },
                                  {
                                      "id": "color",
                                      "value": {
                                          "fixedColor": "orange",
                                          "mode": "fixed"
                                      }
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 0
                  },
                  "id": 1,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(\n  node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\"$cluster\", namespace=\"$namespace\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n",
                          "legendFormat": "{{workload}} - {{workload_type}}"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "scalar(max(kube_resourcequota{cluster=\"$cluster\", namespace=\"$namespace\", type=\"hard\",resource=~\"requests.cpu|cpu\"}))",
                          "legendFormat": "quota - requests"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "scalar(max(kube_resourcequota{cluster=\"$cluster\", namespace=\"$namespace\", type=\"hard\",resource=~\"limits.cpu\"}))",
                          "legendFormat": "quota - limits"
                      }
                  ],
                  "title": "CPU Usage",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/%/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "percentunit"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Workload"
                              },
                              "properties": [
                                  {
                                      "id": "links",
                                      "value": [
                                          {
                                              "title": "Drill down to workloads",
                                              "url": "/d/a164a7f0339f99e89cea5cb47e9be617/k8s-resources-workload?${datasource:queryparam}&var-cluster=$cluster&var-namespace=$namespace&var-type=${__data.fields.Type}&var-workload=${__data.fields.Workload}"
                                          }
                                      ]
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Running Pods"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "none"
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 7
                  },
                  "id": 2,
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "count(namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}) by (workload, workload_type)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(\n  node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\"$cluster\", namespace=\"$namespace\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(\n  kube_pod_container_resource_requests{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"cpu\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(\n  node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\"$cluster\", namespace=\"$namespace\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n/sum(\n  kube_pod_container_resource_requests{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"cpu\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(\n  kube_pod_container_resource_limits{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"cpu\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(\n  node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\"$cluster\", namespace=\"$namespace\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n/sum(\n  kube_pod_container_resource_limits{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"cpu\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n",
                          "format": "table",
                          "instant": true
                      }
                  ],
                  "title": "CPU Quota",
                  "transformations": [
                      {
                          "id": "joinByField",
                          "options": {
                              "byField": "workload",
                              "mode": "outer"
                          }
                      },
                      {
                          "id": "organize",
                          "options": {
                              "excludeByName": {
                                  "Time": true,
                                  "Time 1": true,
                                  "Time 2": true,
                                  "Time 3": true,
                                  "Time 4": true,
                                  "Time 5": true,
                                  "Time 6": true,
                                  "workload_type 2": true,
                                  "workload_type 3": true,
                                  "workload_type 4": true,
                                  "workload_type 5": true,
                                  "workload_type 6": true
                              },
                              "indexByName": {
                                  "Time 1": 0,
                                  "Time 2": 1,
                                  "Time 3": 2,
                                  "Time 4": 3,
                                  "Time 5": 4,
                                  "Time 6": 5,
                                  "Value #A": 8,
                                  "Value #B": 9,
                                  "Value #C": 10,
                                  "Value #D": 11,
                                  "Value #E": 12,
                                  "Value #F": 13,
                                  "workload": 6,
                                  "workload_type 1": 7,
                                  "workload_type 2": 14,
                                  "workload_type 3": 15,
                                  "workload_type 4": 16,
                                  "workload_type 5": 17,
                                  "workload_type 6": 18
                              },
                              "renameByName": {
                                  "Value #A": "Running Pods",
                                  "Value #B": "CPU Usage",
                                  "Value #C": "CPU Requests",
                                  "Value #D": "CPU Requests %",
                                  "Value #E": "CPU Limits",
                                  "Value #F": "CPU Limits %",
                                  "workload": "Workload",
                                  "workload_type 1": "Type"
                              }
                          }
                      }
                  ],
                  "type": "table"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "bytes"
                      },
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byFrameRefID",
                                  "options": "B"
                              },
                              "properties": [
                                  {
                                      "id": "custom.lineStyle",
                                      "value": {
                                          "fill": "dash"
                                      }
                                  },
                                  {
                                      "id": "custom.lineWidth",
                                      "value": 2
                                  },
                                  {
                                      "id": "color",
                                      "value": {
                                          "fixedColor": "red",
                                          "mode": "fixed"
                                      }
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byFrameRefID",
                                  "options": "C"
                              },
                              "properties": [
                                  {
                                      "id": "custom.lineStyle",
                                      "value": {
                                          "fill": "dash"
                                      }
                                  },
                                  {
                                      "id": "custom.lineWidth",
                                      "value": 2
                                  },
                                  {
                                      "id": "color",
                                      "value": {
                                          "fixedColor": "orange",
                                          "mode": "fixed"
                                      }
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 14
                  },
                  "id": 3,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(\n    container_memory_working_set_bytes{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", container!=\"\", image!=\"\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n",
                          "legendFormat": "{{workload}} - {{workload_type}}"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "scalar(max(kube_resourcequota{cluster=\"$cluster\", namespace=\"$namespace\", type=\"hard\",resource=~\"requests.memory|memory\"}))",
                          "legendFormat": "quota - requests"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "scalar(max(kube_resourcequota{cluster=\"$cluster\", namespace=\"$namespace\", type=\"hard\",resource=~\"limits.memory\"}))",
                          "legendFormat": "quota - limits"
                      }
                  ],
                  "title": "Memory Usage",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "bytes"
                      },
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/%/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "percentunit"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Workload"
                              },
                              "properties": [
                                  {
                                      "id": "links",
                                      "value": [
                                          {
                                              "title": "Drill down to workloads",
                                              "url": "/d/a164a7f0339f99e89cea5cb47e9be617/k8s-resources-workload?${datasource:queryparam}&var-cluster=$cluster&var-namespace=$namespace&var-type=${__data.fields.Type}&var-workload=${__data.fields.Workload}"
                                          }
                                      ]
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Running Pods"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "none"
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 21
                  },
                  "id": 4,
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "count(namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}) by (workload, workload_type)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(\n    container_memory_working_set_bytes{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", container!=\"\", image!=\"\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(\n  kube_pod_container_resource_requests{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"memory\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(\n    container_memory_working_set_bytes{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", container!=\"\", image!=\"\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n/sum(\n  kube_pod_container_resource_requests{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"memory\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(\n  kube_pod_container_resource_limits{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"memory\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(\n    container_memory_working_set_bytes{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", container!=\"\", image!=\"\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n/sum(\n  kube_pod_container_resource_limits{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"memory\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n",
                          "format": "table",
                          "instant": true
                      }
                  ],
                  "title": "Memory Quota",
                  "transformations": [
                      {
                          "id": "joinByField",
                          "options": {
                              "byField": "workload",
                              "mode": "outer"
                          }
                      },
                      {
                          "id": "organize",
                          "options": {
                              "excludeByName": {
                                  "Time": true,
                                  "Time 1": true,
                                  "Time 2": true,
                                  "Time 3": true,
                                  "Time 4": true,
                                  "Time 5": true,
                                  "Time 6": true,
                                  "workload_type 2": true,
                                  "workload_type 3": true,
                                  "workload_type 4": true,
                                  "workload_type 5": true,
                                  "workload_type 6": true
                              },
                              "indexByName": {
                                  "Time 1": 0,
                                  "Time 2": 1,
                                  "Time 3": 2,
                                  "Time 4": 3,
                                  "Time 5": 4,
                                  "Time 6": 5,
                                  "Value #A": 8,
                                  "Value #B": 9,
                                  "Value #C": 10,
                                  "Value #D": 11,
                                  "Value #E": 12,
                                  "Value #F": 13,
                                  "workload": 6,
                                  "workload_type 1": 7,
                                  "workload_type 2": 14,
                                  "workload_type 3": 15,
                                  "workload_type 4": 16,
                                  "workload_type 5": 17,
                                  "workload_type 6": 18
                              },
                              "renameByName": {
                                  "Value #A": "Running Pods",
                                  "Value #B": "Memory Usage",
                                  "Value #C": "Memory Requests",
                                  "Value #D": "Memory Requests %",
                                  "Value #E": "Memory Limits",
                                  "Value #F": "Memory Limits %",
                                  "workload": "Workload",
                                  "workload_type 1": "Type"
                              }
                          }
                      }
                  ],
                  "type": "table"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/Bandwidth/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "Bps"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/Packets/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "pps"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Workload"
                              },
                              "properties": [
                                  {
                                      "id": "links",
                                      "value": [
                                          {
                                              "title": "Drill down to workloads",
                                              "url": "/d/a164a7f0339f99e89cea5cb47e9be617/k8s-resources-workload?${datasource:queryparam}&var-cluster=$cluster&var-namespace=$namespace&var-type=${__data.fields.Type}&var-workload=${__data.fields.Workload}"
                                          }
                                      ]
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 28
                  },
                  "id": 5,
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "(sum(rate(container_network_receive_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}) by (workload))\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "(sum(rate(container_network_transmit_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}) by (workload))\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "(sum(rate(container_network_receive_packets_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}) by (workload))\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "(sum(rate(container_network_transmit_packets_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}) by (workload))\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "(sum(rate(container_network_receive_packets_dropped_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}) by (workload))\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "(sum(rate(container_network_transmit_packets_dropped_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}) by (workload))\n",
                          "format": "table",
                          "instant": true
                      }
                  ],
                  "title": "Current Network Usage",
                  "transformations": [
                      {
                          "id": "joinByField",
                          "options": {
                              "byField": "workload",
                              "mode": "outer"
                          }
                      },
                      {
                          "id": "organize",
                          "options": {
                              "excludeByName": {
                                  "Time": true,
                                  "Time 1": true,
                                  "Time 2": true,
                                  "Time 3": true,
                                  "Time 4": true,
                                  "Time 5": true,
                                  "Time 6": true
                              },
                              "indexByName": {
                                  "Time 1": 0,
                                  "Time 2": 1,
                                  "Time 3": 2,
                                  "Time 4": 3,
                                  "Time 5": 4,
                                  "Time 6": 5,
                                  "Value #A": 7,
                                  "Value #B": 8,
                                  "Value #C": 9,
                                  "Value #D": 10,
                                  "Value #E": 11,
                                  "Value #F": 12,
                                  "workload": 6
                              },
                              "renameByName": {
                                  "Value #A": "Current Receive Bandwidth",
                                  "Value #B": "Current Transmit Bandwidth",
                                  "Value #C": "Rate of Received Packets",
                                  "Value #D": "Rate of Transmitted Packets",
                                  "Value #E": "Rate of Received Packets Dropped",
                                  "Value #F": "Rate of Transmitted Packets Dropped",
                                  "workload": "Workload"
                              }
                          }
                      }
                  ],
                  "type": "table"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 35
                  },
                  "id": 6,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "(sum(rate(container_network_receive_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Receive Bandwidth",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 35
                  },
                  "id": 7,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "(sum(rate(container_network_transmit_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Transmit Bandwidth",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 42
                  },
                  "id": 8,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "(avg(rate(container_network_receive_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Average Container Bandwidth by Workload: Received",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 42
                  },
                  "id": 9,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "(avg(rate(container_network_transmit_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Average Container Bandwidth by Workload: Transmitted",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 49
                  },
                  "id": 10,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "(sum(rate(container_network_receive_packets_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Received Packets",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 49
                  },
                  "id": 11,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "(sum(rate(container_network_transmit_packets_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Transmitted Packets",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 56
                  },
                  "id": 12,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "(sum(rate(container_network_receive_packets_dropped_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Received Packets Dropped",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 56
                  },
                  "id": 13,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "(sum(rate(container_network_transmit_packets_dropped_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Transmitted Packets Dropped",
                  "type": "timeseries"
              }
          ],
          "refresh": "10s",
          "schemaVersion": 39,
          "tags": [
              "kubernetes-mixin"
          ],
          "templating": {
              "list": [
                  {
                      "current": {
                          "selected": true,
                          "text": "default",
                          "value": "default"
                      },
                      "hide": 0,
                      "label": "Data source",
                      "name": "datasource",
                      "query": "prometheus",
                      "regex": "",
                      "type": "datasource"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "cluster",
                      "name": "cluster",
                      "query": "label_values(up{job=\"kube-state-metrics\"}, cluster)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "namespace",
                      "name": "namespace",
                      "query": "label_values(kube_namespace_status_phase{job=\"kube-state-metrics\", cluster=\"$cluster\"}, namespace)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "includeAll": true,
                      "label": "workload_type",
                      "name": "type",
                      "query": "label_values(namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\".+\"}, workload_type)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  }
              ]
          },
          "time": {
              "from": "now-1h",
              "to": "now"
          },
          "timezone": "UTC",
          "title": "Kubernetes / Compute Resources / Namespace (Workloads)",
          "uid": "a87fb0d919ec0ea5f6543124e16c42a5"
      }
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"k8s-resources-workloads-namespace.json":"{\n    \"editable\": false,\n    \"links\": [\n        {\n            \"asDropdown\": true,\n            \"includeVars\": true,\n            \"keepTime\": true,\n            \"tags\": [\n                \"kubernetes-mixin\"\n            ],\n            \"targetBlank\": false,\n            \"title\": \"Kubernetes\",\n            \"type\": \"dashboards\"\n        }\n    ],\n    \"panels\": [\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    }\n                },\n                \"overrides\": [\n                    {\n                        \"matcher\": {\n                            \"id\": \"byFrameRefID\",\n                            \"options\": \"B\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"custom.lineStyle\",\n                                \"value\": {\n                                    \"fill\": \"dash\"\n                                }\n                            },\n                            {\n                                \"id\": \"custom.lineWidth\",\n                                \"value\": 2\n                            },\n                            {\n                                \"id\": \"color\",\n                                \"value\": {\n                                    \"fixedColor\": \"red\",\n                                    \"mode\": \"fixed\"\n                                }\n                            }\n                        ]\n                    },\n                    {\n                        \"matcher\": {\n                            \"id\": \"byFrameRefID\",\n                            \"options\": \"C\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"custom.lineStyle\",\n                                \"value\": {\n                                    \"fill\": \"dash\"\n                                }\n                            },\n                            {\n                                \"id\": \"custom.lineWidth\",\n                                \"value\": 2\n                            },\n                            {\n                                \"id\": \"color\",\n                                \"value\": {\n                                    \"fixedColor\": \"orange\",\n                                    \"mode\": \"fixed\"\n                                }\n                            }\n                        ]\n                    }\n                ]\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 0\n            },\n            \"id\": 1,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(\\n  node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}\\n* on(namespace,pod)\\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload_type=~\\\"$type\\\"}\\n) by (workload, workload_type)\\n\",\n                    \"legendFormat\": \"{{workload}} - {{workload_type}}\"\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"scalar(max(kube_resourcequota{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", type=\\\"hard\\\",resource=~\\\"requests.cpu|cpu\\\"}))\",\n                    \"legendFormat\": \"quota - requests\"\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"scalar(max(kube_resourcequota{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", type=\\\"hard\\\",resource=~\\\"limits.cpu\\\"}))\",\n                    \"legendFormat\": \"quota - limits\"\n                }\n            ],\n            \"title\": \"CPU Usage\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"overrides\": [\n                    {\n                        \"matcher\": {\n                            \"id\": \"byRegexp\",\n                            \"options\": \"/%/\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"unit\",\n                                \"value\": \"percentunit\"\n                            }\n                        ]\n                    },\n                    {\n                        \"matcher\": {\n                            \"id\": \"byName\",\n                            \"options\": \"Workload\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"links\",\n                                \"value\": [\n                                    {\n                                        \"title\": \"Drill down to workloads\",\n                                        \"url\": \"/d/a164a7f0339f99e89cea5cb47e9be617/k8s-resources-workload?${datasource:queryparam}\u0026var-cluster=$cluster\u0026var-namespace=$namespace\u0026var-type=${__data.fields.Type}\u0026var-workload=${__data.fields.Workload}\"\n                                    }\n                                ]\n                            }\n                        ]\n                    },\n                    {\n                        \"matcher\": {\n                            \"id\": \"byName\",\n                            \"options\": \"Running Pods\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"unit\",\n                                \"value\": \"none\"\n                            }\n                        ]\n                    }\n                ]\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 7\n            },\n            \"id\": 2,\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"count(namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload_type=~\\\"$type\\\"}) by (workload, workload_type)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(\\n  node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}\\n* on(namespace,pod)\\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload_type=~\\\"$type\\\"}\\n) by (workload, workload_type)\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(\\n  kube_pod_container_resource_requests{job=\\\"kube-state-metrics\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"cpu\\\"}\\n* on(namespace,pod)\\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload_type=~\\\"$type\\\"}\\n) by (workload, workload_type)\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(\\n  node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}\\n* on(namespace,pod)\\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload_type=~\\\"$type\\\"}\\n) by (workload, workload_type)\\n/sum(\\n  kube_pod_container_resource_requests{job=\\\"kube-state-metrics\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"cpu\\\"}\\n* on(namespace,pod)\\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload_type=~\\\"$type\\\"}\\n) by (workload, workload_type)\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(\\n  kube_pod_container_resource_limits{job=\\\"kube-state-metrics\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"cpu\\\"}\\n* on(namespace,pod)\\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload_type=~\\\"$type\\\"}\\n) by (workload, workload_type)\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(\\n  node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}\\n* on(namespace,pod)\\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload_type=~\\\"$type\\\"}\\n) by (workload, workload_type)\\n/sum(\\n  kube_pod_container_resource_limits{job=\\\"kube-state-metrics\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"cpu\\\"}\\n* on(namespace,pod)\\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload_type=~\\\"$type\\\"}\\n) by (workload, workload_type)\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                }\n            ],\n            \"title\": \"CPU Quota\",\n            \"transformations\": [\n                {\n                    \"id\": \"joinByField\",\n                    \"options\": {\n                        \"byField\": \"workload\",\n                        \"mode\": \"outer\"\n                    }\n                },\n                {\n                    \"id\": \"organize\",\n                    \"options\": {\n                        \"excludeByName\": {\n                            \"Time\": true,\n                            \"Time 1\": true,\n                            \"Time 2\": true,\n                            \"Time 3\": true,\n                            \"Time 4\": true,\n                            \"Time 5\": true,\n                            \"Time 6\": true,\n                            \"workload_type 2\": true,\n                            \"workload_type 3\": true,\n                            \"workload_type 4\": true,\n                            \"workload_type 5\": true,\n                            \"workload_type 6\": true\n                        },\n                        \"indexByName\": {\n                            \"Time 1\": 0,\n                            \"Time 2\": 1,\n                            \"Time 3\": 2,\n                            \"Time 4\": 3,\n                            \"Time 5\": 4,\n                            \"Time 6\": 5,\n                            \"Value #A\": 8,\n                            \"Value #B\": 9,\n                            \"Value #C\": 10,\n                            \"Value #D\": 11,\n                            \"Value #E\": 12,\n                            \"Value #F\": 13,\n                            \"workload\": 6,\n                            \"workload_type 1\": 7,\n                            \"workload_type 2\": 14,\n                            \"workload_type 3\": 15,\n                            \"workload_type 4\": 16,\n                            \"workload_type 5\": 17,\n                            \"workload_type 6\": 18\n                        },\n                        \"renameByName\": {\n                            \"Value #A\": \"Running Pods\",\n                            \"Value #B\": \"CPU Usage\",\n                            \"Value #C\": \"CPU Requests\",\n                            \"Value #D\": \"CPU Requests %\",\n                            \"Value #E\": \"CPU Limits\",\n                            \"Value #F\": \"CPU Limits %\",\n                            \"workload\": \"Workload\",\n                            \"workload_type 1\": \"Type\"\n                        }\n                    }\n                }\n            ],\n            \"type\": \"table\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"bytes\"\n                },\n                \"overrides\": [\n                    {\n                        \"matcher\": {\n                            \"id\": \"byFrameRefID\",\n                            \"options\": \"B\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"custom.lineStyle\",\n                                \"value\": {\n                                    \"fill\": \"dash\"\n                                }\n                            },\n                            {\n                                \"id\": \"custom.lineWidth\",\n                                \"value\": 2\n                            },\n                            {\n                                \"id\": \"color\",\n                                \"value\": {\n                                    \"fixedColor\": \"red\",\n                                    \"mode\": \"fixed\"\n                                }\n                            }\n                        ]\n                    },\n                    {\n                        \"matcher\": {\n                            \"id\": \"byFrameRefID\",\n                            \"options\": \"C\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"custom.lineStyle\",\n                                \"value\": {\n                                    \"fill\": \"dash\"\n                                }\n                            },\n                            {\n                                \"id\": \"custom.lineWidth\",\n                                \"value\": 2\n                            },\n                            {\n                                \"id\": \"color\",\n                                \"value\": {\n                                    \"fixedColor\": \"orange\",\n                                    \"mode\": \"fixed\"\n                                }\n                            }\n                        ]\n                    }\n                ]\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 14\n            },\n            \"id\": 3,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(\\n    container_memory_working_set_bytes{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", container!=\\\"\\\", image!=\\\"\\\"}\\n  * on(namespace,pod)\\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload_type=~\\\"$type\\\"}\\n) by (workload, workload_type)\\n\",\n                    \"legendFormat\": \"{{workload}} - {{workload_type}}\"\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"scalar(max(kube_resourcequota{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", type=\\\"hard\\\",resource=~\\\"requests.memory|memory\\\"}))\",\n                    \"legendFormat\": \"quota - requests\"\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"scalar(max(kube_resourcequota{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", type=\\\"hard\\\",resource=~\\\"limits.memory\\\"}))\",\n                    \"legendFormat\": \"quota - limits\"\n                }\n            ],\n            \"title\": \"Memory Usage\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"unit\": \"bytes\"\n                },\n                \"overrides\": [\n                    {\n                        \"matcher\": {\n                            \"id\": \"byRegexp\",\n                            \"options\": \"/%/\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"unit\",\n                                \"value\": \"percentunit\"\n                            }\n                        ]\n                    },\n                    {\n                        \"matcher\": {\n                            \"id\": \"byName\",\n                            \"options\": \"Workload\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"links\",\n                                \"value\": [\n                                    {\n                                        \"title\": \"Drill down to workloads\",\n                                        \"url\": \"/d/a164a7f0339f99e89cea5cb47e9be617/k8s-resources-workload?${datasource:queryparam}\u0026var-cluster=$cluster\u0026var-namespace=$namespace\u0026var-type=${__data.fields.Type}\u0026var-workload=${__data.fields.Workload}\"\n                                    }\n                                ]\n                            }\n                        ]\n                    },\n                    {\n                        \"matcher\": {\n                            \"id\": \"byName\",\n                            \"options\": \"Running Pods\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"unit\",\n                                \"value\": \"none\"\n                            }\n                        ]\n                    }\n                ]\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 21\n            },\n            \"id\": 4,\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"count(namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload_type=~\\\"$type\\\"}) by (workload, workload_type)\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(\\n    container_memory_working_set_bytes{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", container!=\\\"\\\", image!=\\\"\\\"}\\n  * on(namespace,pod)\\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload_type=~\\\"$type\\\"}\\n) by (workload, workload_type)\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(\\n  kube_pod_container_resource_requests{job=\\\"kube-state-metrics\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"memory\\\"}\\n* on(namespace,pod)\\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload_type=~\\\"$type\\\"}\\n) by (workload, workload_type)\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(\\n    container_memory_working_set_bytes{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", container!=\\\"\\\", image!=\\\"\\\"}\\n  * on(namespace,pod)\\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload_type=~\\\"$type\\\"}\\n) by (workload, workload_type)\\n/sum(\\n  kube_pod_container_resource_requests{job=\\\"kube-state-metrics\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"memory\\\"}\\n* on(namespace,pod)\\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload_type=~\\\"$type\\\"}\\n) by (workload, workload_type)\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(\\n  kube_pod_container_resource_limits{job=\\\"kube-state-metrics\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"memory\\\"}\\n* on(namespace,pod)\\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload_type=~\\\"$type\\\"}\\n) by (workload, workload_type)\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(\\n    container_memory_working_set_bytes{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", container!=\\\"\\\", image!=\\\"\\\"}\\n  * on(namespace,pod)\\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload_type=~\\\"$type\\\"}\\n) by (workload, workload_type)\\n/sum(\\n  kube_pod_container_resource_limits{job=\\\"kube-state-metrics\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"memory\\\"}\\n* on(namespace,pod)\\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload_type=~\\\"$type\\\"}\\n) by (workload, workload_type)\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                }\n            ],\n            \"title\": \"Memory Quota\",\n            \"transformations\": [\n                {\n                    \"id\": \"joinByField\",\n                    \"options\": {\n                        \"byField\": \"workload\",\n                        \"mode\": \"outer\"\n                    }\n                },\n                {\n                    \"id\": \"organize\",\n                    \"options\": {\n                        \"excludeByName\": {\n                            \"Time\": true,\n                            \"Time 1\": true,\n                            \"Time 2\": true,\n                            \"Time 3\": true,\n                            \"Time 4\": true,\n                            \"Time 5\": true,\n                            \"Time 6\": true,\n                            \"workload_type 2\": true,\n                            \"workload_type 3\": true,\n                            \"workload_type 4\": true,\n                            \"workload_type 5\": true,\n                            \"workload_type 6\": true\n                        },\n                        \"indexByName\": {\n                            \"Time 1\": 0,\n                            \"Time 2\": 1,\n                            \"Time 3\": 2,\n                            \"Time 4\": 3,\n                            \"Time 5\": 4,\n                            \"Time 6\": 5,\n                            \"Value #A\": 8,\n                            \"Value #B\": 9,\n                            \"Value #C\": 10,\n                            \"Value #D\": 11,\n                            \"Value #E\": 12,\n                            \"Value #F\": 13,\n                            \"workload\": 6,\n                            \"workload_type 1\": 7,\n                            \"workload_type 2\": 14,\n                            \"workload_type 3\": 15,\n                            \"workload_type 4\": 16,\n                            \"workload_type 5\": 17,\n                            \"workload_type 6\": 18\n                        },\n                        \"renameByName\": {\n                            \"Value #A\": \"Running Pods\",\n                            \"Value #B\": \"Memory Usage\",\n                            \"Value #C\": \"Memory Requests\",\n                            \"Value #D\": \"Memory Requests %\",\n                            \"Value #E\": \"Memory Limits\",\n                            \"Value #F\": \"Memory Limits %\",\n                            \"workload\": \"Workload\",\n                            \"workload_type 1\": \"Type\"\n                        }\n                    }\n                }\n            ],\n            \"type\": \"table\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"overrides\": [\n                    {\n                        \"matcher\": {\n                            \"id\": \"byRegexp\",\n                            \"options\": \"/Bandwidth/\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"unit\",\n                                \"value\": \"Bps\"\n                            }\n                        ]\n                    },\n                    {\n                        \"matcher\": {\n                            \"id\": \"byRegexp\",\n                            \"options\": \"/Packets/\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"unit\",\n                                \"value\": \"pps\"\n                            }\n                        ]\n                    },\n                    {\n                        \"matcher\": {\n                            \"id\": \"byName\",\n                            \"options\": \"Workload\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"links\",\n                                \"value\": [\n                                    {\n                                        \"title\": \"Drill down to workloads\",\n                                        \"url\": \"/d/a164a7f0339f99e89cea5cb47e9be617/k8s-resources-workload?${datasource:queryparam}\u0026var-cluster=$cluster\u0026var-namespace=$namespace\u0026var-type=${__data.fields.Type}\u0026var-workload=${__data.fields.Workload}\"\n                                    }\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 28\n            },\n            \"id\": 5,\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"(sum(rate(container_network_receive_bytes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload_type=~\\\"$type\\\"}) by (workload))\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"(sum(rate(container_network_transmit_bytes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload_type=~\\\"$type\\\"}) by (workload))\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"(sum(rate(container_network_receive_packets_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload_type=~\\\"$type\\\"}) by (workload))\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"(sum(rate(container_network_transmit_packets_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload_type=~\\\"$type\\\"}) by (workload))\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"(sum(rate(container_network_receive_packets_dropped_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload_type=~\\\"$type\\\"}) by (workload))\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"(sum(rate(container_network_transmit_packets_dropped_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload_type=~\\\"$type\\\"}) by (workload))\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                }\n            ],\n            \"title\": \"Current Network Usage\",\n            \"transformations\": [\n                {\n                    \"id\": \"joinByField\",\n                    \"options\": {\n                        \"byField\": \"workload\",\n                        \"mode\": \"outer\"\n                    }\n                },\n                {\n                    \"id\": \"organize\",\n                    \"options\": {\n                        \"excludeByName\": {\n                            \"Time\": true,\n                            \"Time 1\": true,\n                            \"Time 2\": true,\n                            \"Time 3\": true,\n                            \"Time 4\": true,\n                            \"Time 5\": true,\n                            \"Time 6\": true\n                        },\n                        \"indexByName\": {\n                            \"Time 1\": 0,\n                            \"Time 2\": 1,\n                            \"Time 3\": 2,\n                            \"Time 4\": 3,\n                            \"Time 5\": 4,\n                            \"Time 6\": 5,\n                            \"Value #A\": 7,\n                            \"Value #B\": 8,\n                            \"Value #C\": 9,\n                            \"Value #D\": 10,\n                            \"Value #E\": 11,\n                            \"Value #F\": 12,\n                            \"workload\": 6\n                        },\n                        \"renameByName\": {\n                            \"Value #A\": \"Current Receive Bandwidth\",\n                            \"Value #B\": \"Current Transmit Bandwidth\",\n                            \"Value #C\": \"Rate of Received Packets\",\n                            \"Value #D\": \"Rate of Transmitted Packets\",\n                            \"Value #E\": \"Rate of Received Packets Dropped\",\n                            \"Value #F\": \"Rate of Transmitted Packets Dropped\",\n                            \"workload\": \"Workload\"\n                        }\n                    }\n                }\n            ],\n            \"type\": \"table\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"Bps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 35\n            },\n            \"id\": 6,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"(sum(rate(container_network_receive_bytes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=~\\\".+\\\", workload_type=~\\\"$type\\\"}) by (workload))\\n\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Receive Bandwidth\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"Bps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 35\n            },\n            \"id\": 7,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"(sum(rate(container_network_transmit_bytes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=~\\\".+\\\", workload_type=~\\\"$type\\\"}) by (workload))\\n\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Transmit Bandwidth\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"Bps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 42\n            },\n            \"id\": 8,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"(avg(rate(container_network_receive_bytes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=~\\\".+\\\", workload_type=~\\\"$type\\\"}) by (workload))\\n\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Average Container Bandwidth by Workload: Received\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"Bps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 42\n            },\n            \"id\": 9,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"(avg(rate(container_network_transmit_bytes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=~\\\".+\\\", workload_type=~\\\"$type\\\"}) by (workload))\\n\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Average Container Bandwidth by Workload: Transmitted\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"pps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 49\n            },\n            \"id\": 10,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"(sum(rate(container_network_receive_packets_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=~\\\".+\\\", workload_type=~\\\"$type\\\"}) by (workload))\\n\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Rate of Received Packets\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"pps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 49\n            },\n            \"id\": 11,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"(sum(rate(container_network_transmit_packets_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=~\\\".+\\\", workload_type=~\\\"$type\\\"}) by (workload))\\n\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Rate of Transmitted Packets\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"pps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 56\n            },\n            \"id\": 12,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"(sum(rate(container_network_receive_packets_dropped_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=~\\\".+\\\", workload_type=~\\\"$type\\\"}) by (workload))\\n\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Rate of Received Packets Dropped\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"pps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 56\n            },\n            \"id\": 13,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"(sum(rate(container_network_transmit_packets_dropped_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=~\\\".+\\\", workload_type=~\\\"$type\\\"}) by (workload))\\n\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Rate of Transmitted Packets Dropped\",\n            \"type\": \"timeseries\"\n        }\n    ],\n    \"refresh\": \"10s\",\n    \"schemaVersion\": 39,\n    \"tags\": [\n        \"kubernetes-mixin\"\n    ],\n    \"templating\": {\n        \"list\": [\n            {\n                \"current\": {\n                    \"selected\": true,\n                    \"text\": \"default\",\n                    \"value\": \"default\"\n                },\n                \"hide\": 0,\n                \"label\": \"Data source\",\n                \"name\": \"datasource\",\n                \"query\": \"prometheus\",\n                \"regex\": \"\",\n                \"type\": \"datasource\"\n            },\n            {\n                \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"${datasource}\"\n                },\n                \"hide\": 0,\n                \"label\": \"cluster\",\n                \"name\": \"cluster\",\n                \"query\": \"label_values(up{job=\\\"kube-state-metrics\\\"}, cluster)\",\n                \"refresh\": 2,\n                \"sort\": 1,\n                \"type\": \"query\"\n            },\n            {\n                \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"${datasource}\"\n                },\n                \"hide\": 0,\n                \"label\": \"namespace\",\n                \"name\": \"namespace\",\n                \"query\": \"label_values(kube_namespace_status_phase{job=\\\"kube-state-metrics\\\", cluster=\\\"$cluster\\\"}, namespace)\",\n                \"refresh\": 2,\n                \"sort\": 1,\n                \"type\": \"query\"\n            },\n            {\n                \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"${datasource}\"\n                },\n                \"hide\": 0,\n                \"includeAll\": true,\n                \"label\": \"workload_type\",\n                \"name\": \"type\",\n                \"query\": \"label_values(namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=~\\\".+\\\"}, workload_type)\",\n                \"refresh\": 2,\n                \"sort\": 1,\n                \"type\": \"query\"\n            }\n        ]\n    },\n    \"time\": {\n        \"from\": \"now-1h\",\n        \"to\": \"now\"\n    },\n    \"timezone\": \"UTC\",\n    \"title\": \"Kubernetes / Compute Resources / Namespace (Workloads)\",\n    \"uid\": \"a87fb0d919ec0ea5f6543124e16c42a5\"\n}"},"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"grafana","app.kubernetes.io/name":"grafana","app.kubernetes.io/part-of":"kube-prometheus","app.kubernetes.io/version":"11.3.1"},"name":"grafana-dashboard-k8s-resources-workloads-namespace","namespace":"monitoring"}}
    creationTimestamp: "2024-11-25T14:40:26Z"
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 11.3.1
    name: grafana-dashboard-k8s-resources-workloads-namespace
    namespace: monitoring
    resourceVersion: "3039623"
    uid: e2f75d7f-f4c8-4465-8694-327789ac4cb4
- apiVersion: v1
  data:
    kubelet.json: |-
      {
          "editable": false,
          "links": [
              {
                  "asDropdown": true,
                  "includeVars": true,
                  "keepTime": true,
                  "tags": [
                      "kubernetes-mixin"
                  ],
                  "targetBlank": false,
                  "title": "Kubernetes",
                  "type": "dashboards"
              }
          ],
          "panels": [
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "none"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 4,
                      "x": 0,
                      "y": 0
                  },
                  "id": 1,
                  "interval": "1m",
                  "options": {
                      "colorMode": "none"
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(kubelet_node_name{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\"})",
                          "instant": true
                      }
                  ],
                  "title": "Running Kubelets",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "none"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 4,
                      "x": 4,
                      "y": 0
                  },
                  "id": 2,
                  "interval": "1m",
                  "options": {
                      "colorMode": "none"
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(kubelet_running_pods{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", instance=~\"$instance\"})",
                          "instant": true
                      }
                  ],
                  "title": "Running Pods",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "none"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 4,
                      "x": 8,
                      "y": 0
                  },
                  "id": 3,
                  "interval": "1m",
                  "options": {
                      "colorMode": "none"
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(kubelet_running_containers{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", instance=~\"$instance\"})",
                          "instant": true
                      }
                  ],
                  "title": "Running Containers",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "none"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 4,
                      "x": 12,
                      "y": 0
                  },
                  "id": 4,
                  "interval": "1m",
                  "options": {
                      "colorMode": "none"
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(volume_manager_total_volumes{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", instance=~\"$instance\", state=\"actual_state_of_world\"})",
                          "instant": true
                      }
                  ],
                  "title": "Actual Volume Count",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "none"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 4,
                      "x": 16,
                      "y": 0
                  },
                  "id": 5,
                  "interval": "1m",
                  "options": {
                      "colorMode": "none"
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(volume_manager_total_volumes{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", instance=~\"$instance\",state=\"desired_state_of_world\"})",
                          "instant": true
                      }
                  ],
                  "title": "Desired Volume Count",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "none"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 4,
                      "x": 20,
                      "y": 0
                  },
                  "id": 6,
                  "interval": "1m",
                  "options": {
                      "colorMode": "none"
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(kubelet_node_config_error{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", instance=~\"$instance\"}[$__rate_interval]))",
                          "instant": true
                      }
                  ],
                  "title": "Config Error Count",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "ops"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 7
                  },
                  "id": 7,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(kubelet_runtime_operations_total{cluster=\"$cluster\",job=\"kubelet\", metrics_path=\"/metrics\",instance=~\"$instance\"}[$__rate_interval])) by (operation_type, instance)",
                          "legendFormat": "{{instance}} {{operation_type}}"
                      }
                  ],
                  "title": "Operation Rate",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "ops"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 7
                  },
                  "id": 8,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(kubelet_runtime_operations_errors_total{cluster=\"$cluster\",job=\"kubelet\", metrics_path=\"/metrics\",instance=~\"$instance\"}[$__rate_interval])) by (instance, operation_type)",
                          "legendFormat": "{{instance}} {{operation_type}}"
                      }
                  ],
                  "title": "Operation Error Rate",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "s"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 14
                  },
                  "id": 9,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "histogram_quantile(0.99, sum(rate(kubelet_runtime_operations_duration_seconds_bucket{cluster=\"$cluster\",job=\"kubelet\", metrics_path=\"/metrics\",instance=~\"$instance\"}[$__rate_interval])) by (instance, operation_type, le))",
                          "legendFormat": "{{instance}} {{operation_type}}"
                      }
                  ],
                  "title": "Operation Duration 99th quantile",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "ops"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 21
                  },
                  "id": 10,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(kubelet_pod_start_duration_seconds_count{cluster=\"$cluster\",job=\"kubelet\", metrics_path=\"/metrics\",instance=~\"$instance\"}[$__rate_interval])) by (instance)",
                          "legendFormat": "{{instance}} pod"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(kubelet_pod_worker_duration_seconds_count{cluster=\"$cluster\",job=\"kubelet\", metrics_path=\"/metrics\",instance=~\"$instance\"}[$__rate_interval])) by (instance)",
                          "legendFormat": "{{instance}} worker"
                      }
                  ],
                  "title": "Pod Start Rate",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "s"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 21
                  },
                  "id": 11,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "histogram_quantile(0.99, sum(rate(kubelet_pod_start_duration_seconds_bucket{cluster=\"$cluster\",job=\"kubelet\", metrics_path=\"/metrics\",instance=~\"$instance\"}[$__rate_interval])) by (instance, le))",
                          "legendFormat": "{{instance}} pod"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "histogram_quantile(0.99, sum(rate(kubelet_pod_worker_duration_seconds_bucket{cluster=\"$cluster\",job=\"kubelet\", metrics_path=\"/metrics\",instance=~\"$instance\"}[$__rate_interval])) by (instance, le))",
                          "legendFormat": "{{instance}} worker"
                      }
                  ],
                  "title": "Pod Start Duration",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "ops"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 28
                  },
                  "id": 12,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(storage_operation_duration_seconds_count{cluster=\"$cluster\",job=\"kubelet\", metrics_path=\"/metrics\",instance=~\"$instance\"}[$__rate_interval])) by (instance, operation_name, volume_plugin)",
                          "legendFormat": "{{instance}} {{operation_name}} {{volume_plugin}}"
                      }
                  ],
                  "title": "Storage Operation Rate",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "ops"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 28
                  },
                  "id": 13,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(storage_operation_errors_total{cluster=\"$cluster\",job=\"kubelet\", metrics_path=\"/metrics\",instance=~\"$instance\"}[$__rate_interval])) by (instance, operation_name, volume_plugin)",
                          "legendFormat": "{{instance}} {{operation_name}} {{volume_plugin}}"
                      }
                  ],
                  "title": "Storage Operation Error Rate",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "s"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 35
                  },
                  "id": 14,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "histogram_quantile(0.99, sum(rate(storage_operation_duration_seconds_bucket{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", instance=~\"$instance\"}[$__rate_interval])) by (instance, operation_name, volume_plugin, le))",
                          "legendFormat": "{{instance}} {{operation_name}} {{volume_plugin}}"
                      }
                  ],
                  "title": "Storage Operation Duration 99th quantile",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "ops"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 42
                  },
                  "id": 15,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(kubelet_cgroup_manager_duration_seconds_count{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", instance=~\"$instance\"}[$__rate_interval])) by (instance, operation_type)",
                          "legendFormat": "{{operation_type}}"
                      }
                  ],
                  "title": "Cgroup manager operation rate",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "s"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 42
                  },
                  "id": 16,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "histogram_quantile(0.99, sum(rate(kubelet_cgroup_manager_duration_seconds_bucket{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", instance=~\"$instance\"}[$__rate_interval])) by (instance, operation_type, le))",
                          "legendFormat": "{{instance}} {{operation_type}}"
                      }
                  ],
                  "title": "Cgroup manager 99th quantile",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "ops"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 49
                  },
                  "id": 17,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(kubelet_pleg_relist_duration_seconds_count{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", instance=~\"$instance\"}[$__rate_interval])) by (instance)",
                          "legendFormat": "{{instance}}"
                      }
                  ],
                  "title": "PLEG relist rate",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "s"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 49
                  },
                  "id": 18,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "histogram_quantile(0.99, sum(rate(kubelet_pleg_relist_interval_seconds_bucket{cluster=\"$cluster\",job=\"kubelet\", metrics_path=\"/metrics\",instance=~\"$instance\"}[$__rate_interval])) by (instance, le))",
                          "legendFormat": "{{instance}}"
                      }
                  ],
                  "title": "PLEG relist interval",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "s"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 56
                  },
                  "id": 19,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "histogram_quantile(0.99, sum(rate(kubelet_pleg_relist_duration_seconds_bucket{cluster=\"$cluster\",job=\"kubelet\", metrics_path=\"/metrics\",instance=~\"$instance\"}[$__rate_interval])) by (instance, le))",
                          "legendFormat": "{{instance}}"
                      }
                  ],
                  "title": "PLEG relist duration",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "ops"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 63
                  },
                  "id": 20,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(rest_client_requests_total{cluster=\"$cluster\",job=\"kubelet\", metrics_path=\"/metrics\", instance=~\"$instance\",code=~\"2..\"}[$__rate_interval]))",
                          "legendFormat": "2xx"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(rest_client_requests_total{cluster=\"$cluster\",job=\"kubelet\", metrics_path=\"/metrics\", instance=~\"$instance\",code=~\"3..\"}[$__rate_interval]))",
                          "legendFormat": "3xx"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(rest_client_requests_total{cluster=\"$cluster\",job=\"kubelet\", metrics_path=\"/metrics\", instance=~\"$instance\",code=~\"4..\"}[$__rate_interval]))",
                          "legendFormat": "4xx"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(rest_client_requests_total{cluster=\"$cluster\",job=\"kubelet\", metrics_path=\"/metrics\", instance=~\"$instance\",code=~\"5..\"}[$__rate_interval]))",
                          "legendFormat": "5xx"
                      }
                  ],
                  "title": "RPC rate",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "s"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 70
                  },
                  "id": 21,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "histogram_quantile(0.99, sum(rate(rest_client_request_duration_seconds_bucket{cluster=\"$cluster\",job=\"kubelet\", metrics_path=\"/metrics\", instance=~\"$instance\"}[$__rate_interval])) by (instance, verb, url, le))",
                          "legendFormat": "{{instance}} {{verb}} {{url}}"
                      }
                  ],
                  "title": "Request duration 99th quantile",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "bytes"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 8,
                      "x": 0,
                      "y": 77
                  },
                  "id": 22,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "process_resident_memory_bytes{cluster=\"$cluster\",job=\"kubelet\", metrics_path=\"/metrics\",instance=~\"$instance\"}",
                          "legendFormat": "{{instance}}"
                      }
                  ],
                  "title": "Memory",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "short"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 8,
                      "x": 8,
                      "y": 77
                  },
                  "id": 23,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "rate(process_cpu_seconds_total{cluster=\"$cluster\",job=\"kubelet\", metrics_path=\"/metrics\",instance=~\"$instance\"}[$__rate_interval])",
                          "legendFormat": "{{instance}}"
                      }
                  ],
                  "title": "CPU usage",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "short"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 8,
                      "x": 16,
                      "y": 77
                  },
                  "id": 24,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "go_goroutines{cluster=\"$cluster\",job=\"kubelet\", metrics_path=\"/metrics\",instance=~\"$instance\"}",
                          "legendFormat": "{{instance}}"
                      }
                  ],
                  "title": "Goroutines",
                  "type": "timeseries"
              }
          ],
          "refresh": "10s",
          "schemaVersion": 39,
          "tags": [
              "kubernetes-mixin"
          ],
          "templating": {
              "list": [
                  {
                      "current": {
                          "selected": true,
                          "text": "default",
                          "value": "default"
                      },
                      "hide": 0,
                      "label": "Data source",
                      "name": "datasource",
                      "query": "prometheus",
                      "regex": "",
                      "type": "datasource"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "cluster",
                      "name": "cluster",
                      "query": "label_values(up{job=\"kubelet\", metrics_path=\"/metrics\"}, cluster)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "includeAll": true,
                      "label": "instance",
                      "name": "instance",
                      "query": "label_values(up{job=\"kubelet\", metrics_path=\"/metrics\",cluster=\"$cluster\"}, instance)",
                      "refresh": 2,
                      "type": "query"
                  }
              ]
          },
          "time": {
              "from": "now-1h",
              "to": "now"
          },
          "timezone": "UTC",
          "title": "Kubernetes / Kubelet",
          "uid": "3138fa155d5915769fbded898ac09fd9"
      }
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"kubelet.json":"{\n    \"editable\": false,\n    \"links\": [\n        {\n            \"asDropdown\": true,\n            \"includeVars\": true,\n            \"keepTime\": true,\n            \"tags\": [\n                \"kubernetes-mixin\"\n            ],\n            \"targetBlank\": false,\n            \"title\": \"Kubernetes\",\n            \"type\": \"dashboards\"\n        }\n    ],\n    \"panels\": [\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"unit\": \"none\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 4,\n                \"x\": 0,\n                \"y\": 0\n            },\n            \"id\": 1,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"colorMode\": \"none\"\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(kubelet_node_name{cluster=\\\"$cluster\\\", job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\"})\",\n                    \"instant\": true\n                }\n            ],\n            \"title\": \"Running Kubelets\",\n            \"type\": \"stat\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"unit\": \"none\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 4,\n                \"x\": 4,\n                \"y\": 0\n            },\n            \"id\": 2,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"colorMode\": \"none\"\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(kubelet_running_pods{cluster=\\\"$cluster\\\", job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\", instance=~\\\"$instance\\\"})\",\n                    \"instant\": true\n                }\n            ],\n            \"title\": \"Running Pods\",\n            \"type\": \"stat\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"unit\": \"none\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 4,\n                \"x\": 8,\n                \"y\": 0\n            },\n            \"id\": 3,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"colorMode\": \"none\"\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(kubelet_running_containers{cluster=\\\"$cluster\\\", job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\", instance=~\\\"$instance\\\"})\",\n                    \"instant\": true\n                }\n            ],\n            \"title\": \"Running Containers\",\n            \"type\": \"stat\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"unit\": \"none\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 4,\n                \"x\": 12,\n                \"y\": 0\n            },\n            \"id\": 4,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"colorMode\": \"none\"\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(volume_manager_total_volumes{cluster=\\\"$cluster\\\", job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\", instance=~\\\"$instance\\\", state=\\\"actual_state_of_world\\\"})\",\n                    \"instant\": true\n                }\n            ],\n            \"title\": \"Actual Volume Count\",\n            \"type\": \"stat\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"unit\": \"none\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 4,\n                \"x\": 16,\n                \"y\": 0\n            },\n            \"id\": 5,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"colorMode\": \"none\"\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(volume_manager_total_volumes{cluster=\\\"$cluster\\\", job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\", instance=~\\\"$instance\\\",state=\\\"desired_state_of_world\\\"})\",\n                    \"instant\": true\n                }\n            ],\n            \"title\": \"Desired Volume Count\",\n            \"type\": \"stat\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"unit\": \"none\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 4,\n                \"x\": 20,\n                \"y\": 0\n            },\n            \"id\": 6,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"colorMode\": \"none\"\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(kubelet_node_config_error{cluster=\\\"$cluster\\\", job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\", instance=~\\\"$instance\\\"}[$__rate_interval]))\",\n                    \"instant\": true\n                }\n            ],\n            \"title\": \"Config Error Count\",\n            \"type\": \"stat\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"ops\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 7\n            },\n            \"id\": 7,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(kubelet_runtime_operations_total{cluster=\\\"$cluster\\\",job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\",instance=~\\\"$instance\\\"}[$__rate_interval])) by (operation_type, instance)\",\n                    \"legendFormat\": \"{{instance}} {{operation_type}}\"\n                }\n            ],\n            \"title\": \"Operation Rate\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"ops\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 7\n            },\n            \"id\": 8,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(kubelet_runtime_operations_errors_total{cluster=\\\"$cluster\\\",job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\",instance=~\\\"$instance\\\"}[$__rate_interval])) by (instance, operation_type)\",\n                    \"legendFormat\": \"{{instance}} {{operation_type}}\"\n                }\n            ],\n            \"title\": \"Operation Error Rate\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"s\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 14\n            },\n            \"id\": 9,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"histogram_quantile(0.99, sum(rate(kubelet_runtime_operations_duration_seconds_bucket{cluster=\\\"$cluster\\\",job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\",instance=~\\\"$instance\\\"}[$__rate_interval])) by (instance, operation_type, le))\",\n                    \"legendFormat\": \"{{instance}} {{operation_type}}\"\n                }\n            ],\n            \"title\": \"Operation Duration 99th quantile\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"ops\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 21\n            },\n            \"id\": 10,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(kubelet_pod_start_duration_seconds_count{cluster=\\\"$cluster\\\",job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\",instance=~\\\"$instance\\\"}[$__rate_interval])) by (instance)\",\n                    \"legendFormat\": \"{{instance}} pod\"\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(kubelet_pod_worker_duration_seconds_count{cluster=\\\"$cluster\\\",job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\",instance=~\\\"$instance\\\"}[$__rate_interval])) by (instance)\",\n                    \"legendFormat\": \"{{instance}} worker\"\n                }\n            ],\n            \"title\": \"Pod Start Rate\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"s\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 21\n            },\n            \"id\": 11,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"histogram_quantile(0.99, sum(rate(kubelet_pod_start_duration_seconds_bucket{cluster=\\\"$cluster\\\",job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\",instance=~\\\"$instance\\\"}[$__rate_interval])) by (instance, le))\",\n                    \"legendFormat\": \"{{instance}} pod\"\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"histogram_quantile(0.99, sum(rate(kubelet_pod_worker_duration_seconds_bucket{cluster=\\\"$cluster\\\",job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\",instance=~\\\"$instance\\\"}[$__rate_interval])) by (instance, le))\",\n                    \"legendFormat\": \"{{instance}} worker\"\n                }\n            ],\n            \"title\": \"Pod Start Duration\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"ops\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 28\n            },\n            \"id\": 12,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(storage_operation_duration_seconds_count{cluster=\\\"$cluster\\\",job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\",instance=~\\\"$instance\\\"}[$__rate_interval])) by (instance, operation_name, volume_plugin)\",\n                    \"legendFormat\": \"{{instance}} {{operation_name}} {{volume_plugin}}\"\n                }\n            ],\n            \"title\": \"Storage Operation Rate\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"ops\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 28\n            },\n            \"id\": 13,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(storage_operation_errors_total{cluster=\\\"$cluster\\\",job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\",instance=~\\\"$instance\\\"}[$__rate_interval])) by (instance, operation_name, volume_plugin)\",\n                    \"legendFormat\": \"{{instance}} {{operation_name}} {{volume_plugin}}\"\n                }\n            ],\n            \"title\": \"Storage Operation Error Rate\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"s\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 35\n            },\n            \"id\": 14,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"histogram_quantile(0.99, sum(rate(storage_operation_duration_seconds_bucket{cluster=\\\"$cluster\\\", job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\", instance=~\\\"$instance\\\"}[$__rate_interval])) by (instance, operation_name, volume_plugin, le))\",\n                    \"legendFormat\": \"{{instance}} {{operation_name}} {{volume_plugin}}\"\n                }\n            ],\n            \"title\": \"Storage Operation Duration 99th quantile\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"ops\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 42\n            },\n            \"id\": 15,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(kubelet_cgroup_manager_duration_seconds_count{cluster=\\\"$cluster\\\", job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\", instance=~\\\"$instance\\\"}[$__rate_interval])) by (instance, operation_type)\",\n                    \"legendFormat\": \"{{operation_type}}\"\n                }\n            ],\n            \"title\": \"Cgroup manager operation rate\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"s\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 42\n            },\n            \"id\": 16,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"histogram_quantile(0.99, sum(rate(kubelet_cgroup_manager_duration_seconds_bucket{cluster=\\\"$cluster\\\", job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\", instance=~\\\"$instance\\\"}[$__rate_interval])) by (instance, operation_type, le))\",\n                    \"legendFormat\": \"{{instance}} {{operation_type}}\"\n                }\n            ],\n            \"title\": \"Cgroup manager 99th quantile\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"ops\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 49\n            },\n            \"id\": 17,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(kubelet_pleg_relist_duration_seconds_count{cluster=\\\"$cluster\\\", job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\", instance=~\\\"$instance\\\"}[$__rate_interval])) by (instance)\",\n                    \"legendFormat\": \"{{instance}}\"\n                }\n            ],\n            \"title\": \"PLEG relist rate\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"s\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 49\n            },\n            \"id\": 18,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"histogram_quantile(0.99, sum(rate(kubelet_pleg_relist_interval_seconds_bucket{cluster=\\\"$cluster\\\",job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\",instance=~\\\"$instance\\\"}[$__rate_interval])) by (instance, le))\",\n                    \"legendFormat\": \"{{instance}}\"\n                }\n            ],\n            \"title\": \"PLEG relist interval\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"s\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 56\n            },\n            \"id\": 19,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"histogram_quantile(0.99, sum(rate(kubelet_pleg_relist_duration_seconds_bucket{cluster=\\\"$cluster\\\",job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\",instance=~\\\"$instance\\\"}[$__rate_interval])) by (instance, le))\",\n                    \"legendFormat\": \"{{instance}}\"\n                }\n            ],\n            \"title\": \"PLEG relist duration\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"ops\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 63\n            },\n            \"id\": 20,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(rest_client_requests_total{cluster=\\\"$cluster\\\",job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\", instance=~\\\"$instance\\\",code=~\\\"2..\\\"}[$__rate_interval]))\",\n                    \"legendFormat\": \"2xx\"\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(rest_client_requests_total{cluster=\\\"$cluster\\\",job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\", instance=~\\\"$instance\\\",code=~\\\"3..\\\"}[$__rate_interval]))\",\n                    \"legendFormat\": \"3xx\"\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(rest_client_requests_total{cluster=\\\"$cluster\\\",job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\", instance=~\\\"$instance\\\",code=~\\\"4..\\\"}[$__rate_interval]))\",\n                    \"legendFormat\": \"4xx\"\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(rest_client_requests_total{cluster=\\\"$cluster\\\",job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\", instance=~\\\"$instance\\\",code=~\\\"5..\\\"}[$__rate_interval]))\",\n                    \"legendFormat\": \"5xx\"\n                }\n            ],\n            \"title\": \"RPC rate\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"s\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 70\n            },\n            \"id\": 21,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"histogram_quantile(0.99, sum(rate(rest_client_request_duration_seconds_bucket{cluster=\\\"$cluster\\\",job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\", instance=~\\\"$instance\\\"}[$__rate_interval])) by (instance, verb, url, le))\",\n                    \"legendFormat\": \"{{instance}} {{verb}} {{url}}\"\n                }\n            ],\n            \"title\": \"Request duration 99th quantile\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"bytes\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 8,\n                \"x\": 0,\n                \"y\": 77\n            },\n            \"id\": 22,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"process_resident_memory_bytes{cluster=\\\"$cluster\\\",job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\",instance=~\\\"$instance\\\"}\",\n                    \"legendFormat\": \"{{instance}}\"\n                }\n            ],\n            \"title\": \"Memory\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"short\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 8,\n                \"x\": 8,\n                \"y\": 77\n            },\n            \"id\": 23,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"rate(process_cpu_seconds_total{cluster=\\\"$cluster\\\",job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\",instance=~\\\"$instance\\\"}[$__rate_interval])\",\n                    \"legendFormat\": \"{{instance}}\"\n                }\n            ],\n            \"title\": \"CPU usage\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"short\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 8,\n                \"x\": 16,\n                \"y\": 77\n            },\n            \"id\": 24,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"go_goroutines{cluster=\\\"$cluster\\\",job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\",instance=~\\\"$instance\\\"}\",\n                    \"legendFormat\": \"{{instance}}\"\n                }\n            ],\n            \"title\": \"Goroutines\",\n            \"type\": \"timeseries\"\n        }\n    ],\n    \"refresh\": \"10s\",\n    \"schemaVersion\": 39,\n    \"tags\": [\n        \"kubernetes-mixin\"\n    ],\n    \"templating\": {\n        \"list\": [\n            {\n                \"current\": {\n                    \"selected\": true,\n                    \"text\": \"default\",\n                    \"value\": \"default\"\n                },\n                \"hide\": 0,\n                \"label\": \"Data source\",\n                \"name\": \"datasource\",\n                \"query\": \"prometheus\",\n                \"regex\": \"\",\n                \"type\": \"datasource\"\n            },\n            {\n                \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"${datasource}\"\n                },\n                \"hide\": 0,\n                \"label\": \"cluster\",\n                \"name\": \"cluster\",\n                \"query\": \"label_values(up{job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\"}, cluster)\",\n                \"refresh\": 2,\n                \"sort\": 1,\n                \"type\": \"query\"\n            },\n            {\n                \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"${datasource}\"\n                },\n                \"hide\": 0,\n                \"includeAll\": true,\n                \"label\": \"instance\",\n                \"name\": \"instance\",\n                \"query\": \"label_values(up{job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\",cluster=\\\"$cluster\\\"}, instance)\",\n                \"refresh\": 2,\n                \"type\": \"query\"\n            }\n        ]\n    },\n    \"time\": {\n        \"from\": \"now-1h\",\n        \"to\": \"now\"\n    },\n    \"timezone\": \"UTC\",\n    \"title\": \"Kubernetes / Kubelet\",\n    \"uid\": \"3138fa155d5915769fbded898ac09fd9\"\n}"},"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"grafana","app.kubernetes.io/name":"grafana","app.kubernetes.io/part-of":"kube-prometheus","app.kubernetes.io/version":"11.3.1"},"name":"grafana-dashboard-kubelet","namespace":"monitoring"}}
    creationTimestamp: "2024-11-25T14:40:26Z"
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 11.3.1
    name: grafana-dashboard-kubelet
    namespace: monitoring
    resourceVersion: "3039624"
    uid: b831b415-8400-42a3-b1db-9a869ad20b22
- apiVersion: v1
  data:
    namespace-by-pod.json: |-
      {
          "editable": false,
          "links": [
              {
                  "asDropdown": true,
                  "includeVars": true,
                  "keepTime": true,
                  "tags": [
                      "kubernetes-mixin"
                  ],
                  "targetBlank": false,
                  "title": "Kubernetes",
                  "type": "dashboards"
              }
          ],
          "panels": [
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "displayName": "$namespace",
                          "max": 10000000000,
                          "min": 0,
                          "thresholds": {
                              "steps": [
                                  {
                                      "color": "dark-green",
                                      "index": 0,
                                      "value": null
                                  },
                                  {
                                      "color": "dark-yellow",
                                      "index": 1,
                                      "value": 5000000000
                                  },
                                  {
                                      "color": "dark-red",
                                      "index": 2,
                                      "value": 7000000000
                                  }
                              ]
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 0,
                      "y": 0
                  },
                  "id": 1,
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum (\n    rate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Current Rate of Bytes Received",
                  "type": "gauge"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "displayName": "$namespace",
                          "max": 10000000000,
                          "min": 0,
                          "thresholds": {
                              "steps": [
                                  {
                                      "color": "dark-green",
                                      "index": 0,
                                      "value": null
                                  },
                                  {
                                      "color": "dark-yellow",
                                      "index": 1,
                                      "value": 5000000000
                                  },
                                  {
                                      "color": "dark-red",
                                      "index": 2,
                                      "value": 7000000000
                                  }
                              ]
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 12,
                      "y": 0
                  },
                  "id": 2,
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum (\n    rate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Current Rate of Bytes Transmitted",
                  "type": "gauge"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/Bandwidth/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "Bps"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/Packets/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "pps"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Pod"
                              },
                              "properties": [
                                  {
                                      "id": "links",
                                      "value": [
                                          {
                                              "title": "Drill down",
                                              "url": "/d/7a18067ce943a40ae25454675c19ff5c/kubernetes-networking-pod?${datasource:queryparam}&var-cluster=${cluster}&var-namespace=${namespace}&var-pod=${__data.fields.Pod}"
                                          }
                                      ]
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 24,
                      "x": 0,
                      "y": 9
                  },
                  "id": 3,
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (pod) (\n    rate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (pod) (\n    rate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (pod) (\n    rate(container_network_receive_packets_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (pod) (\n    rate(container_network_transmit_packets_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (pod) (\n    rate(container_network_receive_packets_dropped_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (pod) (\n    rate(container_network_transmit_packets_dropped_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "format": "table",
                          "instant": true
                      }
                  ],
                  "title": "Current Network Usage",
                  "transformations": [
                      {
                          "id": "joinByField",
                          "options": {
                              "byField": "pod",
                              "mode": "outer"
                          }
                      },
                      {
                          "id": "organize",
                          "options": {
                              "excludeByName": {
                                  "Time": true,
                                  "Time 1": true,
                                  "Time 2": true,
                                  "Time 3": true,
                                  "Time 4": true,
                                  "Time 5": true,
                                  "Time 6": true
                              },
                              "indexByName": {
                                  "Time 1": 0,
                                  "Time 2": 1,
                                  "Time 3": 2,
                                  "Time 4": 3,
                                  "Time 5": 4,
                                  "Time 6": 5,
                                  "Value #A": 7,
                                  "Value #B": 8,
                                  "Value #C": 9,
                                  "Value #D": 10,
                                  "Value #E": 11,
                                  "Value #F": 12,
                                  "pod": 6
                              },
                              "renameByName": {
                                  "Value #A": "Current Receive Bandwidth",
                                  "Value #B": "Current Transmit Bandwidth",
                                  "Value #C": "Rate of Received Packets",
                                  "Value #D": "Rate of Transmitted Packets",
                                  "Value #E": "Rate of Received Packets Dropped",
                                  "Value #F": "Rate of Transmitted Packets Dropped",
                                  "pod": "Pod"
                              }
                          }
                      }
                  ],
                  "type": "table"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "showPoints": "never"
                          },
                          "unit": "binBps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 0,
                      "y": 18
                  },
                  "id": 4,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (pod) (\n    rate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Receive Bandwidth",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "showPoints": "never"
                          },
                          "unit": "binBps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 12,
                      "y": 18
                  },
                  "id": 5,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (pod) (\n    rate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Transmit Bandwidth",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "showPoints": "never"
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 0,
                      "y": 27
                  },
                  "id": 6,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (pod) (\n    rate(container_network_receive_packets_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Received Packets",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "showPoints": "never"
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 12,
                      "y": 27
                  },
                  "id": 7,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (pod) (\n    rate(container_network_transmit_packets_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Transmitted Packets",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "showPoints": "never"
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 0,
                      "y": 36
                  },
                  "id": 8,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (pod) (\n    rate(container_network_receive_packets_dropped_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Received Packets Dropped",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "showPoints": "never"
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 12,
                      "y": 36
                  },
                  "id": 9,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (pod) (\n    rate(container_network_transmit_packets_dropped_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Transmitted Packets Dropped",
                  "type": "timeseries"
              }
          ],
          "refresh": "10s",
          "schemaVersion": 39,
          "tags": [
              "kubernetes-mixin"
          ],
          "templating": {
              "list": [
                  {
                      "current": {
                          "selected": true,
                          "text": "default",
                          "value": "default"
                      },
                      "hide": 0,
                      "label": "Data source",
                      "name": "datasource",
                      "query": "prometheus",
                      "regex": "",
                      "type": "datasource"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "cluster",
                      "name": "cluster",
                      "query": "label_values(up{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\"}, cluster)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  },
                  {
                      "allValue": ".+",
                      "current": {
                          "selected": false,
                          "text": "kube-system",
                          "value": "kube-system"
                      },
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "includeAll": true,
                      "label": "namespace",
                      "name": "namespace",
                      "query": "label_values(container_network_receive_packets_total{cluster=\"$cluster\"}, namespace)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  }
              ]
          },
          "time": {
              "from": "now-1h",
              "to": "now"
          },
          "timezone": "UTC",
          "title": "Kubernetes / Networking / Namespace (Pods)",
          "uid": "8b7a8b326d7a6f1f04244066368c67af"
      }
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"namespace-by-pod.json":"{\n    \"editable\": false,\n    \"links\": [\n        {\n            \"asDropdown\": true,\n            \"includeVars\": true,\n            \"keepTime\": true,\n            \"tags\": [\n                \"kubernetes-mixin\"\n            ],\n            \"targetBlank\": false,\n            \"title\": \"Kubernetes\",\n            \"type\": \"dashboards\"\n        }\n    ],\n    \"panels\": [\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"displayName\": \"$namespace\",\n                    \"max\": 10000000000,\n                    \"min\": 0,\n                    \"thresholds\": {\n                        \"steps\": [\n                            {\n                                \"color\": \"dark-green\",\n                                \"index\": 0,\n                                \"value\": null\n                            },\n                            {\n                                \"color\": \"dark-yellow\",\n                                \"index\": 1,\n                                \"value\": 5000000000\n                            },\n                            {\n                                \"color\": \"dark-red\",\n                                \"index\": 2,\n                                \"value\": 7000000000\n                            }\n                        ]\n                    },\n                    \"unit\": \"Bps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 0\n            },\n            \"id\": 1,\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum (\\n    rate(container_network_receive_bytes_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$__rate_interval])\\n  * on (cluster,namespace,pod) group_left ()\\n    topk by (cluster,namespace,pod) (\\n      1,\\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\\\"false\\\"})\\n    )\\n)\\n\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Current Rate of Bytes Received\",\n            \"type\": \"gauge\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"displayName\": \"$namespace\",\n                    \"max\": 10000000000,\n                    \"min\": 0,\n                    \"thresholds\": {\n                        \"steps\": [\n                            {\n                                \"color\": \"dark-green\",\n                                \"index\": 0,\n                                \"value\": null\n                            },\n                            {\n                                \"color\": \"dark-yellow\",\n                                \"index\": 1,\n                                \"value\": 5000000000\n                            },\n                            {\n                                \"color\": \"dark-red\",\n                                \"index\": 2,\n                                \"value\": 7000000000\n                            }\n                        ]\n                    },\n                    \"unit\": \"Bps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 0\n            },\n            \"id\": 2,\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum (\\n    rate(container_network_transmit_bytes_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$__rate_interval])\\n  * on (cluster,namespace,pod) group_left ()\\n    topk by (cluster,namespace,pod) (\\n      1,\\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\\\"false\\\"})\\n    )\\n)\\n\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Current Rate of Bytes Transmitted\",\n            \"type\": \"gauge\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"overrides\": [\n                    {\n                        \"matcher\": {\n                            \"id\": \"byRegexp\",\n                            \"options\": \"/Bandwidth/\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"unit\",\n                                \"value\": \"Bps\"\n                            }\n                        ]\n                    },\n                    {\n                        \"matcher\": {\n                            \"id\": \"byRegexp\",\n                            \"options\": \"/Packets/\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"unit\",\n                                \"value\": \"pps\"\n                            }\n                        ]\n                    },\n                    {\n                        \"matcher\": {\n                            \"id\": \"byName\",\n                            \"options\": \"Pod\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"links\",\n                                \"value\": [\n                                    {\n                                        \"title\": \"Drill down\",\n                                        \"url\": \"/d/7a18067ce943a40ae25454675c19ff5c/kubernetes-networking-pod?${datasource:queryparam}\u0026var-cluster=${cluster}\u0026var-namespace=${namespace}\u0026var-pod=${__data.fields.Pod}\"\n                                    }\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            },\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 9\n            },\n            \"id\": 3,\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum by (pod) (\\n    rate(container_network_receive_bytes_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$__rate_interval])\\n  * on (cluster,namespace,pod) group_left ()\\n    topk by (cluster,namespace,pod) (\\n      1,\\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\\\"false\\\"})\\n    )\\n)\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum by (pod) (\\n    rate(container_network_transmit_bytes_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$__rate_interval])\\n  * on (cluster,namespace,pod) group_left ()\\n    topk by (cluster,namespace,pod) (\\n      1,\\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\\\"false\\\"})\\n    )\\n)\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum by (pod) (\\n    rate(container_network_receive_packets_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$__rate_interval])\\n  * on (cluster,namespace,pod) group_left ()\\n    topk by (cluster,namespace,pod) (\\n      1,\\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\\\"false\\\"})\\n    )\\n)\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum by (pod) (\\n    rate(container_network_transmit_packets_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$__rate_interval])\\n  * on (cluster,namespace,pod) group_left ()\\n    topk by (cluster,namespace,pod) (\\n      1,\\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\\\"false\\\"})\\n    )\\n)\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum by (pod) (\\n    rate(container_network_receive_packets_dropped_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$__rate_interval])\\n  * on (cluster,namespace,pod) group_left ()\\n    topk by (cluster,namespace,pod) (\\n      1,\\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\\\"false\\\"})\\n    )\\n)\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum by (pod) (\\n    rate(container_network_transmit_packets_dropped_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$__rate_interval])\\n  * on (cluster,namespace,pod) group_left ()\\n    topk by (cluster,namespace,pod) (\\n      1,\\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\\\"false\\\"})\\n    )\\n)\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                }\n            ],\n            \"title\": \"Current Network Usage\",\n            \"transformations\": [\n                {\n                    \"id\": \"joinByField\",\n                    \"options\": {\n                        \"byField\": \"pod\",\n                        \"mode\": \"outer\"\n                    }\n                },\n                {\n                    \"id\": \"organize\",\n                    \"options\": {\n                        \"excludeByName\": {\n                            \"Time\": true,\n                            \"Time 1\": true,\n                            \"Time 2\": true,\n                            \"Time 3\": true,\n                            \"Time 4\": true,\n                            \"Time 5\": true,\n                            \"Time 6\": true\n                        },\n                        \"indexByName\": {\n                            \"Time 1\": 0,\n                            \"Time 2\": 1,\n                            \"Time 3\": 2,\n                            \"Time 4\": 3,\n                            \"Time 5\": 4,\n                            \"Time 6\": 5,\n                            \"Value #A\": 7,\n                            \"Value #B\": 8,\n                            \"Value #C\": 9,\n                            \"Value #D\": 10,\n                            \"Value #E\": 11,\n                            \"Value #F\": 12,\n                            \"pod\": 6\n                        },\n                        \"renameByName\": {\n                            \"Value #A\": \"Current Receive Bandwidth\",\n                            \"Value #B\": \"Current Transmit Bandwidth\",\n                            \"Value #C\": \"Rate of Received Packets\",\n                            \"Value #D\": \"Rate of Transmitted Packets\",\n                            \"Value #E\": \"Rate of Received Packets Dropped\",\n                            \"Value #F\": \"Rate of Transmitted Packets Dropped\",\n                            \"pod\": \"Pod\"\n                        }\n                    }\n                }\n            ],\n            \"type\": \"table\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"showPoints\": \"never\"\n                    },\n                    \"unit\": \"binBps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 18\n            },\n            \"id\": 4,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum by (pod) (\\n    rate(container_network_receive_bytes_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$__rate_interval])\\n  * on (cluster,namespace,pod) group_left ()\\n    topk by (cluster,namespace,pod) (\\n      1,\\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\\\"false\\\"})\\n    )\\n)\\n\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Receive Bandwidth\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"showPoints\": \"never\"\n                    },\n                    \"unit\": \"binBps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 18\n            },\n            \"id\": 5,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum by (pod) (\\n    rate(container_network_transmit_bytes_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$__rate_interval])\\n  * on (cluster,namespace,pod) group_left ()\\n    topk by (cluster,namespace,pod) (\\n      1,\\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\\\"false\\\"})\\n    )\\n)\\n\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Transmit Bandwidth\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"showPoints\": \"never\"\n                    },\n                    \"unit\": \"pps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 27\n            },\n            \"id\": 6,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum by (pod) (\\n    rate(container_network_receive_packets_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$__rate_interval])\\n  * on (cluster,namespace,pod) group_left ()\\n    topk by (cluster,namespace,pod) (\\n      1,\\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\\\"false\\\"})\\n    )\\n)\\n\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Rate of Received Packets\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"showPoints\": \"never\"\n                    },\n                    \"unit\": \"pps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 27\n            },\n            \"id\": 7,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum by (pod) (\\n    rate(container_network_transmit_packets_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$__rate_interval])\\n  * on (cluster,namespace,pod) group_left ()\\n    topk by (cluster,namespace,pod) (\\n      1,\\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\\\"false\\\"})\\n    )\\n)\\n\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Rate of Transmitted Packets\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"showPoints\": \"never\"\n                    },\n                    \"unit\": \"pps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 36\n            },\n            \"id\": 8,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum by (pod) (\\n    rate(container_network_receive_packets_dropped_total{cluster=\\\"$cluster\\\",namespace!=\\\"\\\"}[$__rate_interval])\\n  * on (cluster,namespace,pod) group_left ()\\n    topk by (cluster,namespace,pod) (\\n      1,\\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\\\"false\\\"})\\n    )\\n)\\n\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Rate of Received Packets Dropped\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"showPoints\": \"never\"\n                    },\n                    \"unit\": \"pps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 36\n            },\n            \"id\": 9,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum by (pod) (\\n    rate(container_network_transmit_packets_dropped_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$__rate_interval])\\n  * on (cluster,namespace,pod) group_left ()\\n    topk by (cluster,namespace,pod) (\\n      1,\\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\\\"false\\\"})\\n    )\\n)\\n\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Rate of Transmitted Packets Dropped\",\n            \"type\": \"timeseries\"\n        }\n    ],\n    \"refresh\": \"10s\",\n    \"schemaVersion\": 39,\n    \"tags\": [\n        \"kubernetes-mixin\"\n    ],\n    \"templating\": {\n        \"list\": [\n            {\n                \"current\": {\n                    \"selected\": true,\n                    \"text\": \"default\",\n                    \"value\": \"default\"\n                },\n                \"hide\": 0,\n                \"label\": \"Data source\",\n                \"name\": \"datasource\",\n                \"query\": \"prometheus\",\n                \"regex\": \"\",\n                \"type\": \"datasource\"\n            },\n            {\n                \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"${datasource}\"\n                },\n                \"hide\": 0,\n                \"label\": \"cluster\",\n                \"name\": \"cluster\",\n                \"query\": \"label_values(up{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\"}, cluster)\",\n                \"refresh\": 2,\n                \"sort\": 1,\n                \"type\": \"query\"\n            },\n            {\n                \"allValue\": \".+\",\n                \"current\": {\n                    \"selected\": false,\n                    \"text\": \"kube-system\",\n                    \"value\": \"kube-system\"\n                },\n                \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"${datasource}\"\n                },\n                \"hide\": 0,\n                \"includeAll\": true,\n                \"label\": \"namespace\",\n                \"name\": \"namespace\",\n                \"query\": \"label_values(container_network_receive_packets_total{cluster=\\\"$cluster\\\"}, namespace)\",\n                \"refresh\": 2,\n                \"sort\": 1,\n                \"type\": \"query\"\n            }\n        ]\n    },\n    \"time\": {\n        \"from\": \"now-1h\",\n        \"to\": \"now\"\n    },\n    \"timezone\": \"UTC\",\n    \"title\": \"Kubernetes / Networking / Namespace (Pods)\",\n    \"uid\": \"8b7a8b326d7a6f1f04244066368c67af\"\n}"},"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"grafana","app.kubernetes.io/name":"grafana","app.kubernetes.io/part-of":"kube-prometheus","app.kubernetes.io/version":"11.3.1"},"name":"grafana-dashboard-namespace-by-pod","namespace":"monitoring"}}
    creationTimestamp: "2024-11-25T14:40:26Z"
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 11.3.1
    name: grafana-dashboard-namespace-by-pod
    namespace: monitoring
    resourceVersion: "3039625"
    uid: 684f9040-1754-4b25-900f-522d49157957
- apiVersion: v1
  data:
    namespace-by-workload.json: |-
      {
          "editable": false,
          "links": [
              {
                  "asDropdown": true,
                  "includeVars": true,
                  "keepTime": true,
                  "tags": [
                      "kubernetes-mixin"
                  ],
                  "targetBlank": false,
                  "title": "Kubernetes",
                  "type": "dashboards"
              }
          ],
          "panels": [
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "color": {
                              "fixedColor": "green",
                              "mode": "fixed"
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 0,
                      "y": 0
                  },
                  "id": 1,
                  "options": {
                      "displayMode": "basic",
                      "showUnfilled": false
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sort_desc(sum(rate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$__rate_interval])\n* on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n* on (cluster,namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Current Rate of Bytes Received",
                  "type": "bargauge"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "color": {
                              "fixedColor": "green",
                              "mode": "fixed"
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 12,
                      "y": 0
                  },
                  "id": 2,
                  "options": {
                      "displayMode": "basic",
                      "showUnfilled": false
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sort_desc(sum(rate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$__rate_interval])\n* on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n* on (cluster,namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Current Rate of Bytes Transmitted",
                  "type": "bargauge"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/Bytes/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "binBps"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/Packets/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "pps"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Workload"
                              },
                              "properties": [
                                  {
                                      "id": "links",
                                      "value": [
                                          {
                                              "title": "Drill down",
                                              "url": "/d/728bf77cc1166d2f3133bf25846876cc/kubernetes-networking-workload?${datasource:queryparam}&var-cluster=${cluster}&var-namespace=${namespace}&var-type=${__data.fields.Type}&var-workload=${__data.fields.Workload}"
                                          }
                                      ]
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 24,
                      "x": 0,
                      "y": 9
                  },
                  "id": 3,
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sort_desc(sum(rate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod) kube_pod_info{cluster=\"$cluster\",namespace=\"$namespace\",host_network=\"false\"}\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload, workload_type))\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sort_desc(sum(rate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod) kube_pod_info{cluster=\"$cluster\",namespace=\"$namespace\",host_network=\"false\"}\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload, workload_type))\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sort_desc(avg(rate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod) kube_pod_info{cluster=\"$cluster\",namespace=\"$namespace\",host_network=\"false\"}\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload, workload_type))\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sort_desc(avg(rate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod) kube_pod_info{cluster=\"$cluster\",namespace=\"$namespace\",host_network=\"false\"}\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload, workload_type))\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sort_desc(sum(rate(container_network_receive_packets_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod) kube_pod_info{cluster=\"$cluster\",namespace=\"$namespace\",host_network=\"false\"}\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload, workload_type))\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sort_desc(sum(rate(container_network_transmit_packets_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod) kube_pod_info{cluster=\"$cluster\",namespace=\"$namespace\",host_network=\"false\"}\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload, workload_type))\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sort_desc(sum(rate(container_network_receive_packets_dropped_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod) kube_pod_info{cluster=\"$cluster\",namespace=\"$namespace\",host_network=\"false\"}\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload, workload_type))\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sort_desc(sum(rate(container_network_transmit_packets_dropped_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod) kube_pod_info{cluster=\"$cluster\",namespace=\"$namespace\",host_network=\"false\"}\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload, workload_type))\n",
                          "format": "table",
                          "instant": true
                      }
                  ],
                  "title": "Current Status",
                  "transformations": [
                      {
                          "id": "joinByField",
                          "options": {
                              "byField": "workload",
                              "mode": "outer"
                          }
                      },
                      {
                          "id": "organize",
                          "options": {
                              "excludeByName": {
                                  "Time": true,
                                  "Time 1": true,
                                  "Time 2": true,
                                  "Time 3": true,
                                  "Time 4": true,
                                  "Time 5": true,
                                  "Time 6": true,
                                  "Time 7": true,
                                  "Time 8": true,
                                  "workload_type 2": true,
                                  "workload_type 3": true,
                                  "workload_type 4": true,
                                  "workload_type 5": true,
                                  "workload_type 6": true,
                                  "workload_type 7": true,
                                  "workload_type 8": true
                              },
                              "indexByName": {
                                  "Time 1": 0,
                                  "Time 2": 1,
                                  "Time 3": 2,
                                  "Time 4": 3,
                                  "Time 5": 4,
                                  "Time 6": 5,
                                  "Time 7": 6,
                                  "Time 8": 7,
                                  "Value #A": 10,
                                  "Value #B": 11,
                                  "Value #C": 12,
                                  "Value #D": 13,
                                  "Value #E": 14,
                                  "Value #F": 15,
                                  "Value #G": 16,
                                  "Value #H": 17,
                                  "workload": 8,
                                  "workload_type 1": 9,
                                  "workload_type 2": 18,
                                  "workload_type 3": 19,
                                  "workload_type 4": 20,
                                  "workload_type 5": 21,
                                  "workload_type 6": 22,
                                  "workload_type 7": 23,
                                  "workload_type 8": 24
                              },
                              "renameByName": {
                                  "Value #A": "Rx Bytes",
                                  "Value #B": "Tx Bytes",
                                  "Value #C": "Rx Bytes (Avg)",
                                  "Value #D": "Tx Bytes (Avg)",
                                  "Value #E": "Rx Packets",
                                  "Value #F": "Tx Packets",
                                  "Value #G": "Rx Packets Dropped",
                                  "Value #H": "Tx Packets Dropped",
                                  "workload": "Workload",
                                  "workload_type 1": "Type"
                              }
                          }
                      }
                  ],
                  "type": "table"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 0,
                      "y": 18
                  },
                  "id": 4,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sort_desc(sum(rate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$__rate_interval])\n* on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n* on (cluster,namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Receive Bandwidth",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 12,
                      "y": 18
                  },
                  "id": 5,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sort_desc(sum(rate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$__rate_interval])\n* on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n* on (cluster,namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Transmit Bandwidth",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 0,
                      "y": 27
                  },
                  "id": 6,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sort_desc(avg(rate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$__rate_interval])\n* on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n* on (cluster,namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Average Container Bandwidth by Workload: Received",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 12,
                      "y": 27
                  },
                  "id": 7,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sort_desc(avg(rate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$__rate_interval])\n* on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n* on (cluster,namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Average Container Bandwidth by Workload: Transmitted",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 0,
                      "y": 36
                  },
                  "id": 8,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sort_desc(sum(rate(container_network_receive_packets_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$__rate_interval])\n* on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n* on (cluster,namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Received Packets",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 12,
                      "y": 36
                  },
                  "id": 9,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sort_desc(sum(rate(container_network_transmit_packets_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$__rate_interval])\n* on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n* on (cluster,namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Transmitted Packets",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 0,
                      "y": 45
                  },
                  "id": 10,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sort_desc(sum(rate(container_network_receive_packets_dropped_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$__rate_interval])\n* on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n* on (cluster,namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Received Packets Dropped",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 12,
                      "y": 45
                  },
                  "id": 11,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sort_desc(sum(rate(container_network_transmit_packets_dropped_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$__rate_interval])\n* on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n* on (cluster,namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Transmitted Packets Dropped",
                  "type": "timeseries"
              }
          ],
          "refresh": "10s",
          "schemaVersion": 39,
          "tags": [
              "kubernetes-mixin"
          ],
          "templating": {
              "list": [
                  {
                      "current": {
                          "selected": true,
                          "text": "default",
                          "value": "default"
                      },
                      "hide": 0,
                      "label": "Data source",
                      "name": "datasource",
                      "query": "prometheus",
                      "regex": "",
                      "type": "datasource"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "cluster",
                      "name": "cluster",
                      "query": "label_values(up{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\"}, cluster)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  },
                  {
                      "current": {
                          "selected": false,
                          "text": "kube-system",
                          "value": "kube-system"
                      },
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "namespace",
                      "name": "namespace",
                      "query": "label_values(container_network_receive_packets_total{cluster=\"$cluster\"}, namespace)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "includeAll": true,
                      "label": "workload_type",
                      "name": "type",
                      "query": "label_values(namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\".+\"}, workload_type)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  }
              ]
          },
          "time": {
              "from": "now-1h",
              "to": "now"
          },
          "timezone": "UTC",
          "title": "Kubernetes / Networking / Namespace (Workload)",
          "uid": "bbb2a765a623ae38130206c7d94a160f"
      }
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"namespace-by-workload.json":"{\n    \"editable\": false,\n    \"links\": [\n        {\n            \"asDropdown\": true,\n            \"includeVars\": true,\n            \"keepTime\": true,\n            \"tags\": [\n                \"kubernetes-mixin\"\n            ],\n            \"targetBlank\": false,\n            \"title\": \"Kubernetes\",\n            \"type\": \"dashboards\"\n        }\n    ],\n    \"panels\": [\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"color\": {\n                        \"fixedColor\": \"green\",\n                        \"mode\": \"fixed\"\n                    },\n                    \"unit\": \"Bps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 0\n            },\n            \"id\": 1,\n            \"options\": {\n                \"displayMode\": \"basic\",\n                \"showUnfilled\": false\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sort_desc(sum(rate(container_network_receive_bytes_total{cluster=\\\"$cluster\\\",namespace=\\\"$namespace\\\"}[$__rate_interval])\\n* on (cluster,namespace,pod) group_left ()\\n    topk by (cluster,namespace,pod) (\\n      1,\\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\\\"false\\\"})\\n    )\\n* on (cluster,namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=\\\"$namespace\\\", workload=~\\\".+\\\", workload_type=~\\\"$type\\\"}) by (workload))\\n\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Current Rate of Bytes Received\",\n            \"type\": \"bargauge\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"color\": {\n                        \"fixedColor\": \"green\",\n                        \"mode\": \"fixed\"\n                    },\n                    \"unit\": \"Bps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 0\n            },\n            \"id\": 2,\n            \"options\": {\n                \"displayMode\": \"basic\",\n                \"showUnfilled\": false\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sort_desc(sum(rate(container_network_transmit_bytes_total{cluster=\\\"$cluster\\\",namespace=\\\"$namespace\\\"}[$__rate_interval])\\n* on (cluster,namespace,pod) group_left ()\\n    topk by (cluster,namespace,pod) (\\n      1,\\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\\\"false\\\"})\\n    )\\n* on (cluster,namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=\\\"$namespace\\\", workload=~\\\".+\\\", workload_type=~\\\"$type\\\"}) by (workload))\\n\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Current Rate of Bytes Transmitted\",\n            \"type\": \"bargauge\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"overrides\": [\n                    {\n                        \"matcher\": {\n                            \"id\": \"byRegexp\",\n                            \"options\": \"/Bytes/\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"unit\",\n                                \"value\": \"binBps\"\n                            }\n                        ]\n                    },\n                    {\n                        \"matcher\": {\n                            \"id\": \"byRegexp\",\n                            \"options\": \"/Packets/\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"unit\",\n                                \"value\": \"pps\"\n                            }\n                        ]\n                    },\n                    {\n                        \"matcher\": {\n                            \"id\": \"byName\",\n                            \"options\": \"Workload\"\n                        },\n                        \"properties\": [\n                            {\n                                \"id\": \"links\",\n                                \"value\": [\n                                    {\n                                        \"title\": \"Drill down\",\n                                        \"url\": \"/d/728bf77cc1166d2f3133bf25846876cc/kubernetes-networking-workload?${datasource:queryparam}\u0026var-cluster=${cluster}\u0026var-namespace=${namespace}\u0026var-type=${__data.fields.Type}\u0026var-workload=${__data.fields.Workload}\"\n                                    }\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            },\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 9\n            },\n            \"id\": 3,\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sort_desc(sum(rate(container_network_receive_bytes_total{cluster=\\\"$cluster\\\",namespace=\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod) kube_pod_info{cluster=\\\"$cluster\\\",namespace=\\\"$namespace\\\",host_network=\\\"false\\\"}\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=\\\"$namespace\\\", workload=~\\\".+\\\", workload_type=~\\\"$type\\\"}) by (workload, workload_type))\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sort_desc(sum(rate(container_network_transmit_bytes_total{cluster=\\\"$cluster\\\",namespace=\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod) kube_pod_info{cluster=\\\"$cluster\\\",namespace=\\\"$namespace\\\",host_network=\\\"false\\\"}\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=\\\"$namespace\\\", workload=~\\\".+\\\", workload_type=~\\\"$type\\\"}) by (workload, workload_type))\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sort_desc(avg(rate(container_network_receive_bytes_total{cluster=\\\"$cluster\\\",namespace=\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod) kube_pod_info{cluster=\\\"$cluster\\\",namespace=\\\"$namespace\\\",host_network=\\\"false\\\"}\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=\\\"$namespace\\\", workload=~\\\".+\\\", workload_type=~\\\"$type\\\"}) by (workload, workload_type))\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sort_desc(avg(rate(container_network_transmit_bytes_total{cluster=\\\"$cluster\\\",namespace=\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod) kube_pod_info{cluster=\\\"$cluster\\\",namespace=\\\"$namespace\\\",host_network=\\\"false\\\"}\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=\\\"$namespace\\\", workload=~\\\".+\\\", workload_type=~\\\"$type\\\"}) by (workload, workload_type))\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sort_desc(sum(rate(container_network_receive_packets_total{cluster=\\\"$cluster\\\",namespace=\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod) kube_pod_info{cluster=\\\"$cluster\\\",namespace=\\\"$namespace\\\",host_network=\\\"false\\\"}\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=\\\"$namespace\\\", workload=~\\\".+\\\", workload_type=~\\\"$type\\\"}) by (workload, workload_type))\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sort_desc(sum(rate(container_network_transmit_packets_total{cluster=\\\"$cluster\\\",namespace=\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod) kube_pod_info{cluster=\\\"$cluster\\\",namespace=\\\"$namespace\\\",host_network=\\\"false\\\"}\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=\\\"$namespace\\\", workload=~\\\".+\\\", workload_type=~\\\"$type\\\"}) by (workload, workload_type))\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sort_desc(sum(rate(container_network_receive_packets_dropped_total{cluster=\\\"$cluster\\\",namespace=\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod) kube_pod_info{cluster=\\\"$cluster\\\",namespace=\\\"$namespace\\\",host_network=\\\"false\\\"}\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=\\\"$namespace\\\", workload=~\\\".+\\\", workload_type=~\\\"$type\\\"}) by (workload, workload_type))\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sort_desc(sum(rate(container_network_transmit_packets_dropped_total{cluster=\\\"$cluster\\\",namespace=\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod) kube_pod_info{cluster=\\\"$cluster\\\",namespace=\\\"$namespace\\\",host_network=\\\"false\\\"}\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=\\\"$namespace\\\", workload=~\\\".+\\\", workload_type=~\\\"$type\\\"}) by (workload, workload_type))\\n\",\n                    \"format\": \"table\",\n                    \"instant\": true\n                }\n            ],\n            \"title\": \"Current Status\",\n            \"transformations\": [\n                {\n                    \"id\": \"joinByField\",\n                    \"options\": {\n                        \"byField\": \"workload\",\n                        \"mode\": \"outer\"\n                    }\n                },\n                {\n                    \"id\": \"organize\",\n                    \"options\": {\n                        \"excludeByName\": {\n                            \"Time\": true,\n                            \"Time 1\": true,\n                            \"Time 2\": true,\n                            \"Time 3\": true,\n                            \"Time 4\": true,\n                            \"Time 5\": true,\n                            \"Time 6\": true,\n                            \"Time 7\": true,\n                            \"Time 8\": true,\n                            \"workload_type 2\": true,\n                            \"workload_type 3\": true,\n                            \"workload_type 4\": true,\n                            \"workload_type 5\": true,\n                            \"workload_type 6\": true,\n                            \"workload_type 7\": true,\n                            \"workload_type 8\": true\n                        },\n                        \"indexByName\": {\n                            \"Time 1\": 0,\n                            \"Time 2\": 1,\n                            \"Time 3\": 2,\n                            \"Time 4\": 3,\n                            \"Time 5\": 4,\n                            \"Time 6\": 5,\n                            \"Time 7\": 6,\n                            \"Time 8\": 7,\n                            \"Value #A\": 10,\n                            \"Value #B\": 11,\n                            \"Value #C\": 12,\n                            \"Value #D\": 13,\n                            \"Value #E\": 14,\n                            \"Value #F\": 15,\n                            \"Value #G\": 16,\n                            \"Value #H\": 17,\n                            \"workload\": 8,\n                            \"workload_type 1\": 9,\n                            \"workload_type 2\": 18,\n                            \"workload_type 3\": 19,\n                            \"workload_type 4\": 20,\n                            \"workload_type 5\": 21,\n                            \"workload_type 6\": 22,\n                            \"workload_type 7\": 23,\n                            \"workload_type 8\": 24\n                        },\n                        \"renameByName\": {\n                            \"Value #A\": \"Rx Bytes\",\n                            \"Value #B\": \"Tx Bytes\",\n                            \"Value #C\": \"Rx Bytes (Avg)\",\n                            \"Value #D\": \"Tx Bytes (Avg)\",\n                            \"Value #E\": \"Rx Packets\",\n                            \"Value #F\": \"Tx Packets\",\n                            \"Value #G\": \"Rx Packets Dropped\",\n                            \"Value #H\": \"Tx Packets Dropped\",\n                            \"workload\": \"Workload\",\n                            \"workload_type 1\": \"Type\"\n                        }\n                    }\n                }\n            ],\n            \"type\": \"table\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"Bps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 18\n            },\n            \"id\": 4,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sort_desc(sum(rate(container_network_receive_bytes_total{cluster=\\\"$cluster\\\",namespace=\\\"$namespace\\\"}[$__rate_interval])\\n* on (cluster,namespace,pod) group_left ()\\n    topk by (cluster,namespace,pod) (\\n      1,\\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\\\"false\\\"})\\n    )\\n* on (cluster,namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=\\\"$namespace\\\", workload=~\\\".+\\\", workload_type=~\\\"$type\\\"}) by (workload))\\n\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Receive Bandwidth\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"Bps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 18\n            },\n            \"id\": 5,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sort_desc(sum(rate(container_network_transmit_bytes_total{cluster=\\\"$cluster\\\",namespace=\\\"$namespace\\\"}[$__rate_interval])\\n* on (cluster,namespace,pod) group_left ()\\n    topk by (cluster,namespace,pod) (\\n      1,\\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\\\"false\\\"})\\n    )\\n* on (cluster,namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=\\\"$namespace\\\", workload=~\\\".+\\\", workload_type=~\\\"$type\\\"}) by (workload))\\n\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Transmit Bandwidth\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"Bps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 27\n            },\n            \"id\": 6,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sort_desc(avg(rate(container_network_receive_bytes_total{cluster=\\\"$cluster\\\",namespace=\\\"$namespace\\\"}[$__rate_interval])\\n* on (cluster,namespace,pod) group_left ()\\n    topk by (cluster,namespace,pod) (\\n      1,\\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\\\"false\\\"})\\n    )\\n* on (cluster,namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=\\\"$namespace\\\", workload=~\\\".+\\\", workload_type=~\\\"$type\\\"}) by (workload))\\n\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Average Container Bandwidth by Workload: Received\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"Bps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 27\n            },\n            \"id\": 7,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sort_desc(avg(rate(container_network_transmit_bytes_total{cluster=\\\"$cluster\\\",namespace=\\\"$namespace\\\"}[$__rate_interval])\\n* on (cluster,namespace,pod) group_left ()\\n    topk by (cluster,namespace,pod) (\\n      1,\\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\\\"false\\\"})\\n    )\\n* on (cluster,namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=\\\"$namespace\\\", workload=~\\\".+\\\", workload_type=~\\\"$type\\\"}) by (workload))\\n\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Average Container Bandwidth by Workload: Transmitted\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"pps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 36\n            },\n            \"id\": 8,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sort_desc(sum(rate(container_network_receive_packets_total{cluster=\\\"$cluster\\\",namespace=\\\"$namespace\\\"}[$__rate_interval])\\n* on (cluster,namespace,pod) group_left ()\\n    topk by (cluster,namespace,pod) (\\n      1,\\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\\\"false\\\"})\\n    )\\n* on (cluster,namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=\\\"$namespace\\\", workload=~\\\".+\\\", workload_type=~\\\"$type\\\"}) by (workload))\\n\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Rate of Received Packets\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"pps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 36\n            },\n            \"id\": 9,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sort_desc(sum(rate(container_network_transmit_packets_total{cluster=\\\"$cluster\\\",namespace=\\\"$namespace\\\"}[$__rate_interval])\\n* on (cluster,namespace,pod) group_left ()\\n    topk by (cluster,namespace,pod) (\\n      1,\\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\\\"false\\\"})\\n    )\\n* on (cluster,namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=\\\"$namespace\\\", workload=~\\\".+\\\", workload_type=~\\\"$type\\\"}) by (workload))\\n\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Rate of Transmitted Packets\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"pps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 45\n            },\n            \"id\": 10,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sort_desc(sum(rate(container_network_receive_packets_dropped_total{cluster=\\\"$cluster\\\",namespace=\\\"$namespace\\\"}[$__rate_interval])\\n* on (cluster,namespace,pod) group_left ()\\n    topk by (cluster,namespace,pod) (\\n      1,\\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\\\"false\\\"})\\n    )\\n* on (cluster,namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=\\\"$namespace\\\", workload=~\\\".+\\\", workload_type=~\\\"$type\\\"}) by (workload))\\n\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Rate of Received Packets Dropped\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"pps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 45\n            },\n            \"id\": 11,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sort_desc(sum(rate(container_network_transmit_packets_dropped_total{cluster=\\\"$cluster\\\",namespace=\\\"$namespace\\\"}[$__rate_interval])\\n* on (cluster,namespace,pod) group_left ()\\n    topk by (cluster,namespace,pod) (\\n      1,\\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\\\"false\\\"})\\n    )\\n* on (cluster,namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=\\\"$namespace\\\", workload=~\\\".+\\\", workload_type=~\\\"$type\\\"}) by (workload))\\n\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Rate of Transmitted Packets Dropped\",\n            \"type\": \"timeseries\"\n        }\n    ],\n    \"refresh\": \"10s\",\n    \"schemaVersion\": 39,\n    \"tags\": [\n        \"kubernetes-mixin\"\n    ],\n    \"templating\": {\n        \"list\": [\n            {\n                \"current\": {\n                    \"selected\": true,\n                    \"text\": \"default\",\n                    \"value\": \"default\"\n                },\n                \"hide\": 0,\n                \"label\": \"Data source\",\n                \"name\": \"datasource\",\n                \"query\": \"prometheus\",\n                \"regex\": \"\",\n                \"type\": \"datasource\"\n            },\n            {\n                \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"${datasource}\"\n                },\n                \"hide\": 0,\n                \"label\": \"cluster\",\n                \"name\": \"cluster\",\n                \"query\": \"label_values(up{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\"}, cluster)\",\n                \"refresh\": 2,\n                \"sort\": 1,\n                \"type\": \"query\"\n            },\n            {\n                \"current\": {\n                    \"selected\": false,\n                    \"text\": \"kube-system\",\n                    \"value\": \"kube-system\"\n                },\n                \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"${datasource}\"\n                },\n                \"hide\": 0,\n                \"label\": \"namespace\",\n                \"name\": \"namespace\",\n                \"query\": \"label_values(container_network_receive_packets_total{cluster=\\\"$cluster\\\"}, namespace)\",\n                \"refresh\": 2,\n                \"sort\": 1,\n                \"type\": \"query\"\n            },\n            {\n                \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"${datasource}\"\n                },\n                \"hide\": 0,\n                \"includeAll\": true,\n                \"label\": \"workload_type\",\n                \"name\": \"type\",\n                \"query\": \"label_values(namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=~\\\".+\\\"}, workload_type)\",\n                \"refresh\": 2,\n                \"sort\": 1,\n                \"type\": \"query\"\n            }\n        ]\n    },\n    \"time\": {\n        \"from\": \"now-1h\",\n        \"to\": \"now\"\n    },\n    \"timezone\": \"UTC\",\n    \"title\": \"Kubernetes / Networking / Namespace (Workload)\",\n    \"uid\": \"bbb2a765a623ae38130206c7d94a160f\"\n}"},"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"grafana","app.kubernetes.io/name":"grafana","app.kubernetes.io/part-of":"kube-prometheus","app.kubernetes.io/version":"11.3.1"},"name":"grafana-dashboard-namespace-by-workload","namespace":"monitoring"}}
    creationTimestamp: "2024-11-25T14:40:26Z"
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 11.3.1
    name: grafana-dashboard-namespace-by-workload
    namespace: monitoring
    resourceVersion: "3039626"
    uid: ba16377c-f23c-4cb4-b4f5-94628e4abe15
- apiVersion: v1
  data:
    node-cluster-rsrc-use.json: |-
      {
          "__inputs": [

          ],
          "__requires": [

          ],
          "annotations": {
              "list": [

              ]
          },
          "editable": false,
          "gnetId": null,
          "graphTooltip": 1,
          "hideControls": false,
          "id": null,
          "links": [

          ],
          "refresh": "30s",
          "rows": [
              {
                  "collapse": false,
                  "collapsed": false,
                  "panels": [
                      {
                          "aliasColors": {

                          },
                          "bars": false,
                          "dashLength": 10,
                          "dashes": false,
                          "datasource": "$datasource",
                          "fill": 10,
                          "fillGradient": 0,
                          "gridPos": {

                          },
                          "id": 2,
                          "legend": {
                              "alignAsTable": false,
                              "avg": false,
                              "current": false,
                              "max": false,
                              "min": false,
                              "rightSide": false,
                              "show": false,
                              "sideWidth": null,
                              "total": false,
                              "values": false
                          },
                          "lines": true,
                          "linewidth": 1,
                          "links": [

                          ],
                          "nullPointMode": "null",
                          "percentage": false,
                          "pointradius": 5,
                          "points": false,
                          "renderer": "flot",
                          "repeat": null,
                          "seriesOverrides": [

                          ],
                          "spaceLength": 10,
                          "span": 6,
                          "stack": true,
                          "steppedLine": false,
                          "targets": [
                              {
                                  "expr": "((\n  instance:node_cpu_utilisation:rate5m{job=\"node-exporter\", cluster=\"$cluster\"}\n  *\n  instance:node_num_cpu:sum{job=\"node-exporter\", cluster=\"$cluster\"}\n) != 0 )\n/ scalar(sum(instance:node_num_cpu:sum{job=\"node-exporter\", cluster=\"$cluster\"}))\n",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": "{{ instance }}",
                                  "refId": "A"
                              }
                          ],
                          "thresholds": [

                          ],
                          "timeFrom": null,
                          "timeShift": null,
                          "title": "CPU Utilisation",
                          "tooltip": {
                              "shared": true,
                              "sort": 2,
                              "value_type": "individual"
                          },
                          "type": "graph",
                          "xaxis": {
                              "buckets": null,
                              "mode": "time",
                              "name": null,
                              "show": true,
                              "values": [

                              ]
                          },
                          "yaxes": [
                              {
                                  "format": "percentunit",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              },
                              {
                                  "format": "percentunit",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              }
                          ]
                      },
                      {
                          "aliasColors": {

                          },
                          "bars": false,
                          "dashLength": 10,
                          "dashes": false,
                          "datasource": "$datasource",
                          "fill": 10,
                          "fillGradient": 0,
                          "gridPos": {

                          },
                          "id": 3,
                          "legend": {
                              "alignAsTable": false,
                              "avg": false,
                              "current": false,
                              "max": false,
                              "min": false,
                              "rightSide": false,
                              "show": false,
                              "sideWidth": null,
                              "total": false,
                              "values": false
                          },
                          "lines": true,
                          "linewidth": 1,
                          "links": [

                          ],
                          "nullPointMode": "null",
                          "percentage": false,
                          "pointradius": 5,
                          "points": false,
                          "renderer": "flot",
                          "repeat": null,
                          "seriesOverrides": [

                          ],
                          "spaceLength": 10,
                          "span": 6,
                          "stack": true,
                          "steppedLine": false,
                          "targets": [
                              {
                                  "expr": "(\n  instance:node_load1_per_cpu:ratio{job=\"node-exporter\", cluster=\"$cluster\"}\n  / scalar(count(instance:node_load1_per_cpu:ratio{job=\"node-exporter\", cluster=\"$cluster\"}))\n)  != 0\n",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": "{{instance}}",
                                  "refId": "A"
                              }
                          ],
                          "thresholds": [

                          ],
                          "timeFrom": null,
                          "timeShift": null,
                          "title": "CPU Saturation (Load1 per CPU)",
                          "tooltip": {
                              "shared": true,
                              "sort": 2,
                              "value_type": "individual"
                          },
                          "type": "graph",
                          "xaxis": {
                              "buckets": null,
                              "mode": "time",
                              "name": null,
                              "show": true,
                              "values": [

                              ]
                          },
                          "yaxes": [
                              {
                                  "format": "percentunit",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              },
                              {
                                  "format": "percentunit",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              }
                          ]
                      }
                  ],
                  "repeat": null,
                  "repeatIteration": null,
                  "repeatRowId": null,
                  "showTitle": true,
                  "title": "CPU",
                  "titleSize": "h6",
                  "type": "row"
              },
              {
                  "collapse": false,
                  "collapsed": false,
                  "panels": [
                      {
                          "aliasColors": {

                          },
                          "bars": false,
                          "dashLength": 10,
                          "dashes": false,
                          "datasource": "$datasource",
                          "fill": 10,
                          "fillGradient": 0,
                          "gridPos": {

                          },
                          "id": 4,
                          "legend": {
                              "alignAsTable": false,
                              "avg": false,
                              "current": false,
                              "max": false,
                              "min": false,
                              "rightSide": false,
                              "show": false,
                              "sideWidth": null,
                              "total": false,
                              "values": false
                          },
                          "lines": true,
                          "linewidth": 1,
                          "links": [

                          ],
                          "nullPointMode": "null",
                          "percentage": false,
                          "pointradius": 5,
                          "points": false,
                          "renderer": "flot",
                          "repeat": null,
                          "seriesOverrides": [

                          ],
                          "spaceLength": 10,
                          "span": 6,
                          "stack": true,
                          "steppedLine": false,
                          "targets": [
                              {
                                  "expr": "(\n  instance:node_memory_utilisation:ratio{job=\"node-exporter\", cluster=\"$cluster\"}\n  / scalar(count(instance:node_memory_utilisation:ratio{job=\"node-exporter\", cluster=\"$cluster\"}))\n) != 0\n",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": "{{instance}}",
                                  "refId": "A"
                              }
                          ],
                          "thresholds": [

                          ],
                          "timeFrom": null,
                          "timeShift": null,
                          "title": "Memory Utilisation",
                          "tooltip": {
                              "shared": true,
                              "sort": 2,
                              "value_type": "individual"
                          },
                          "type": "graph",
                          "xaxis": {
                              "buckets": null,
                              "mode": "time",
                              "name": null,
                              "show": true,
                              "values": [

                              ]
                          },
                          "yaxes": [
                              {
                                  "format": "percentunit",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              },
                              {
                                  "format": "percentunit",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              }
                          ]
                      },
                      {
                          "aliasColors": {

                          },
                          "bars": false,
                          "dashLength": 10,
                          "dashes": false,
                          "datasource": "$datasource",
                          "fill": 10,
                          "fillGradient": 0,
                          "gridPos": {

                          },
                          "id": 5,
                          "legend": {
                              "alignAsTable": false,
                              "avg": false,
                              "current": false,
                              "max": false,
                              "min": false,
                              "rightSide": false,
                              "show": false,
                              "sideWidth": null,
                              "total": false,
                              "values": false
                          },
                          "lines": true,
                          "linewidth": 1,
                          "links": [

                          ],
                          "nullPointMode": "null",
                          "percentage": false,
                          "pointradius": 5,
                          "points": false,
                          "renderer": "flot",
                          "repeat": null,
                          "seriesOverrides": [

                          ],
                          "spaceLength": 10,
                          "span": 6,
                          "stack": true,
                          "steppedLine": false,
                          "targets": [
                              {
                                  "expr": "instance:node_vmstat_pgmajfault:rate5m{job=\"node-exporter\", cluster=\"$cluster\"}",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": "{{instance}}",
                                  "refId": "A"
                              }
                          ],
                          "thresholds": [

                          ],
                          "timeFrom": null,
                          "timeShift": null,
                          "title": "Memory Saturation (Major Page Faults)",
                          "tooltip": {
                              "shared": true,
                              "sort": 2,
                              "value_type": "individual"
                          },
                          "type": "graph",
                          "xaxis": {
                              "buckets": null,
                              "mode": "time",
                              "name": null,
                              "show": true,
                              "values": [

                              ]
                          },
                          "yaxes": [
                              {
                                  "format": "rds",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              },
                              {
                                  "format": "rds",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              }
                          ]
                      }
                  ],
                  "repeat": null,
                  "repeatIteration": null,
                  "repeatRowId": null,
                  "showTitle": true,
                  "title": "Memory",
                  "titleSize": "h6",
                  "type": "row"
              },
              {
                  "collapse": false,
                  "collapsed": false,
                  "panels": [
                      {
                          "aliasColors": {

                          },
                          "bars": false,
                          "dashLength": 10,
                          "dashes": false,
                          "datasource": "$datasource",
                          "fill": 10,
                          "fillGradient": 0,
                          "gridPos": {

                          },
                          "id": 6,
                          "legend": {
                              "alignAsTable": false,
                              "avg": false,
                              "current": false,
                              "max": false,
                              "min": false,
                              "rightSide": false,
                              "show": false,
                              "sideWidth": null,
                              "total": false,
                              "values": false
                          },
                          "lines": true,
                          "linewidth": 1,
                          "links": [

                          ],
                          "nullPointMode": "null",
                          "percentage": false,
                          "pointradius": 5,
                          "points": false,
                          "renderer": "flot",
                          "repeat": null,
                          "seriesOverrides": [
                              {
                                  "alias": "/Receive/",
                                  "stack": "A"
                              },
                              {
                                  "alias": "/Transmit/",
                                  "stack": "B",
                                  "transform": "negative-Y"
                              }
                          ],
                          "spaceLength": 10,
                          "span": 6,
                          "stack": true,
                          "steppedLine": false,
                          "targets": [
                              {
                                  "expr": "instance:node_network_receive_bytes_excluding_lo:rate5m{job=\"node-exporter\", cluster=\"$cluster\"} != 0",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": "{{instance}} Receive",
                                  "refId": "A"
                              },
                              {
                                  "expr": "instance:node_network_transmit_bytes_excluding_lo:rate5m{job=\"node-exporter\", cluster=\"$cluster\"} != 0",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": "{{instance}} Transmit",
                                  "refId": "B"
                              }
                          ],
                          "thresholds": [

                          ],
                          "timeFrom": null,
                          "timeShift": null,
                          "title": "Network Utilisation (Bytes Receive/Transmit)",
                          "tooltip": {
                              "shared": true,
                              "sort": 2,
                              "value_type": "individual"
                          },
                          "type": "graph",
                          "xaxis": {
                              "buckets": null,
                              "mode": "time",
                              "name": null,
                              "show": true,
                              "values": [

                              ]
                          },
                          "yaxes": [
                              {
                                  "format": "Bps",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              },
                              {
                                  "format": "Bps",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              }
                          ]
                      },
                      {
                          "aliasColors": {

                          },
                          "bars": false,
                          "dashLength": 10,
                          "dashes": false,
                          "datasource": "$datasource",
                          "fill": 10,
                          "fillGradient": 0,
                          "gridPos": {

                          },
                          "id": 7,
                          "legend": {
                              "alignAsTable": false,
                              "avg": false,
                              "current": false,
                              "max": false,
                              "min": false,
                              "rightSide": false,
                              "show": false,
                              "sideWidth": null,
                              "total": false,
                              "values": false
                          },
                          "lines": true,
                          "linewidth": 1,
                          "links": [

                          ],
                          "nullPointMode": "null",
                          "percentage": false,
                          "pointradius": 5,
                          "points": false,
                          "renderer": "flot",
                          "repeat": null,
                          "seriesOverrides": [
                              {
                                  "alias": "/ Receive/",
                                  "stack": "A"
                              },
                              {
                                  "alias": "/ Transmit/",
                                  "stack": "B",
                                  "transform": "negative-Y"
                              }
                          ],
                          "spaceLength": 10,
                          "span": 6,
                          "stack": true,
                          "steppedLine": false,
                          "targets": [
                              {
                                  "expr": "instance:node_network_receive_drop_excluding_lo:rate5m{job=\"node-exporter\", cluster=\"$cluster\"} != 0",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": "{{instance}} Receive",
                                  "refId": "A"
                              },
                              {
                                  "expr": "instance:node_network_transmit_drop_excluding_lo:rate5m{job=\"node-exporter\", cluster=\"$cluster\"} != 0",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": "{{instance}} Transmit",
                                  "refId": "B"
                              }
                          ],
                          "thresholds": [

                          ],
                          "timeFrom": null,
                          "timeShift": null,
                          "title": "Network Saturation (Drops Receive/Transmit)",
                          "tooltip": {
                              "shared": true,
                              "sort": 2,
                              "value_type": "individual"
                          },
                          "type": "graph",
                          "xaxis": {
                              "buckets": null,
                              "mode": "time",
                              "name": null,
                              "show": true,
                              "values": [

                              ]
                          },
                          "yaxes": [
                              {
                                  "format": "Bps",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              },
                              {
                                  "format": "Bps",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              }
                          ]
                      }
                  ],
                  "repeat": null,
                  "repeatIteration": null,
                  "repeatRowId": null,
                  "showTitle": true,
                  "title": "Network",
                  "titleSize": "h6",
                  "type": "row"
              },
              {
                  "collapse": false,
                  "collapsed": false,
                  "panels": [
                      {
                          "aliasColors": {

                          },
                          "bars": false,
                          "dashLength": 10,
                          "dashes": false,
                          "datasource": "$datasource",
                          "fill": 10,
                          "fillGradient": 0,
                          "gridPos": {

                          },
                          "id": 8,
                          "legend": {
                              "alignAsTable": false,
                              "avg": false,
                              "current": false,
                              "max": false,
                              "min": false,
                              "rightSide": false,
                              "show": false,
                              "sideWidth": null,
                              "total": false,
                              "values": false
                          },
                          "lines": true,
                          "linewidth": 1,
                          "links": [

                          ],
                          "nullPointMode": "null",
                          "percentage": false,
                          "pointradius": 5,
                          "points": false,
                          "renderer": "flot",
                          "repeat": null,
                          "seriesOverrides": [

                          ],
                          "spaceLength": 10,
                          "span": 6,
                          "stack": true,
                          "steppedLine": false,
                          "targets": [
                              {
                                  "expr": "(\n  instance_device:node_disk_io_time_seconds:rate5m{job=\"node-exporter\", cluster=\"$cluster\"}\n  / scalar(count(instance_device:node_disk_io_time_seconds:rate5m{job=\"node-exporter\", cluster=\"$cluster\"}))\n) != 0\n",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": "{{instance}} {{device}}",
                                  "refId": "A"
                              }
                          ],
                          "thresholds": [

                          ],
                          "timeFrom": null,
                          "timeShift": null,
                          "title": "Disk IO Utilisation",
                          "tooltip": {
                              "shared": true,
                              "sort": 2,
                              "value_type": "individual"
                          },
                          "type": "graph",
                          "xaxis": {
                              "buckets": null,
                              "mode": "time",
                              "name": null,
                              "show": true,
                              "values": [

                              ]
                          },
                          "yaxes": [
                              {
                                  "format": "percentunit",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              },
                              {
                                  "format": "percentunit",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              }
                          ]
                      },
                      {
                          "aliasColors": {

                          },
                          "bars": false,
                          "dashLength": 10,
                          "dashes": false,
                          "datasource": "$datasource",
                          "fill": 10,
                          "fillGradient": 0,
                          "gridPos": {

                          },
                          "id": 9,
                          "legend": {
                              "alignAsTable": false,
                              "avg": false,
                              "current": false,
                              "max": false,
                              "min": false,
                              "rightSide": false,
                              "show": false,
                              "sideWidth": null,
                              "total": false,
                              "values": false
                          },
                          "lines": true,
                          "linewidth": 1,
                          "links": [

                          ],
                          "nullPointMode": "null",
                          "percentage": false,
                          "pointradius": 5,
                          "points": false,
                          "renderer": "flot",
                          "repeat": null,
                          "seriesOverrides": [

                          ],
                          "spaceLength": 10,
                          "span": 6,
                          "stack": true,
                          "steppedLine": false,
                          "targets": [
                              {
                                  "expr": "(\n  instance_device:node_disk_io_time_weighted_seconds:rate5m{job=\"node-exporter\", cluster=\"$cluster\"}\n  / scalar(count(instance_device:node_disk_io_time_weighted_seconds:rate5m{job=\"node-exporter\", cluster=\"$cluster\"}))\n) != 0\n",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": "{{instance}} {{device}}",
                                  "refId": "A"
                              }
                          ],
                          "thresholds": [

                          ],
                          "timeFrom": null,
                          "timeShift": null,
                          "title": "Disk IO Saturation",
                          "tooltip": {
                              "shared": true,
                              "sort": 2,
                              "value_type": "individual"
                          },
                          "type": "graph",
                          "xaxis": {
                              "buckets": null,
                              "mode": "time",
                              "name": null,
                              "show": true,
                              "values": [

                              ]
                          },
                          "yaxes": [
                              {
                                  "format": "percentunit",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              },
                              {
                                  "format": "percentunit",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              }
                          ]
                      }
                  ],
                  "repeat": null,
                  "repeatIteration": null,
                  "repeatRowId": null,
                  "showTitle": true,
                  "title": "Disk IO",
                  "titleSize": "h6",
                  "type": "row"
              },
              {
                  "collapse": false,
                  "collapsed": false,
                  "panels": [
                      {
                          "aliasColors": {

                          },
                          "bars": false,
                          "dashLength": 10,
                          "dashes": false,
                          "datasource": "$datasource",
                          "fill": 10,
                          "fillGradient": 0,
                          "gridPos": {

                          },
                          "id": 10,
                          "legend": {
                              "alignAsTable": false,
                              "avg": false,
                              "current": false,
                              "max": false,
                              "min": false,
                              "rightSide": false,
                              "show": false,
                              "sideWidth": null,
                              "total": false,
                              "values": false
                          },
                          "lines": true,
                          "linewidth": 1,
                          "links": [

                          ],
                          "nullPointMode": "null",
                          "percentage": false,
                          "pointradius": 5,
                          "points": false,
                          "renderer": "flot",
                          "repeat": null,
                          "seriesOverrides": [

                          ],
                          "spaceLength": 10,
                          "span": 12,
                          "stack": true,
                          "steppedLine": false,
                          "targets": [
                              {
                                  "expr": "sum without (device) (\n  max without (fstype, mountpoint) ((\n    node_filesystem_size_bytes{job=\"node-exporter\", fstype!=\"\", mountpoint!=\"\", cluster=\"$cluster\"}\n    -\n    node_filesystem_avail_bytes{job=\"node-exporter\", fstype!=\"\", mountpoint!=\"\", cluster=\"$cluster\"}\n  ) != 0)\n)\n/ scalar(sum(max without (fstype, mountpoint) (node_filesystem_size_bytes{job=\"node-exporter\", fstype!=\"\", mountpoint!=\"\", cluster=\"$cluster\"})))\n",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": "{{instance}}",
                                  "refId": "A"
                              }
                          ],
                          "thresholds": [

                          ],
                          "timeFrom": null,
                          "timeShift": null,
                          "title": "Disk Space Utilisation",
                          "tooltip": {
                              "shared": true,
                              "sort": 2,
                              "value_type": "individual"
                          },
                          "type": "graph",
                          "xaxis": {
                              "buckets": null,
                              "mode": "time",
                              "name": null,
                              "show": true,
                              "values": [

                              ]
                          },
                          "yaxes": [
                              {
                                  "format": "percentunit",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              },
                              {
                                  "format": "percentunit",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              }
                          ]
                      }
                  ],
                  "repeat": null,
                  "repeatIteration": null,
                  "repeatRowId": null,
                  "showTitle": true,
                  "title": "Disk Space",
                  "titleSize": "h6",
                  "type": "row"
              }
          ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
              "node-exporter-mixin"
          ],
          "templating": {
              "list": [
                  {
                      "current": {
                          "text": "default",
                          "value": "default"
                      },
                      "hide": 0,
                      "label": "Data Source",
                      "name": "datasource",
                      "options": [

                      ],
                      "query": "prometheus",
                      "refresh": 1,
                      "regex": "",
                      "type": "datasource"
                  },
                  {
                      "allValue": null,
                      "current": {
                          "text": "",
                          "value": ""
                      },
                      "datasource": "$datasource",
                      "hide": 2,
                      "includeAll": false,
                      "label": null,
                      "multi": false,
                      "name": "cluster",
                      "options": [

                      ],
                      "query": "label_values(node_time_seconds, cluster)",
                      "refresh": 2,
                      "regex": "",
                      "sort": 1,
                      "tagValuesQuery": "",
                      "tags": [

                      ],
                      "tagsQuery": "",
                      "type": "query",
                      "useTags": false
                  }
              ]
          },
          "time": {
              "from": "now-1h",
              "to": "now"
          },
          "timepicker": {
              "refresh_intervals": [
                  "5s",
                  "10s",
                  "30s",
                  "1m",
                  "5m",
                  "15m",
                  "30m",
                  "1h",
                  "2h",
                  "1d"
              ],
              "time_options": [
                  "5m",
                  "15m",
                  "1h",
                  "6h",
                  "12h",
                  "24h",
                  "2d",
                  "7d",
                  "30d"
              ]
          },
          "timezone": "utc",
          "title": "Node Exporter / USE Method / Cluster",
          "uid": "3e97d1d02672cdd0861f4c97c64f89b2",
          "version": 0
      }
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"node-cluster-rsrc-use.json":"{\n    \"__inputs\": [\n\n    ],\n    \"__requires\": [\n\n    ],\n    \"annotations\": {\n        \"list\": [\n\n        ]\n    },\n    \"editable\": false,\n    \"gnetId\": null,\n    \"graphTooltip\": 1,\n    \"hideControls\": false,\n    \"id\": null,\n    \"links\": [\n\n    ],\n    \"refresh\": \"30s\",\n    \"rows\": [\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 2,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": false,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"((\\n  instance:node_cpu_utilisation:rate5m{job=\\\"node-exporter\\\", cluster=\\\"$cluster\\\"}\\n  *\\n  instance:node_num_cpu:sum{job=\\\"node-exporter\\\", cluster=\\\"$cluster\\\"}\\n) != 0 )\\n/ scalar(sum(instance:node_num_cpu:sum{job=\\\"node-exporter\\\", cluster=\\\"$cluster\\\"}))\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{ instance }}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"CPU Utilisation\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 3,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": false,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"(\\n  instance:node_load1_per_cpu:ratio{job=\\\"node-exporter\\\", cluster=\\\"$cluster\\\"}\\n  / scalar(count(instance:node_load1_per_cpu:ratio{job=\\\"node-exporter\\\", cluster=\\\"$cluster\\\"}))\\n)  != 0\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{instance}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"CPU Saturation (Load1 per CPU)\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"CPU\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 4,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": false,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"(\\n  instance:node_memory_utilisation:ratio{job=\\\"node-exporter\\\", cluster=\\\"$cluster\\\"}\\n  / scalar(count(instance:node_memory_utilisation:ratio{job=\\\"node-exporter\\\", cluster=\\\"$cluster\\\"}))\\n) != 0\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{instance}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Memory Utilisation\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 5,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": false,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"instance:node_vmstat_pgmajfault:rate5m{job=\\\"node-exporter\\\", cluster=\\\"$cluster\\\"}\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{instance}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Memory Saturation (Major Page Faults)\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"rds\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"rds\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Memory\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 6,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": false,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n                        {\n                            \"alias\": \"/Receive/\",\n                            \"stack\": \"A\"\n                        },\n                        {\n                            \"alias\": \"/Transmit/\",\n                            \"stack\": \"B\",\n                            \"transform\": \"negative-Y\"\n                        }\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"instance:node_network_receive_bytes_excluding_lo:rate5m{job=\\\"node-exporter\\\", cluster=\\\"$cluster\\\"} != 0\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{instance}} Receive\",\n                            \"refId\": \"A\"\n                        },\n                        {\n                            \"expr\": \"instance:node_network_transmit_bytes_excluding_lo:rate5m{job=\\\"node-exporter\\\", cluster=\\\"$cluster\\\"} != 0\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{instance}} Transmit\",\n                            \"refId\": \"B\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Network Utilisation (Bytes Receive/Transmit)\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"Bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"Bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 7,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": false,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n                        {\n                            \"alias\": \"/ Receive/\",\n                            \"stack\": \"A\"\n                        },\n                        {\n                            \"alias\": \"/ Transmit/\",\n                            \"stack\": \"B\",\n                            \"transform\": \"negative-Y\"\n                        }\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"instance:node_network_receive_drop_excluding_lo:rate5m{job=\\\"node-exporter\\\", cluster=\\\"$cluster\\\"} != 0\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{instance}} Receive\",\n                            \"refId\": \"A\"\n                        },\n                        {\n                            \"expr\": \"instance:node_network_transmit_drop_excluding_lo:rate5m{job=\\\"node-exporter\\\", cluster=\\\"$cluster\\\"} != 0\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{instance}} Transmit\",\n                            \"refId\": \"B\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Network Saturation (Drops Receive/Transmit)\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"Bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"Bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Network\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 8,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": false,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"(\\n  instance_device:node_disk_io_time_seconds:rate5m{job=\\\"node-exporter\\\", cluster=\\\"$cluster\\\"}\\n  / scalar(count(instance_device:node_disk_io_time_seconds:rate5m{job=\\\"node-exporter\\\", cluster=\\\"$cluster\\\"}))\\n) != 0\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{instance}} {{device}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Disk IO Utilisation\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 9,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": false,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"(\\n  instance_device:node_disk_io_time_weighted_seconds:rate5m{job=\\\"node-exporter\\\", cluster=\\\"$cluster\\\"}\\n  / scalar(count(instance_device:node_disk_io_time_weighted_seconds:rate5m{job=\\\"node-exporter\\\", cluster=\\\"$cluster\\\"}))\\n) != 0\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{instance}} {{device}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Disk IO Saturation\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Disk IO\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 10,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": false,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum without (device) (\\n  max without (fstype, mountpoint) ((\\n    node_filesystem_size_bytes{job=\\\"node-exporter\\\", fstype!=\\\"\\\", mountpoint!=\\\"\\\", cluster=\\\"$cluster\\\"}\\n    -\\n    node_filesystem_avail_bytes{job=\\\"node-exporter\\\", fstype!=\\\"\\\", mountpoint!=\\\"\\\", cluster=\\\"$cluster\\\"}\\n  ) != 0)\\n)\\n/ scalar(sum(max without (fstype, mountpoint) (node_filesystem_size_bytes{job=\\\"node-exporter\\\", fstype!=\\\"\\\", mountpoint!=\\\"\\\", cluster=\\\"$cluster\\\"})))\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{instance}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Disk Space Utilisation\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Disk Space\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        }\n    ],\n    \"schemaVersion\": 14,\n    \"style\": \"dark\",\n    \"tags\": [\n        \"node-exporter-mixin\"\n    ],\n    \"templating\": {\n        \"list\": [\n            {\n                \"current\": {\n                    \"text\": \"default\",\n                    \"value\": \"default\"\n                },\n                \"hide\": 0,\n                \"label\": \"Data Source\",\n                \"name\": \"datasource\",\n                \"options\": [\n\n                ],\n                \"query\": \"prometheus\",\n                \"refresh\": 1,\n                \"regex\": \"\",\n                \"type\": \"datasource\"\n            },\n            {\n                \"allValue\": null,\n                \"current\": {\n                    \"text\": \"\",\n                    \"value\": \"\"\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 2,\n                \"includeAll\": false,\n                \"label\": null,\n                \"multi\": false,\n                \"name\": \"cluster\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(node_time_seconds, cluster)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"sort\": 1,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            }\n        ]\n    },\n    \"time\": {\n        \"from\": \"now-1h\",\n        \"to\": \"now\"\n    },\n    \"timepicker\": {\n        \"refresh_intervals\": [\n            \"5s\",\n            \"10s\",\n            \"30s\",\n            \"1m\",\n            \"5m\",\n            \"15m\",\n            \"30m\",\n            \"1h\",\n            \"2h\",\n            \"1d\"\n        ],\n        \"time_options\": [\n            \"5m\",\n            \"15m\",\n            \"1h\",\n            \"6h\",\n            \"12h\",\n            \"24h\",\n            \"2d\",\n            \"7d\",\n            \"30d\"\n        ]\n    },\n    \"timezone\": \"utc\",\n    \"title\": \"Node Exporter / USE Method / Cluster\",\n    \"uid\": \"3e97d1d02672cdd0861f4c97c64f89b2\",\n    \"version\": 0\n}"},"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"grafana","app.kubernetes.io/name":"grafana","app.kubernetes.io/part-of":"kube-prometheus","app.kubernetes.io/version":"11.3.1"},"name":"grafana-dashboard-node-cluster-rsrc-use","namespace":"monitoring"}}
    creationTimestamp: "2024-11-25T14:40:26Z"
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 11.3.1
    name: grafana-dashboard-node-cluster-rsrc-use
    namespace: monitoring
    resourceVersion: "3039627"
    uid: 2c865969-b092-4c2c-8720-fde0990e3db2
- apiVersion: v1
  data:
    node-rsrc-use.json: |-
      {
          "__inputs": [

          ],
          "__requires": [

          ],
          "annotations": {
              "list": [

              ]
          },
          "editable": false,
          "gnetId": null,
          "graphTooltip": 1,
          "hideControls": false,
          "id": null,
          "links": [

          ],
          "refresh": "30s",
          "rows": [
              {
                  "collapse": false,
                  "collapsed": false,
                  "panels": [
                      {
                          "aliasColors": {

                          },
                          "bars": false,
                          "dashLength": 10,
                          "dashes": false,
                          "datasource": "$datasource",
                          "fill": 10,
                          "fillGradient": 0,
                          "gridPos": {

                          },
                          "id": 2,
                          "legend": {
                              "alignAsTable": false,
                              "avg": false,
                              "current": false,
                              "max": false,
                              "min": false,
                              "rightSide": false,
                              "show": false,
                              "sideWidth": null,
                              "total": false,
                              "values": false
                          },
                          "lines": true,
                          "linewidth": 1,
                          "links": [

                          ],
                          "nullPointMode": "null",
                          "percentage": false,
                          "pointradius": 5,
                          "points": false,
                          "renderer": "flot",
                          "repeat": null,
                          "seriesOverrides": [

                          ],
                          "spaceLength": 10,
                          "span": 6,
                          "stack": true,
                          "steppedLine": false,
                          "targets": [
                              {
                                  "expr": "instance:node_cpu_utilisation:rate5m{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"} != 0",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": "Utilisation",
                                  "refId": "A"
                              }
                          ],
                          "thresholds": [

                          ],
                          "timeFrom": null,
                          "timeShift": null,
                          "title": "CPU Utilisation",
                          "tooltip": {
                              "shared": true,
                              "sort": 2,
                              "value_type": "individual"
                          },
                          "type": "graph",
                          "xaxis": {
                              "buckets": null,
                              "mode": "time",
                              "name": null,
                              "show": true,
                              "values": [

                              ]
                          },
                          "yaxes": [
                              {
                                  "format": "percentunit",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              },
                              {
                                  "format": "percentunit",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              }
                          ]
                      },
                      {
                          "aliasColors": {

                          },
                          "bars": false,
                          "dashLength": 10,
                          "dashes": false,
                          "datasource": "$datasource",
                          "fill": 10,
                          "fillGradient": 0,
                          "gridPos": {

                          },
                          "id": 3,
                          "legend": {
                              "alignAsTable": false,
                              "avg": false,
                              "current": false,
                              "max": false,
                              "min": false,
                              "rightSide": false,
                              "show": false,
                              "sideWidth": null,
                              "total": false,
                              "values": false
                          },
                          "lines": true,
                          "linewidth": 1,
                          "links": [

                          ],
                          "nullPointMode": "null",
                          "percentage": false,
                          "pointradius": 5,
                          "points": false,
                          "renderer": "flot",
                          "repeat": null,
                          "seriesOverrides": [

                          ],
                          "spaceLength": 10,
                          "span": 6,
                          "stack": true,
                          "steppedLine": false,
                          "targets": [
                              {
                                  "expr": "instance:node_load1_per_cpu:ratio{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"} != 0",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": "Saturation",
                                  "refId": "A"
                              }
                          ],
                          "thresholds": [

                          ],
                          "timeFrom": null,
                          "timeShift": null,
                          "title": "CPU Saturation (Load1 per CPU)",
                          "tooltip": {
                              "shared": true,
                              "sort": 2,
                              "value_type": "individual"
                          },
                          "type": "graph",
                          "xaxis": {
                              "buckets": null,
                              "mode": "time",
                              "name": null,
                              "show": true,
                              "values": [

                              ]
                          },
                          "yaxes": [
                              {
                                  "format": "percentunit",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              },
                              {
                                  "format": "percentunit",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              }
                          ]
                      }
                  ],
                  "repeat": null,
                  "repeatIteration": null,
                  "repeatRowId": null,
                  "showTitle": true,
                  "title": "CPU",
                  "titleSize": "h6",
                  "type": "row"
              },
              {
                  "collapse": false,
                  "collapsed": false,
                  "panels": [
                      {
                          "aliasColors": {

                          },
                          "bars": false,
                          "dashLength": 10,
                          "dashes": false,
                          "datasource": "$datasource",
                          "fill": 10,
                          "fillGradient": 0,
                          "gridPos": {

                          },
                          "id": 4,
                          "legend": {
                              "alignAsTable": false,
                              "avg": false,
                              "current": false,
                              "max": false,
                              "min": false,
                              "rightSide": false,
                              "show": false,
                              "sideWidth": null,
                              "total": false,
                              "values": false
                          },
                          "lines": true,
                          "linewidth": 1,
                          "links": [

                          ],
                          "nullPointMode": "null",
                          "percentage": false,
                          "pointradius": 5,
                          "points": false,
                          "renderer": "flot",
                          "repeat": null,
                          "seriesOverrides": [

                          ],
                          "spaceLength": 10,
                          "span": 6,
                          "stack": true,
                          "steppedLine": false,
                          "targets": [
                              {
                                  "expr": "instance:node_memory_utilisation:ratio{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"} != 0",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": "Utilisation",
                                  "refId": "A"
                              }
                          ],
                          "thresholds": [

                          ],
                          "timeFrom": null,
                          "timeShift": null,
                          "title": "Memory Utilisation",
                          "tooltip": {
                              "shared": true,
                              "sort": 2,
                              "value_type": "individual"
                          },
                          "type": "graph",
                          "xaxis": {
                              "buckets": null,
                              "mode": "time",
                              "name": null,
                              "show": true,
                              "values": [

                              ]
                          },
                          "yaxes": [
                              {
                                  "format": "percentunit",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              },
                              {
                                  "format": "percentunit",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              }
                          ]
                      },
                      {
                          "aliasColors": {

                          },
                          "bars": false,
                          "dashLength": 10,
                          "dashes": false,
                          "datasource": "$datasource",
                          "fill": 10,
                          "fillGradient": 0,
                          "gridPos": {

                          },
                          "id": 5,
                          "legend": {
                              "alignAsTable": false,
                              "avg": false,
                              "current": false,
                              "max": false,
                              "min": false,
                              "rightSide": false,
                              "show": false,
                              "sideWidth": null,
                              "total": false,
                              "values": false
                          },
                          "lines": true,
                          "linewidth": 1,
                          "links": [

                          ],
                          "nullPointMode": "null",
                          "percentage": false,
                          "pointradius": 5,
                          "points": false,
                          "renderer": "flot",
                          "repeat": null,
                          "seriesOverrides": [

                          ],
                          "spaceLength": 10,
                          "span": 6,
                          "stack": true,
                          "steppedLine": false,
                          "targets": [
                              {
                                  "expr": "instance:node_vmstat_pgmajfault:rate5m{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"} != 0",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": "Major page Faults",
                                  "refId": "A"
                              }
                          ],
                          "thresholds": [

                          ],
                          "timeFrom": null,
                          "timeShift": null,
                          "title": "Memory Saturation (Major Page Faults)",
                          "tooltip": {
                              "shared": true,
                              "sort": 2,
                              "value_type": "individual"
                          },
                          "type": "graph",
                          "xaxis": {
                              "buckets": null,
                              "mode": "time",
                              "name": null,
                              "show": true,
                              "values": [

                              ]
                          },
                          "yaxes": [
                              {
                                  "format": "rds",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              },
                              {
                                  "format": "rds",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              }
                          ]
                      }
                  ],
                  "repeat": null,
                  "repeatIteration": null,
                  "repeatRowId": null,
                  "showTitle": true,
                  "title": "Memory",
                  "titleSize": "h6",
                  "type": "row"
              },
              {
                  "collapse": false,
                  "collapsed": false,
                  "panels": [
                      {
                          "aliasColors": {

                          },
                          "bars": false,
                          "dashLength": 10,
                          "dashes": false,
                          "datasource": "$datasource",
                          "fill": 10,
                          "fillGradient": 0,
                          "gridPos": {

                          },
                          "id": 6,
                          "legend": {
                              "alignAsTable": false,
                              "avg": false,
                              "current": false,
                              "max": false,
                              "min": false,
                              "rightSide": false,
                              "show": false,
                              "sideWidth": null,
                              "total": false,
                              "values": false
                          },
                          "lines": true,
                          "linewidth": 1,
                          "links": [

                          ],
                          "nullPointMode": "null",
                          "percentage": false,
                          "pointradius": 5,
                          "points": false,
                          "renderer": "flot",
                          "repeat": null,
                          "seriesOverrides": [
                              {
                                  "alias": "/Receive/",
                                  "stack": "A"
                              },
                              {
                                  "alias": "/Transmit/",
                                  "stack": "B",
                                  "transform": "negative-Y"
                              }
                          ],
                          "spaceLength": 10,
                          "span": 6,
                          "stack": true,
                          "steppedLine": false,
                          "targets": [
                              {
                                  "expr": "instance:node_network_receive_bytes_excluding_lo:rate5m{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"} != 0",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": "Receive",
                                  "refId": "A"
                              },
                              {
                                  "expr": "instance:node_network_transmit_bytes_excluding_lo:rate5m{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"} != 0",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": "Transmit",
                                  "refId": "B"
                              }
                          ],
                          "thresholds": [

                          ],
                          "timeFrom": null,
                          "timeShift": null,
                          "title": "Network Utilisation (Bytes Receive/Transmit)",
                          "tooltip": {
                              "shared": true,
                              "sort": 2,
                              "value_type": "individual"
                          },
                          "type": "graph",
                          "xaxis": {
                              "buckets": null,
                              "mode": "time",
                              "name": null,
                              "show": true,
                              "values": [

                              ]
                          },
                          "yaxes": [
                              {
                                  "format": "Bps",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              },
                              {
                                  "format": "Bps",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              }
                          ]
                      },
                      {
                          "aliasColors": {

                          },
                          "bars": false,
                          "dashLength": 10,
                          "dashes": false,
                          "datasource": "$datasource",
                          "fill": 10,
                          "fillGradient": 0,
                          "gridPos": {

                          },
                          "id": 7,
                          "legend": {
                              "alignAsTable": false,
                              "avg": false,
                              "current": false,
                              "max": false,
                              "min": false,
                              "rightSide": false,
                              "show": false,
                              "sideWidth": null,
                              "total": false,
                              "values": false
                          },
                          "lines": true,
                          "linewidth": 1,
                          "links": [

                          ],
                          "nullPointMode": "null",
                          "percentage": false,
                          "pointradius": 5,
                          "points": false,
                          "renderer": "flot",
                          "repeat": null,
                          "seriesOverrides": [
                              {
                                  "alias": "/ Receive/",
                                  "stack": "A"
                              },
                              {
                                  "alias": "/ Transmit/",
                                  "stack": "B",
                                  "transform": "negative-Y"
                              }
                          ],
                          "spaceLength": 10,
                          "span": 6,
                          "stack": true,
                          "steppedLine": false,
                          "targets": [
                              {
                                  "expr": "instance:node_network_receive_drop_excluding_lo:rate5m{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"} != 0",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": "Receive",
                                  "refId": "A"
                              },
                              {
                                  "expr": "instance:node_network_transmit_drop_excluding_lo:rate5m{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"} != 0",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": "Transmit",
                                  "refId": "B"
                              }
                          ],
                          "thresholds": [

                          ],
                          "timeFrom": null,
                          "timeShift": null,
                          "title": "Network Saturation (Drops Receive/Transmit)",
                          "tooltip": {
                              "shared": true,
                              "sort": 2,
                              "value_type": "individual"
                          },
                          "type": "graph",
                          "xaxis": {
                              "buckets": null,
                              "mode": "time",
                              "name": null,
                              "show": true,
                              "values": [

                              ]
                          },
                          "yaxes": [
                              {
                                  "format": "Bps",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              },
                              {
                                  "format": "Bps",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              }
                          ]
                      }
                  ],
                  "repeat": null,
                  "repeatIteration": null,
                  "repeatRowId": null,
                  "showTitle": true,
                  "title": "Network",
                  "titleSize": "h6",
                  "type": "row"
              },
              {
                  "collapse": false,
                  "collapsed": false,
                  "panels": [
                      {
                          "aliasColors": {

                          },
                          "bars": false,
                          "dashLength": 10,
                          "dashes": false,
                          "datasource": "$datasource",
                          "fill": 10,
                          "fillGradient": 0,
                          "gridPos": {

                          },
                          "id": 8,
                          "legend": {
                              "alignAsTable": false,
                              "avg": false,
                              "current": false,
                              "max": false,
                              "min": false,
                              "rightSide": false,
                              "show": false,
                              "sideWidth": null,
                              "total": false,
                              "values": false
                          },
                          "lines": true,
                          "linewidth": 1,
                          "links": [

                          ],
                          "nullPointMode": "null",
                          "percentage": false,
                          "pointradius": 5,
                          "points": false,
                          "renderer": "flot",
                          "repeat": null,
                          "seriesOverrides": [

                          ],
                          "spaceLength": 10,
                          "span": 6,
                          "stack": true,
                          "steppedLine": false,
                          "targets": [
                              {
                                  "expr": "instance_device:node_disk_io_time_seconds:rate5m{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"} != 0",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": "{{device}}",
                                  "refId": "A"
                              }
                          ],
                          "thresholds": [

                          ],
                          "timeFrom": null,
                          "timeShift": null,
                          "title": "Disk IO Utilisation",
                          "tooltip": {
                              "shared": true,
                              "sort": 2,
                              "value_type": "individual"
                          },
                          "type": "graph",
                          "xaxis": {
                              "buckets": null,
                              "mode": "time",
                              "name": null,
                              "show": true,
                              "values": [

                              ]
                          },
                          "yaxes": [
                              {
                                  "format": "percentunit",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              },
                              {
                                  "format": "percentunit",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              }
                          ]
                      },
                      {
                          "aliasColors": {

                          },
                          "bars": false,
                          "dashLength": 10,
                          "dashes": false,
                          "datasource": "$datasource",
                          "fill": 10,
                          "fillGradient": 0,
                          "gridPos": {

                          },
                          "id": 9,
                          "legend": {
                              "alignAsTable": false,
                              "avg": false,
                              "current": false,
                              "max": false,
                              "min": false,
                              "rightSide": false,
                              "show": false,
                              "sideWidth": null,
                              "total": false,
                              "values": false
                          },
                          "lines": true,
                          "linewidth": 1,
                          "links": [

                          ],
                          "nullPointMode": "null",
                          "percentage": false,
                          "pointradius": 5,
                          "points": false,
                          "renderer": "flot",
                          "repeat": null,
                          "seriesOverrides": [

                          ],
                          "spaceLength": 10,
                          "span": 6,
                          "stack": true,
                          "steppedLine": false,
                          "targets": [
                              {
                                  "expr": "instance_device:node_disk_io_time_weighted_seconds:rate5m{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"} != 0",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": "{{device}}",
                                  "refId": "A"
                              }
                          ],
                          "thresholds": [

                          ],
                          "timeFrom": null,
                          "timeShift": null,
                          "title": "Disk IO Saturation",
                          "tooltip": {
                              "shared": true,
                              "sort": 2,
                              "value_type": "individual"
                          },
                          "type": "graph",
                          "xaxis": {
                              "buckets": null,
                              "mode": "time",
                              "name": null,
                              "show": true,
                              "values": [

                              ]
                          },
                          "yaxes": [
                              {
                                  "format": "percentunit",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              },
                              {
                                  "format": "percentunit",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              }
                          ]
                      }
                  ],
                  "repeat": null,
                  "repeatIteration": null,
                  "repeatRowId": null,
                  "showTitle": true,
                  "title": "Disk IO",
                  "titleSize": "h6",
                  "type": "row"
              },
              {
                  "collapse": false,
                  "collapsed": false,
                  "panels": [
                      {
                          "aliasColors": {

                          },
                          "bars": false,
                          "dashLength": 10,
                          "dashes": false,
                          "datasource": "$datasource",
                          "fill": 10,
                          "fillGradient": 0,
                          "gridPos": {

                          },
                          "id": 10,
                          "legend": {
                              "alignAsTable": false,
                              "avg": false,
                              "current": false,
                              "max": false,
                              "min": false,
                              "rightSide": false,
                              "show": false,
                              "sideWidth": null,
                              "total": false,
                              "values": false
                          },
                          "lines": true,
                          "linewidth": 1,
                          "links": [

                          ],
                          "nullPointMode": "null",
                          "percentage": false,
                          "pointradius": 5,
                          "points": false,
                          "renderer": "flot",
                          "repeat": null,
                          "seriesOverrides": [

                          ],
                          "spaceLength": 10,
                          "span": 12,
                          "stack": true,
                          "steppedLine": false,
                          "targets": [
                              {
                                  "expr": "sort_desc(1 -\n  (\n   max without (mountpoint, fstype) (node_filesystem_avail_bytes{job=\"node-exporter\", fstype!=\"\", instance=\"$instance\", cluster=\"$cluster\"})\n   /\n   max without (mountpoint, fstype) (node_filesystem_size_bytes{job=\"node-exporter\", fstype!=\"\", instance=\"$instance\", cluster=\"$cluster\"})\n  ) != 0\n)\n",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": "{{device}}",
                                  "refId": "A"
                              }
                          ],
                          "thresholds": [

                          ],
                          "timeFrom": null,
                          "timeShift": null,
                          "title": "Disk Space Utilisation",
                          "tooltip": {
                              "shared": true,
                              "sort": 2,
                              "value_type": "individual"
                          },
                          "type": "graph",
                          "xaxis": {
                              "buckets": null,
                              "mode": "time",
                              "name": null,
                              "show": true,
                              "values": [

                              ]
                          },
                          "yaxes": [
                              {
                                  "format": "percentunit",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              },
                              {
                                  "format": "percentunit",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              }
                          ]
                      }
                  ],
                  "repeat": null,
                  "repeatIteration": null,
                  "repeatRowId": null,
                  "showTitle": true,
                  "title": "Disk Space",
                  "titleSize": "h6",
                  "type": "row"
              }
          ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
              "node-exporter-mixin"
          ],
          "templating": {
              "list": [
                  {
                      "current": {
                          "text": "default",
                          "value": "default"
                      },
                      "hide": 0,
                      "label": "Data Source",
                      "name": "datasource",
                      "options": [

                      ],
                      "query": "prometheus",
                      "refresh": 1,
                      "regex": "",
                      "type": "datasource"
                  },
                  {
                      "allValue": null,
                      "current": {
                          "text": "",
                          "value": ""
                      },
                      "datasource": "$datasource",
                      "hide": 2,
                      "includeAll": false,
                      "label": null,
                      "multi": false,
                      "name": "cluster",
                      "options": [

                      ],
                      "query": "label_values(node_time_seconds, cluster)",
                      "refresh": 2,
                      "regex": "",
                      "sort": 1,
                      "tagValuesQuery": "",
                      "tags": [

                      ],
                      "tagsQuery": "",
                      "type": "query",
                      "useTags": false
                  },
                  {
                      "allValue": null,
                      "current": {

                      },
                      "datasource": "$datasource",
                      "hide": 0,
                      "includeAll": false,
                      "label": null,
                      "multi": false,
                      "name": "instance",
                      "options": [

                      ],
                      "query": "label_values(node_exporter_build_info{job=\"node-exporter\", cluster=\"$cluster\"}, instance)",
                      "refresh": 2,
                      "regex": "",
                      "sort": 1,
                      "tagValuesQuery": "",
                      "tags": [

                      ],
                      "tagsQuery": "",
                      "type": "query",
                      "useTags": false
                  }
              ]
          },
          "time": {
              "from": "now-1h",
              "to": "now"
          },
          "timepicker": {
              "refresh_intervals": [
                  "5s",
                  "10s",
                  "30s",
                  "1m",
                  "5m",
                  "15m",
                  "30m",
                  "1h",
                  "2h",
                  "1d"
              ],
              "time_options": [
                  "5m",
                  "15m",
                  "1h",
                  "6h",
                  "12h",
                  "24h",
                  "2d",
                  "7d",
                  "30d"
              ]
          },
          "timezone": "utc",
          "title": "Node Exporter / USE Method / Node",
          "uid": "fac67cfbe174d3ef53eb473d73d9212f",
          "version": 0
      }
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"node-rsrc-use.json":"{\n    \"__inputs\": [\n\n    ],\n    \"__requires\": [\n\n    ],\n    \"annotations\": {\n        \"list\": [\n\n        ]\n    },\n    \"editable\": false,\n    \"gnetId\": null,\n    \"graphTooltip\": 1,\n    \"hideControls\": false,\n    \"id\": null,\n    \"links\": [\n\n    ],\n    \"refresh\": \"30s\",\n    \"rows\": [\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 2,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": false,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"instance:node_cpu_utilisation:rate5m{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"} != 0\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"Utilisation\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"CPU Utilisation\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 3,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": false,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"instance:node_load1_per_cpu:ratio{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"} != 0\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"Saturation\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"CPU Saturation (Load1 per CPU)\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"CPU\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 4,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": false,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"instance:node_memory_utilisation:ratio{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"} != 0\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"Utilisation\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Memory Utilisation\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 5,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": false,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"instance:node_vmstat_pgmajfault:rate5m{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"} != 0\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"Major page Faults\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Memory Saturation (Major Page Faults)\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"rds\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"rds\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Memory\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 6,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": false,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n                        {\n                            \"alias\": \"/Receive/\",\n                            \"stack\": \"A\"\n                        },\n                        {\n                            \"alias\": \"/Transmit/\",\n                            \"stack\": \"B\",\n                            \"transform\": \"negative-Y\"\n                        }\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"instance:node_network_receive_bytes_excluding_lo:rate5m{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"} != 0\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"Receive\",\n                            \"refId\": \"A\"\n                        },\n                        {\n                            \"expr\": \"instance:node_network_transmit_bytes_excluding_lo:rate5m{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"} != 0\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"Transmit\",\n                            \"refId\": \"B\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Network Utilisation (Bytes Receive/Transmit)\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"Bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"Bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 7,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": false,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n                        {\n                            \"alias\": \"/ Receive/\",\n                            \"stack\": \"A\"\n                        },\n                        {\n                            \"alias\": \"/ Transmit/\",\n                            \"stack\": \"B\",\n                            \"transform\": \"negative-Y\"\n                        }\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"instance:node_network_receive_drop_excluding_lo:rate5m{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"} != 0\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"Receive\",\n                            \"refId\": \"A\"\n                        },\n                        {\n                            \"expr\": \"instance:node_network_transmit_drop_excluding_lo:rate5m{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"} != 0\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"Transmit\",\n                            \"refId\": \"B\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Network Saturation (Drops Receive/Transmit)\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"Bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"Bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Network\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 8,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": false,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"instance_device:node_disk_io_time_seconds:rate5m{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"} != 0\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{device}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Disk IO Utilisation\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 9,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": false,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"instance_device:node_disk_io_time_weighted_seconds:rate5m{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"} != 0\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{device}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Disk IO Saturation\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Disk IO\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 10,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": false,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sort_desc(1 -\\n  (\\n   max without (mountpoint, fstype) (node_filesystem_avail_bytes{job=\\\"node-exporter\\\", fstype!=\\\"\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"})\\n   /\\n   max without (mountpoint, fstype) (node_filesystem_size_bytes{job=\\\"node-exporter\\\", fstype!=\\\"\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"})\\n  ) != 0\\n)\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{device}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Disk Space Utilisation\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Disk Space\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        }\n    ],\n    \"schemaVersion\": 14,\n    \"style\": \"dark\",\n    \"tags\": [\n        \"node-exporter-mixin\"\n    ],\n    \"templating\": {\n        \"list\": [\n            {\n                \"current\": {\n                    \"text\": \"default\",\n                    \"value\": \"default\"\n                },\n                \"hide\": 0,\n                \"label\": \"Data Source\",\n                \"name\": \"datasource\",\n                \"options\": [\n\n                ],\n                \"query\": \"prometheus\",\n                \"refresh\": 1,\n                \"regex\": \"\",\n                \"type\": \"datasource\"\n            },\n            {\n                \"allValue\": null,\n                \"current\": {\n                    \"text\": \"\",\n                    \"value\": \"\"\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 2,\n                \"includeAll\": false,\n                \"label\": null,\n                \"multi\": false,\n                \"name\": \"cluster\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(node_time_seconds, cluster)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"sort\": 1,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            },\n            {\n                \"allValue\": null,\n                \"current\": {\n\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 0,\n                \"includeAll\": false,\n                \"label\": null,\n                \"multi\": false,\n                \"name\": \"instance\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(node_exporter_build_info{job=\\\"node-exporter\\\", cluster=\\\"$cluster\\\"}, instance)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"sort\": 1,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            }\n        ]\n    },\n    \"time\": {\n        \"from\": \"now-1h\",\n        \"to\": \"now\"\n    },\n    \"timepicker\": {\n        \"refresh_intervals\": [\n            \"5s\",\n            \"10s\",\n            \"30s\",\n            \"1m\",\n            \"5m\",\n            \"15m\",\n            \"30m\",\n            \"1h\",\n            \"2h\",\n            \"1d\"\n        ],\n        \"time_options\": [\n            \"5m\",\n            \"15m\",\n            \"1h\",\n            \"6h\",\n            \"12h\",\n            \"24h\",\n            \"2d\",\n            \"7d\",\n            \"30d\"\n        ]\n    },\n    \"timezone\": \"utc\",\n    \"title\": \"Node Exporter / USE Method / Node\",\n    \"uid\": \"fac67cfbe174d3ef53eb473d73d9212f\",\n    \"version\": 0\n}"},"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"grafana","app.kubernetes.io/name":"grafana","app.kubernetes.io/part-of":"kube-prometheus","app.kubernetes.io/version":"11.3.1"},"name":"grafana-dashboard-node-rsrc-use","namespace":"monitoring"}}
    creationTimestamp: "2024-11-25T14:40:26Z"
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 11.3.1
    name: grafana-dashboard-node-rsrc-use
    namespace: monitoring
    resourceVersion: "3039628"
    uid: 9ef8ef81-72c8-43d7-a248-46c5c4da7061
- apiVersion: v1
  data:
    nodes.json: |-
      {
          "__inputs": [

          ],
          "__requires": [

          ],
          "annotations": {
              "list": [

              ]
          },
          "editable": false,
          "gnetId": null,
          "graphTooltip": 1,
          "hideControls": false,
          "id": null,
          "links": [

          ],
          "refresh": "30s",
          "rows": [
              {
                  "collapse": false,
                  "collapsed": false,
                  "panels": [
                      {
                          "aliasColors": {

                          },
                          "bars": false,
                          "dashLength": 10,
                          "dashes": false,
                          "datasource": "$datasource",
                          "fill": 1,
                          "fillGradient": 0,
                          "gridPos": {

                          },
                          "id": 2,
                          "legend": {
                              "alignAsTable": false,
                              "avg": false,
                              "current": false,
                              "max": false,
                              "min": false,
                              "rightSide": false,
                              "show": true,
                              "sideWidth": null,
                              "total": false,
                              "values": false
                          },
                          "lines": true,
                          "linewidth": 1,
                          "links": [

                          ],
                          "nullPointMode": "null",
                          "percentage": false,
                          "pointradius": 5,
                          "points": false,
                          "renderer": "flot",
                          "repeat": null,
                          "seriesOverrides": [

                          ],
                          "spaceLength": 10,
                          "span": 6,
                          "stack": true,
                          "steppedLine": false,
                          "targets": [
                              {
                                  "expr": "(\n  (1 - sum without (mode) (rate(node_cpu_seconds_total{job=\"node-exporter\", mode=~\"idle|iowait|steal\", instance=\"$instance\", cluster=\"$cluster\"}[$__rate_interval])))\n/ ignoring(cpu) group_left\n  count without (cpu, mode) (node_cpu_seconds_total{job=\"node-exporter\", mode=\"idle\", instance=\"$instance\", cluster=\"$cluster\"})\n)\n",
                                  "format": "time_series",
                                  "intervalFactor": 5,
                                  "legendFormat": "{{cpu}}",
                                  "refId": "A"
                              }
                          ],
                          "thresholds": [

                          ],
                          "timeFrom": null,
                          "timeShift": null,
                          "title": "CPU Usage",
                          "tooltip": {
                              "shared": true,
                              "sort": 0,
                              "value_type": "individual"
                          },
                          "type": "graph",
                          "xaxis": {
                              "buckets": null,
                              "mode": "time",
                              "name": null,
                              "show": true,
                              "values": [

                              ]
                          },
                          "yaxes": [
                              {
                                  "format": "percentunit",
                                  "label": null,
                                  "logBase": 1,
                                  "max": 1,
                                  "min": 0,
                                  "show": true
                              },
                              {
                                  "format": "percentunit",
                                  "label": null,
                                  "logBase": 1,
                                  "max": 1,
                                  "min": 0,
                                  "show": true
                              }
                          ]
                      },
                      {
                          "aliasColors": {

                          },
                          "bars": false,
                          "dashLength": 10,
                          "dashes": false,
                          "datasource": "$datasource",
                          "fill": 0,
                          "fillGradient": 0,
                          "gridPos": {

                          },
                          "id": 3,
                          "legend": {
                              "alignAsTable": false,
                              "avg": false,
                              "current": false,
                              "max": false,
                              "min": false,
                              "rightSide": false,
                              "show": true,
                              "sideWidth": null,
                              "total": false,
                              "values": false
                          },
                          "lines": true,
                          "linewidth": 1,
                          "links": [

                          ],
                          "nullPointMode": "null",
                          "percentage": false,
                          "pointradius": 5,
                          "points": false,
                          "renderer": "flot",
                          "repeat": null,
                          "seriesOverrides": [

                          ],
                          "spaceLength": 10,
                          "span": 6,
                          "stack": false,
                          "steppedLine": false,
                          "targets": [
                              {
                                  "expr": "node_load1{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"}",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": "1m load average",
                                  "refId": "A"
                              },
                              {
                                  "expr": "node_load5{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"}",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": "5m load average",
                                  "refId": "B"
                              },
                              {
                                  "expr": "node_load15{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"}",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": "15m load average",
                                  "refId": "C"
                              },
                              {
                                  "expr": "count(node_cpu_seconds_total{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\", mode=\"idle\"})",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": "logical cores",
                                  "refId": "D"
                              }
                          ],
                          "thresholds": [

                          ],
                          "timeFrom": null,
                          "timeShift": null,
                          "title": "Load Average",
                          "tooltip": {
                              "shared": true,
                              "sort": 0,
                              "value_type": "individual"
                          },
                          "type": "graph",
                          "xaxis": {
                              "buckets": null,
                              "mode": "time",
                              "name": null,
                              "show": true,
                              "values": [

                              ]
                          },
                          "yaxes": [
                              {
                                  "format": "short",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": 0,
                                  "show": true
                              },
                              {
                                  "format": "short",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": 0,
                                  "show": true
                              }
                          ]
                      }
                  ],
                  "repeat": null,
                  "repeatIteration": null,
                  "repeatRowId": null,
                  "showTitle": true,
                  "title": "CPU",
                  "titleSize": "h6",
                  "type": "row"
              },
              {
                  "collapse": false,
                  "collapsed": false,
                  "panels": [
                      {
                          "aliasColors": {

                          },
                          "bars": false,
                          "dashLength": 10,
                          "dashes": false,
                          "datasource": "$datasource",
                          "fill": 1,
                          "fillGradient": 0,
                          "gridPos": {

                          },
                          "id": 4,
                          "legend": {
                              "alignAsTable": false,
                              "avg": false,
                              "current": false,
                              "max": false,
                              "min": false,
                              "rightSide": false,
                              "show": true,
                              "sideWidth": null,
                              "total": false,
                              "values": false
                          },
                          "lines": true,
                          "linewidth": 1,
                          "links": [

                          ],
                          "nullPointMode": "null",
                          "percentage": false,
                          "pointradius": 5,
                          "points": false,
                          "renderer": "flot",
                          "repeat": null,
                          "seriesOverrides": [

                          ],
                          "spaceLength": 10,
                          "span": 9,
                          "stack": true,
                          "steppedLine": false,
                          "targets": [
                              {
                                  "expr": "(\n  node_memory_MemTotal_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"}\n-\n  node_memory_MemFree_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"}\n-\n  node_memory_Buffers_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"}\n-\n  node_memory_Cached_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"}\n)\n",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": "memory used",
                                  "refId": "A"
                              },
                              {
                                  "expr": "node_memory_Buffers_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"}",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": "memory buffers",
                                  "refId": "B"
                              },
                              {
                                  "expr": "node_memory_Cached_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"}",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": "memory cached",
                                  "refId": "C"
                              },
                              {
                                  "expr": "node_memory_MemFree_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"}",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": "memory free",
                                  "refId": "D"
                              }
                          ],
                          "thresholds": [

                          ],
                          "timeFrom": null,
                          "timeShift": null,
                          "title": "Memory Usage",
                          "tooltip": {
                              "shared": true,
                              "sort": 0,
                              "value_type": "individual"
                          },
                          "type": "graph",
                          "xaxis": {
                              "buckets": null,
                              "mode": "time",
                              "name": null,
                              "show": true,
                              "values": [

                              ]
                          },
                          "yaxes": [
                              {
                                  "format": "bytes",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": 0,
                                  "show": true
                              },
                              {
                                  "format": "bytes",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": 0,
                                  "show": true
                              }
                          ]
                      },
                      {
                          "datasource": "$datasource",
                          "fieldConfig": {
                              "defaults": {
                                  "max": 100,
                                  "min": 0,
                                  "thresholds": {
                                      "mode": "absolute",
                                      "steps": [
                                          {
                                              "color": "rgba(50, 172, 45, 0.97)"
                                          },
                                          {
                                              "color": "rgba(237, 129, 40, 0.89)",
                                              "value": 80
                                          },
                                          {
                                              "color": "rgba(245, 54, 54, 0.9)",
                                              "value": 90
                                          }
                                      ]
                                  },
                                  "unit": "percent"
                              }
                          },
                          "gridPos": {

                          },
                          "id": 5,
                          "span": 3,
                          "targets": [
                              {
                                  "expr": "100 -\n(\n  avg(node_memory_MemAvailable_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"}) /\n  avg(node_memory_MemTotal_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"})\n* 100\n)\n",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": ""
                              }
                          ],
                          "title": "Memory Usage",
                          "transparent": false,
                          "type": "gauge"
                      }
                  ],
                  "repeat": null,
                  "repeatIteration": null,
                  "repeatRowId": null,
                  "showTitle": true,
                  "title": "Memory",
                  "titleSize": "h6",
                  "type": "row"
              },
              {
                  "collapse": false,
                  "collapsed": false,
                  "panels": [
                      {
                          "aliasColors": {

                          },
                          "bars": false,
                          "dashLength": 10,
                          "dashes": false,
                          "datasource": "$datasource",
                          "fill": 0,
                          "fillGradient": 0,
                          "gridPos": {

                          },
                          "id": 6,
                          "legend": {
                              "alignAsTable": false,
                              "avg": false,
                              "current": false,
                              "max": false,
                              "min": false,
                              "rightSide": false,
                              "show": true,
                              "sideWidth": null,
                              "total": false,
                              "values": false
                          },
                          "lines": true,
                          "linewidth": 1,
                          "links": [

                          ],
                          "nullPointMode": "null",
                          "percentage": false,
                          "pointradius": 5,
                          "points": false,
                          "renderer": "flot",
                          "repeat": null,
                          "seriesOverrides": [
                              {
                                  "alias": "/ read| written/",
                                  "yaxis": 1
                              },
                              {
                                  "alias": "/ io time/",
                                  "yaxis": 2
                              }
                          ],
                          "spaceLength": 10,
                          "span": 6,
                          "stack": false,
                          "steppedLine": false,
                          "targets": [
                              {
                                  "expr": "rate(node_disk_read_bytes_total{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\"}[$__rate_interval])",
                                  "format": "time_series",
                                  "intervalFactor": 1,
                                  "legendFormat": "{{device}} read",
                                  "refId": "A"
                              },
                              {
                                  "expr": "rate(node_disk_written_bytes_total{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\"}[$__rate_interval])",
                                  "format": "time_series",
                                  "intervalFactor": 1,
                                  "legendFormat": "{{device}} written",
                                  "refId": "B"
                              },
                              {
                                  "expr": "rate(node_disk_io_time_seconds_total{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\"}[$__rate_interval])",
                                  "format": "time_series",
                                  "intervalFactor": 1,
                                  "legendFormat": "{{device}} io time",
                                  "refId": "C"
                              }
                          ],
                          "thresholds": [

                          ],
                          "timeFrom": null,
                          "timeShift": null,
                          "title": "Disk I/O",
                          "tooltip": {
                              "shared": true,
                              "sort": 0,
                              "value_type": "individual"
                          },
                          "type": "graph",
                          "xaxis": {
                              "buckets": null,
                              "mode": "time",
                              "name": null,
                              "show": true,
                              "values": [

                              ]
                          },
                          "yaxes": [
                              {
                                  "format": "Bps",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              },
                              {
                                  "format": "percentunit",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              }
                          ]
                      },
                      {
                          "datasource": "$datasource",
                          "fieldConfig": {
                              "defaults": {
                                  "custom": {

                                  },
                                  "thresholds": {
                                      "mode": "absolute",
                                      "steps": [
                                          {
                                              "color": "green"
                                          },
                                          {
                                              "color": "yellow",
                                              "value": 0.8
                                          },
                                          {
                                              "color": "red",
                                              "value": 0.9
                                          }
                                      ]
                                  },
                                  "unit": "decbytes"
                              },
                              "overrides": [
                                  {
                                      "matcher": {
                                          "id": "byName",
                                          "options": "Mounted on"
                                      },
                                      "properties": [
                                          {
                                              "id": "custom.width",
                                              "value": 260
                                          }
                                      ]
                                  },
                                  {
                                      "matcher": {
                                          "id": "byName",
                                          "options": "Size"
                                      },
                                      "properties": [
                                          {
                                              "id": "custom.width",
                                              "value": 93
                                          }
                                      ]
                                  },
                                  {
                                      "matcher": {
                                          "id": "byName",
                                          "options": "Used"
                                      },
                                      "properties": [
                                          {
                                              "id": "custom.width",
                                              "value": 72
                                          }
                                      ]
                                  },
                                  {
                                      "matcher": {
                                          "id": "byName",
                                          "options": "Available"
                                      },
                                      "properties": [
                                          {
                                              "id": "custom.width",
                                              "value": 88
                                          }
                                      ]
                                  },
                                  {
                                      "matcher": {
                                          "id": "byName",
                                          "options": "Used, %"
                                      },
                                      "properties": [
                                          {
                                              "id": "unit",
                                              "value": "percentunit"
                                          },
                                          {
                                              "id": "custom.displayMode",
                                              "value": "gradient-gauge"
                                          },
                                          {
                                              "id": "max",
                                              "value": 1
                                          },
                                          {
                                              "id": "min",
                                              "value": 0
                                          }
                                      ]
                                  }
                              ]
                          },
                          "gridPos": {

                          },
                          "id": 7,
                          "span": 6,
                          "targets": [
                              {
                                  "expr": "max by (mountpoint) (node_filesystem_size_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\", fstype!=\"\", mountpoint!=\"\"})\n",
                                  "format": "table",
                                  "instant": true,
                                  "intervalFactor": 2,
                                  "legendFormat": ""
                              },
                              {
                                  "expr": "max by (mountpoint) (node_filesystem_avail_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\", fstype!=\"\", mountpoint!=\"\"})\n",
                                  "format": "table",
                                  "instant": true,
                                  "intervalFactor": 2,
                                  "legendFormat": ""
                              }
                          ],
                          "title": "Disk Space Usage",
                          "transformations": [
                              {
                                  "id": "groupBy",
                                  "options": {
                                      "fields": {
                                          "Value #A": {
                                              "aggregations": [
                                                  "lastNotNull"
                                              ],
                                              "operation": "aggregate"
                                          },
                                          "Value #B": {
                                              "aggregations": [
                                                  "lastNotNull"
                                              ],
                                              "operation": "aggregate"
                                          },
                                          "mountpoint": {
                                              "aggregations": [

                                              ],
                                              "operation": "groupby"
                                          }
                                      }
                                  }
                              },
                              {
                                  "id": "merge",
                                  "options": {

                                  }
                              },
                              {
                                  "id": "calculateField",
                                  "options": {
                                      "alias": "Used",
                                      "binary": {
                                          "left": "Value #A (lastNotNull)",
                                          "operator": "-",
                                          "reducer": "sum",
                                          "right": "Value #B (lastNotNull)"
                                      },
                                      "mode": "binary",
                                      "reduce": {
                                          "reducer": "sum"
                                      }
                                  }
                              },
                              {
                                  "id": "calculateField",
                                  "options": {
                                      "alias": "Used, %",
                                      "binary": {
                                          "left": "Used",
                                          "operator": "/",
                                          "reducer": "sum",
                                          "right": "Value #A (lastNotNull)"
                                      },
                                      "mode": "binary",
                                      "reduce": {
                                          "reducer": "sum"
                                      }
                                  }
                              },
                              {
                                  "id": "organize",
                                  "options": {
                                      "excludeByName": {

                                      },
                                      "indexByName": {

                                      },
                                      "renameByName": {
                                          "Value #A (lastNotNull)": "Size",
                                          "Value #B (lastNotNull)": "Available",
                                          "mountpoint": "Mounted on"
                                      }
                                  }
                              },
                              {
                                  "id": "sortBy",
                                  "options": {
                                      "fields": {

                                      },
                                      "sort": [
                                          {
                                              "field": "Mounted on"
                                          }
                                      ]
                                  }
                              }
                          ],
                          "transparent": false,
                          "type": "table"
                      }
                  ],
                  "repeat": null,
                  "repeatIteration": null,
                  "repeatRowId": null,
                  "showTitle": true,
                  "title": "Disk",
                  "titleSize": "h6",
                  "type": "row"
              },
              {
                  "collapse": false,
                  "collapsed": false,
                  "panels": [
                      {
                          "aliasColors": {

                          },
                          "bars": false,
                          "dashLength": 10,
                          "dashes": false,
                          "datasource": "$datasource",
                          "description": "Network received (bits/s)",
                          "fill": 0,
                          "fillGradient": 0,
                          "gridPos": {

                          },
                          "id": 8,
                          "legend": {
                              "alignAsTable": false,
                              "avg": false,
                              "current": false,
                              "max": false,
                              "min": false,
                              "rightSide": false,
                              "show": true,
                              "sideWidth": null,
                              "total": false,
                              "values": false
                          },
                          "lines": true,
                          "linewidth": 1,
                          "links": [

                          ],
                          "nullPointMode": "null",
                          "percentage": false,
                          "pointradius": 5,
                          "points": false,
                          "renderer": "flot",
                          "repeat": null,
                          "seriesOverrides": [

                          ],
                          "spaceLength": 10,
                          "span": 6,
                          "stack": false,
                          "steppedLine": false,
                          "targets": [
                              {
                                  "expr": "rate(node_network_receive_bytes_total{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\", device!=\"lo\"}[$__rate_interval]) * 8",
                                  "format": "time_series",
                                  "intervalFactor": 1,
                                  "legendFormat": "{{device}}",
                                  "refId": "A"
                              }
                          ],
                          "thresholds": [

                          ],
                          "timeFrom": null,
                          "timeShift": null,
                          "title": "Network Received",
                          "tooltip": {
                              "shared": true,
                              "sort": 0,
                              "value_type": "individual"
                          },
                          "type": "graph",
                          "xaxis": {
                              "buckets": null,
                              "mode": "time",
                              "name": null,
                              "show": true,
                              "values": [

                              ]
                          },
                          "yaxes": [
                              {
                                  "format": "bps",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": 0,
                                  "show": true
                              },
                              {
                                  "format": "bps",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": 0,
                                  "show": true
                              }
                          ]
                      },
                      {
                          "aliasColors": {

                          },
                          "bars": false,
                          "dashLength": 10,
                          "dashes": false,
                          "datasource": "$datasource",
                          "description": "Network transmitted (bits/s)",
                          "fill": 0,
                          "fillGradient": 0,
                          "gridPos": {

                          },
                          "id": 9,
                          "legend": {
                              "alignAsTable": false,
                              "avg": false,
                              "current": false,
                              "max": false,
                              "min": false,
                              "rightSide": false,
                              "show": true,
                              "sideWidth": null,
                              "total": false,
                              "values": false
                          },
                          "lines": true,
                          "linewidth": 1,
                          "links": [

                          ],
                          "nullPointMode": "null",
                          "percentage": false,
                          "pointradius": 5,
                          "points": false,
                          "renderer": "flot",
                          "repeat": null,
                          "seriesOverrides": [

                          ],
                          "spaceLength": 10,
                          "span": 6,
                          "stack": false,
                          "steppedLine": false,
                          "targets": [
                              {
                                  "expr": "rate(node_network_transmit_bytes_total{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\", device!=\"lo\"}[$__rate_interval]) * 8",
                                  "format": "time_series",
                                  "intervalFactor": 1,
                                  "legendFormat": "{{device}}",
                                  "refId": "A"
                              }
                          ],
                          "thresholds": [

                          ],
                          "timeFrom": null,
                          "timeShift": null,
                          "title": "Network Transmitted",
                          "tooltip": {
                              "shared": true,
                              "sort": 0,
                              "value_type": "individual"
                          },
                          "type": "graph",
                          "xaxis": {
                              "buckets": null,
                              "mode": "time",
                              "name": null,
                              "show": true,
                              "values": [

                              ]
                          },
                          "yaxes": [
                              {
                                  "format": "bps",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": 0,
                                  "show": true
                              },
                              {
                                  "format": "bps",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": 0,
                                  "show": true
                              }
                          ]
                      }
                  ],
                  "repeat": null,
                  "repeatIteration": null,
                  "repeatRowId": null,
                  "showTitle": true,
                  "title": "Network",
                  "titleSize": "h6",
                  "type": "row"
              }
          ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
              "node-exporter-mixin"
          ],
          "templating": {
              "list": [
                  {
                      "current": {
                          "text": "default",
                          "value": "default"
                      },
                      "hide": 0,
                      "label": "Data Source",
                      "name": "datasource",
                      "options": [

                      ],
                      "query": "prometheus",
                      "refresh": 1,
                      "regex": "",
                      "type": "datasource"
                  },
                  {
                      "allValue": null,
                      "current": {

                      },
                      "datasource": "$datasource",
                      "hide": 2,
                      "includeAll": false,
                      "label": "Cluster",
                      "multi": false,
                      "name": "cluster",
                      "options": [

                      ],
                      "query": "label_values(node_uname_info{job=\"node-exporter\", sysname!=\"Darwin\"}, cluster)",
                      "refresh": 2,
                      "regex": "",
                      "sort": 0,
                      "tagValuesQuery": "",
                      "tags": [

                      ],
                      "tagsQuery": "",
                      "type": "query",
                      "useTags": false
                  },
                  {
                      "allValue": null,
                      "current": {

                      },
                      "datasource": "$datasource",
                      "hide": 0,
                      "includeAll": false,
                      "label": "Instance",
                      "multi": false,
                      "name": "instance",
                      "options": [

                      ],
                      "query": "label_values(node_uname_info{job=\"node-exporter\", cluster=\"$cluster\", sysname!=\"Darwin\"}, instance)",
                      "refresh": 2,
                      "regex": "",
                      "sort": 0,
                      "tagValuesQuery": "",
                      "tags": [

                      ],
                      "tagsQuery": "",
                      "type": "query",
                      "useTags": false
                  }
              ]
          },
          "time": {
              "from": "now-1h",
              "to": "now"
          },
          "timepicker": {
              "refresh_intervals": [
                  "5s",
                  "10s",
                  "30s",
                  "1m",
                  "5m",
                  "15m",
                  "30m",
                  "1h",
                  "2h",
                  "1d"
              ],
              "time_options": [
                  "5m",
                  "15m",
                  "1h",
                  "6h",
                  "12h",
                  "24h",
                  "2d",
                  "7d",
                  "30d"
              ]
          },
          "timezone": "utc",
          "title": "Node Exporter / Nodes",
          "uid": "7d57716318ee0dddbac5a7f451fb7753",
          "version": 0
      }
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"nodes.json":"{\n    \"__inputs\": [\n\n    ],\n    \"__requires\": [\n\n    ],\n    \"annotations\": {\n        \"list\": [\n\n        ]\n    },\n    \"editable\": false,\n    \"gnetId\": null,\n    \"graphTooltip\": 1,\n    \"hideControls\": false,\n    \"id\": null,\n    \"links\": [\n\n    ],\n    \"refresh\": \"30s\",\n    \"rows\": [\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 2,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"(\\n  (1 - sum without (mode) (rate(node_cpu_seconds_total{job=\\\"node-exporter\\\", mode=~\\\"idle|iowait|steal\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"}[$__rate_interval])))\\n/ ignoring(cpu) group_left\\n  count without (cpu, mode) (node_cpu_seconds_total{job=\\\"node-exporter\\\", mode=\\\"idle\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"})\\n)\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 5,\n                            \"legendFormat\": \"{{cpu}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"CPU Usage\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": 1,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": 1,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 0,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 3,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"node_load1{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"}\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"1m load average\",\n                            \"refId\": \"A\"\n                        },\n                        {\n                            \"expr\": \"node_load5{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"}\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"5m load average\",\n                            \"refId\": \"B\"\n                        },\n                        {\n                            \"expr\": \"node_load15{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"}\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"15m load average\",\n                            \"refId\": \"C\"\n                        },\n                        {\n                            \"expr\": \"count(node_cpu_seconds_total{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\", mode=\\\"idle\\\"})\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"logical cores\",\n                            \"refId\": \"D\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Load Average\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"CPU\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 4,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 9,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"(\\n  node_memory_MemTotal_bytes{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"}\\n-\\n  node_memory_MemFree_bytes{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"}\\n-\\n  node_memory_Buffers_bytes{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"}\\n-\\n  node_memory_Cached_bytes{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"}\\n)\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"memory used\",\n                            \"refId\": \"A\"\n                        },\n                        {\n                            \"expr\": \"node_memory_Buffers_bytes{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"}\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"memory buffers\",\n                            \"refId\": \"B\"\n                        },\n                        {\n                            \"expr\": \"node_memory_Cached_bytes{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"}\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"memory cached\",\n                            \"refId\": \"C\"\n                        },\n                        {\n                            \"expr\": \"node_memory_MemFree_bytes{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"}\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"memory free\",\n                            \"refId\": \"D\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Memory Usage\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"bytes\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"bytes\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"datasource\": \"$datasource\",\n                    \"fieldConfig\": {\n                        \"defaults\": {\n                            \"max\": 100,\n                            \"min\": 0,\n                            \"thresholds\": {\n                                \"mode\": \"absolute\",\n                                \"steps\": [\n                                    {\n                                        \"color\": \"rgba(50, 172, 45, 0.97)\"\n                                    },\n                                    {\n                                        \"color\": \"rgba(237, 129, 40, 0.89)\",\n                                        \"value\": 80\n                                    },\n                                    {\n                                        \"color\": \"rgba(245, 54, 54, 0.9)\",\n                                        \"value\": 90\n                                    }\n                                ]\n                            },\n                            \"unit\": \"percent\"\n                        }\n                    },\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 5,\n                    \"span\": 3,\n                    \"targets\": [\n                        {\n                            \"expr\": \"100 -\\n(\\n  avg(node_memory_MemAvailable_bytes{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"}) /\\n  avg(node_memory_MemTotal_bytes{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"})\\n* 100\\n)\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\"\n                        }\n                    ],\n                    \"title\": \"Memory Usage\",\n                    \"transparent\": false,\n                    \"type\": \"gauge\"\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Memory\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 0,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 6,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n                        {\n                            \"alias\": \"/ read| written/\",\n                            \"yaxis\": 1\n                        },\n                        {\n                            \"alias\": \"/ io time/\",\n                            \"yaxis\": 2\n                        }\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"rate(node_disk_read_bytes_total{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\", device=~\\\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\\\"}[$__rate_interval])\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 1,\n                            \"legendFormat\": \"{{device}} read\",\n                            \"refId\": \"A\"\n                        },\n                        {\n                            \"expr\": \"rate(node_disk_written_bytes_total{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\", device=~\\\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\\\"}[$__rate_interval])\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 1,\n                            \"legendFormat\": \"{{device}} written\",\n                            \"refId\": \"B\"\n                        },\n                        {\n                            \"expr\": \"rate(node_disk_io_time_seconds_total{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\", device=~\\\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\\\"}[$__rate_interval])\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 1,\n                            \"legendFormat\": \"{{device}} io time\",\n                            \"refId\": \"C\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Disk I/O\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"Bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"datasource\": \"$datasource\",\n                    \"fieldConfig\": {\n                        \"defaults\": {\n                            \"custom\": {\n\n                            },\n                            \"thresholds\": {\n                                \"mode\": \"absolute\",\n                                \"steps\": [\n                                    {\n                                        \"color\": \"green\"\n                                    },\n                                    {\n                                        \"color\": \"yellow\",\n                                        \"value\": 0.8\n                                    },\n                                    {\n                                        \"color\": \"red\",\n                                        \"value\": 0.9\n                                    }\n                                ]\n                            },\n                            \"unit\": \"decbytes\"\n                        },\n                        \"overrides\": [\n                            {\n                                \"matcher\": {\n                                    \"id\": \"byName\",\n                                    \"options\": \"Mounted on\"\n                                },\n                                \"properties\": [\n                                    {\n                                        \"id\": \"custom.width\",\n                                        \"value\": 260\n                                    }\n                                ]\n                            },\n                            {\n                                \"matcher\": {\n                                    \"id\": \"byName\",\n                                    \"options\": \"Size\"\n                                },\n                                \"properties\": [\n                                    {\n                                        \"id\": \"custom.width\",\n                                        \"value\": 93\n                                    }\n                                ]\n                            },\n                            {\n                                \"matcher\": {\n                                    \"id\": \"byName\",\n                                    \"options\": \"Used\"\n                                },\n                                \"properties\": [\n                                    {\n                                        \"id\": \"custom.width\",\n                                        \"value\": 72\n                                    }\n                                ]\n                            },\n                            {\n                                \"matcher\": {\n                                    \"id\": \"byName\",\n                                    \"options\": \"Available\"\n                                },\n                                \"properties\": [\n                                    {\n                                        \"id\": \"custom.width\",\n                                        \"value\": 88\n                                    }\n                                ]\n                            },\n                            {\n                                \"matcher\": {\n                                    \"id\": \"byName\",\n                                    \"options\": \"Used, %\"\n                                },\n                                \"properties\": [\n                                    {\n                                        \"id\": \"unit\",\n                                        \"value\": \"percentunit\"\n                                    },\n                                    {\n                                        \"id\": \"custom.displayMode\",\n                                        \"value\": \"gradient-gauge\"\n                                    },\n                                    {\n                                        \"id\": \"max\",\n                                        \"value\": 1\n                                    },\n                                    {\n                                        \"id\": \"min\",\n                                        \"value\": 0\n                                    }\n                                ]\n                            }\n                        ]\n                    },\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 7,\n                    \"span\": 6,\n                    \"targets\": [\n                        {\n                            \"expr\": \"max by (mountpoint) (node_filesystem_size_bytes{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\", fstype!=\\\"\\\", mountpoint!=\\\"\\\"})\\n\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\"\n                        },\n                        {\n                            \"expr\": \"max by (mountpoint) (node_filesystem_avail_bytes{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\", fstype!=\\\"\\\", mountpoint!=\\\"\\\"})\\n\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\"\n                        }\n                    ],\n                    \"title\": \"Disk Space Usage\",\n                    \"transformations\": [\n                        {\n                            \"id\": \"groupBy\",\n                            \"options\": {\n                                \"fields\": {\n                                    \"Value #A\": {\n                                        \"aggregations\": [\n                                            \"lastNotNull\"\n                                        ],\n                                        \"operation\": \"aggregate\"\n                                    },\n                                    \"Value #B\": {\n                                        \"aggregations\": [\n                                            \"lastNotNull\"\n                                        ],\n                                        \"operation\": \"aggregate\"\n                                    },\n                                    \"mountpoint\": {\n                                        \"aggregations\": [\n\n                                        ],\n                                        \"operation\": \"groupby\"\n                                    }\n                                }\n                            }\n                        },\n                        {\n                            \"id\": \"merge\",\n                            \"options\": {\n\n                            }\n                        },\n                        {\n                            \"id\": \"calculateField\",\n                            \"options\": {\n                                \"alias\": \"Used\",\n                                \"binary\": {\n                                    \"left\": \"Value #A (lastNotNull)\",\n                                    \"operator\": \"-\",\n                                    \"reducer\": \"sum\",\n                                    \"right\": \"Value #B (lastNotNull)\"\n                                },\n                                \"mode\": \"binary\",\n                                \"reduce\": {\n                                    \"reducer\": \"sum\"\n                                }\n                            }\n                        },\n                        {\n                            \"id\": \"calculateField\",\n                            \"options\": {\n                                \"alias\": \"Used, %\",\n                                \"binary\": {\n                                    \"left\": \"Used\",\n                                    \"operator\": \"/\",\n                                    \"reducer\": \"sum\",\n                                    \"right\": \"Value #A (lastNotNull)\"\n                                },\n                                \"mode\": \"binary\",\n                                \"reduce\": {\n                                    \"reducer\": \"sum\"\n                                }\n                            }\n                        },\n                        {\n                            \"id\": \"organize\",\n                            \"options\": {\n                                \"excludeByName\": {\n\n                                },\n                                \"indexByName\": {\n\n                                },\n                                \"renameByName\": {\n                                    \"Value #A (lastNotNull)\": \"Size\",\n                                    \"Value #B (lastNotNull)\": \"Available\",\n                                    \"mountpoint\": \"Mounted on\"\n                                }\n                            }\n                        },\n                        {\n                            \"id\": \"sortBy\",\n                            \"options\": {\n                                \"fields\": {\n\n                                },\n                                \"sort\": [\n                                    {\n                                        \"field\": \"Mounted on\"\n                                    }\n                                ]\n                            }\n                        }\n                    ],\n                    \"transparent\": false,\n                    \"type\": \"table\"\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Disk\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"description\": \"Network received (bits/s)\",\n                    \"fill\": 0,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 8,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"rate(node_network_receive_bytes_total{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\", device!=\\\"lo\\\"}[$__rate_interval]) * 8\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 1,\n                            \"legendFormat\": \"{{device}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Network Received\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"description\": \"Network transmitted (bits/s)\",\n                    \"fill\": 0,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 9,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"rate(node_network_transmit_bytes_total{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\", device!=\\\"lo\\\"}[$__rate_interval]) * 8\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 1,\n                            \"legendFormat\": \"{{device}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Network Transmitted\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Network\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        }\n    ],\n    \"schemaVersion\": 14,\n    \"style\": \"dark\",\n    \"tags\": [\n        \"node-exporter-mixin\"\n    ],\n    \"templating\": {\n        \"list\": [\n            {\n                \"current\": {\n                    \"text\": \"default\",\n                    \"value\": \"default\"\n                },\n                \"hide\": 0,\n                \"label\": \"Data Source\",\n                \"name\": \"datasource\",\n                \"options\": [\n\n                ],\n                \"query\": \"prometheus\",\n                \"refresh\": 1,\n                \"regex\": \"\",\n                \"type\": \"datasource\"\n            },\n            {\n                \"allValue\": null,\n                \"current\": {\n\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 2,\n                \"includeAll\": false,\n                \"label\": \"Cluster\",\n                \"multi\": false,\n                \"name\": \"cluster\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(node_uname_info{job=\\\"node-exporter\\\", sysname!=\\\"Darwin\\\"}, cluster)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"sort\": 0,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            },\n            {\n                \"allValue\": null,\n                \"current\": {\n\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 0,\n                \"includeAll\": false,\n                \"label\": \"Instance\",\n                \"multi\": false,\n                \"name\": \"instance\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(node_uname_info{job=\\\"node-exporter\\\", cluster=\\\"$cluster\\\", sysname!=\\\"Darwin\\\"}, instance)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"sort\": 0,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            }\n        ]\n    },\n    \"time\": {\n        \"from\": \"now-1h\",\n        \"to\": \"now\"\n    },\n    \"timepicker\": {\n        \"refresh_intervals\": [\n            \"5s\",\n            \"10s\",\n            \"30s\",\n            \"1m\",\n            \"5m\",\n            \"15m\",\n            \"30m\",\n            \"1h\",\n            \"2h\",\n            \"1d\"\n        ],\n        \"time_options\": [\n            \"5m\",\n            \"15m\",\n            \"1h\",\n            \"6h\",\n            \"12h\",\n            \"24h\",\n            \"2d\",\n            \"7d\",\n            \"30d\"\n        ]\n    },\n    \"timezone\": \"utc\",\n    \"title\": \"Node Exporter / Nodes\",\n    \"uid\": \"7d57716318ee0dddbac5a7f451fb7753\",\n    \"version\": 0\n}"},"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"grafana","app.kubernetes.io/name":"grafana","app.kubernetes.io/part-of":"kube-prometheus","app.kubernetes.io/version":"11.3.1"},"name":"grafana-dashboard-nodes","namespace":"monitoring"}}
    creationTimestamp: "2024-11-25T14:40:26Z"
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 11.3.1
    name: grafana-dashboard-nodes
    namespace: monitoring
    resourceVersion: "3039631"
    uid: 271ef694-ed0e-4e12-8f4f-fc6a69b5a447
- apiVersion: v1
  data:
    nodes-aix.json: |-
      {
          "__inputs": [

          ],
          "__requires": [

          ],
          "annotations": {
              "list": [

              ]
          },
          "editable": false,
          "gnetId": null,
          "graphTooltip": 1,
          "hideControls": false,
          "id": null,
          "links": [

          ],
          "refresh": "30s",
          "rows": [
              {
                  "collapse": false,
                  "collapsed": false,
                  "panels": [
                      {
                          "aliasColors": {

                          },
                          "bars": false,
                          "dashLength": 10,
                          "dashes": false,
                          "datasource": "$datasource",
                          "fill": 1,
                          "fillGradient": 0,
                          "gridPos": {

                          },
                          "id": 2,
                          "legend": {
                              "alignAsTable": false,
                              "avg": false,
                              "current": false,
                              "max": false,
                              "min": false,
                              "rightSide": false,
                              "show": true,
                              "sideWidth": null,
                              "total": false,
                              "values": false
                          },
                          "lines": true,
                          "linewidth": 1,
                          "links": [

                          ],
                          "nullPointMode": "null",
                          "percentage": false,
                          "pointradius": 5,
                          "points": false,
                          "renderer": "flot",
                          "repeat": null,
                          "seriesOverrides": [

                          ],
                          "spaceLength": 10,
                          "span": 6,
                          "stack": true,
                          "steppedLine": false,
                          "targets": [
                              {
                                  "expr": "(\n  (1 - sum without (mode) (rate(node_cpu_seconds_total{job=\"node-exporter\", mode=~\"idle|iowait|steal\", instance=\"$instance\", cluster=\"$cluster\"}[$__rate_interval])))\n/ ignoring(cpu) group_left\n  count without (cpu, mode) (node_cpu_seconds_total{job=\"node-exporter\", mode=\"idle\", instance=\"$instance\", cluster=\"$cluster\"})\n)\n",
                                  "format": "time_series",
                                  "intervalFactor": 5,
                                  "legendFormat": "{{cpu}}",
                                  "refId": "A"
                              }
                          ],
                          "thresholds": [

                          ],
                          "timeFrom": null,
                          "timeShift": null,
                          "title": "CPU Usage",
                          "tooltip": {
                              "shared": true,
                              "sort": 0,
                              "value_type": "individual"
                          },
                          "type": "graph",
                          "xaxis": {
                              "buckets": null,
                              "mode": "time",
                              "name": null,
                              "show": true,
                              "values": [

                              ]
                          },
                          "yaxes": [
                              {
                                  "format": "percentunit",
                                  "label": null,
                                  "logBase": 1,
                                  "max": 1,
                                  "min": 0,
                                  "show": true
                              },
                              {
                                  "format": "percentunit",
                                  "label": null,
                                  "logBase": 1,
                                  "max": 1,
                                  "min": 0,
                                  "show": true
                              }
                          ]
                      },
                      {
                          "aliasColors": {

                          },
                          "bars": false,
                          "dashLength": 10,
                          "dashes": false,
                          "datasource": "$datasource",
                          "fill": 0,
                          "fillGradient": 0,
                          "gridPos": {

                          },
                          "id": 3,
                          "legend": {
                              "alignAsTable": false,
                              "avg": false,
                              "current": false,
                              "max": false,
                              "min": false,
                              "rightSide": false,
                              "show": true,
                              "sideWidth": null,
                              "total": false,
                              "values": false
                          },
                          "lines": true,
                          "linewidth": 1,
                          "links": [

                          ],
                          "nullPointMode": "null",
                          "percentage": false,
                          "pointradius": 5,
                          "points": false,
                          "renderer": "flot",
                          "repeat": null,
                          "seriesOverrides": [

                          ],
                          "spaceLength": 10,
                          "span": 6,
                          "stack": false,
                          "steppedLine": false,
                          "targets": [
                              {
                                  "expr": "node_load1{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"}",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": "1m load average",
                                  "refId": "A"
                              },
                              {
                                  "expr": "node_load5{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"}",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": "5m load average",
                                  "refId": "B"
                              },
                              {
                                  "expr": "node_load15{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"}",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": "15m load average",
                                  "refId": "C"
                              },
                              {
                                  "expr": "count(node_cpu_seconds_total{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\", mode=\"idle\"})",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": "logical cores",
                                  "refId": "D"
                              }
                          ],
                          "thresholds": [

                          ],
                          "timeFrom": null,
                          "timeShift": null,
                          "title": "Load Average",
                          "tooltip": {
                              "shared": true,
                              "sort": 0,
                              "value_type": "individual"
                          },
                          "type": "graph",
                          "xaxis": {
                              "buckets": null,
                              "mode": "time",
                              "name": null,
                              "show": true,
                              "values": [

                              ]
                          },
                          "yaxes": [
                              {
                                  "format": "short",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": 0,
                                  "show": true
                              },
                              {
                                  "format": "short",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": 0,
                                  "show": true
                              }
                          ]
                      }
                  ],
                  "repeat": null,
                  "repeatIteration": null,
                  "repeatRowId": null,
                  "showTitle": true,
                  "title": "CPU",
                  "titleSize": "h6",
                  "type": "row"
              },
              {
                  "collapse": false,
                  "collapsed": false,
                  "panels": [
                      {
                          "aliasColors": {

                          },
                          "bars": false,
                          "dashLength": 10,
                          "dashes": false,
                          "datasource": "$datasource",
                          "fill": 1,
                          "fillGradient": 0,
                          "gridPos": {

                          },
                          "id": 4,
                          "legend": {
                              "alignAsTable": false,
                              "avg": false,
                              "current": false,
                              "max": false,
                              "min": false,
                              "rightSide": false,
                              "show": true,
                              "sideWidth": null,
                              "total": false,
                              "values": false
                          },
                          "lines": true,
                          "linewidth": 1,
                          "links": [

                          ],
                          "nullPointMode": "null",
                          "percentage": false,
                          "pointradius": 5,
                          "points": false,
                          "renderer": "flot",
                          "repeat": null,
                          "seriesOverrides": [

                          ],
                          "spaceLength": 10,
                          "span": 9,
                          "stack": false,
                          "steppedLine": false,
                          "targets": [
                              {
                                  "expr": "node_memory_total_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"}",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": "Physical Memory",
                                  "refId": "A"
                              },
                              {
                                  "expr": "(\n    node_memory_total_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"} -\n    node_memory_available_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"}\n)\n",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": "Memory Used",
                                  "refId": "B"
                              }
                          ],
                          "thresholds": [

                          ],
                          "timeFrom": null,
                          "timeShift": null,
                          "title": "Memory Usage",
                          "tooltip": {
                              "shared": true,
                              "sort": 0,
                              "value_type": "individual"
                          },
                          "type": "graph",
                          "xaxis": {
                              "buckets": null,
                              "mode": "time",
                              "name": null,
                              "show": true,
                              "values": [

                              ]
                          },
                          "yaxes": [
                              {
                                  "format": "bytes",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": 0,
                                  "show": true
                              },
                              {
                                  "format": "bytes",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": 0,
                                  "show": true
                              }
                          ]
                      },
                      {
                          "datasource": "$datasource",
                          "fieldConfig": {
                              "defaults": {
                                  "max": 100,
                                  "min": 0,
                                  "thresholds": {
                                      "mode": "absolute",
                                      "steps": [
                                          {
                                              "color": "rgba(50, 172, 45, 0.97)"
                                          },
                                          {
                                              "color": "rgba(237, 129, 40, 0.89)",
                                              "value": 80
                                          },
                                          {
                                              "color": "rgba(245, 54, 54, 0.9)",
                                              "value": 90
                                          }
                                      ]
                                  },
                                  "unit": "percent"
                              }
                          },
                          "gridPos": {

                          },
                          "id": 5,
                          "span": 3,
                          "targets": [
                              {
                                  "expr": "100 -\n(\n  avg(node_memory_available_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"}) /\n  avg(node_memory_total_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"})\n  * 100\n)\n",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": ""
                              }
                          ],
                          "title": "Memory Usage",
                          "transparent": false,
                          "type": "gauge"
                      }
                  ],
                  "repeat": null,
                  "repeatIteration": null,
                  "repeatRowId": null,
                  "showTitle": true,
                  "title": "Memory",
                  "titleSize": "h6",
                  "type": "row"
              },
              {
                  "collapse": false,
                  "collapsed": false,
                  "panels": [
                      {
                          "aliasColors": {

                          },
                          "bars": false,
                          "dashLength": 10,
                          "dashes": false,
                          "datasource": "$datasource",
                          "fill": 0,
                          "fillGradient": 0,
                          "gridPos": {

                          },
                          "id": 6,
                          "legend": {
                              "alignAsTable": false,
                              "avg": false,
                              "current": false,
                              "max": false,
                              "min": false,
                              "rightSide": false,
                              "show": true,
                              "sideWidth": null,
                              "total": false,
                              "values": false
                          },
                          "lines": true,
                          "linewidth": 1,
                          "links": [

                          ],
                          "nullPointMode": "null",
                          "percentage": false,
                          "pointradius": 5,
                          "points": false,
                          "renderer": "flot",
                          "repeat": null,
                          "seriesOverrides": [
                              {
                                  "alias": "/ read| written/",
                                  "yaxis": 1
                              },
                              {
                                  "alias": "/ io time/",
                                  "yaxis": 2
                              }
                          ],
                          "spaceLength": 10,
                          "span": 6,
                          "stack": false,
                          "steppedLine": false,
                          "targets": [
                              {
                                  "expr": "rate(node_disk_read_bytes_total{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\"}[$__rate_interval])",
                                  "format": "time_series",
                                  "intervalFactor": 1,
                                  "legendFormat": "{{device}} read",
                                  "refId": "A"
                              },
                              {
                                  "expr": "rate(node_disk_written_bytes_total{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\"}[$__rate_interval])",
                                  "format": "time_series",
                                  "intervalFactor": 1,
                                  "legendFormat": "{{device}} written",
                                  "refId": "B"
                              },
                              {
                                  "expr": "rate(node_disk_io_time_seconds_total{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\"}[$__rate_interval])",
                                  "format": "time_series",
                                  "intervalFactor": 1,
                                  "legendFormat": "{{device}} io time",
                                  "refId": "C"
                              }
                          ],
                          "thresholds": [

                          ],
                          "timeFrom": null,
                          "timeShift": null,
                          "title": "Disk I/O",
                          "tooltip": {
                              "shared": true,
                              "sort": 0,
                              "value_type": "individual"
                          },
                          "type": "graph",
                          "xaxis": {
                              "buckets": null,
                              "mode": "time",
                              "name": null,
                              "show": true,
                              "values": [

                              ]
                          },
                          "yaxes": [
                              {
                                  "format": "Bps",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              },
                              {
                                  "format": "percentunit",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              }
                          ]
                      },
                      {
                          "datasource": "$datasource",
                          "fieldConfig": {
                              "defaults": {
                                  "custom": {

                                  },
                                  "thresholds": {
                                      "mode": "absolute",
                                      "steps": [
                                          {
                                              "color": "green"
                                          },
                                          {
                                              "color": "yellow",
                                              "value": 0.8
                                          },
                                          {
                                              "color": "red",
                                              "value": 0.9
                                          }
                                      ]
                                  },
                                  "unit": "decbytes"
                              },
                              "overrides": [
                                  {
                                      "matcher": {
                                          "id": "byName",
                                          "options": "Mounted on"
                                      },
                                      "properties": [
                                          {
                                              "id": "custom.width",
                                              "value": 260
                                          }
                                      ]
                                  },
                                  {
                                      "matcher": {
                                          "id": "byName",
                                          "options": "Size"
                                      },
                                      "properties": [
                                          {
                                              "id": "custom.width",
                                              "value": 93
                                          }
                                      ]
                                  },
                                  {
                                      "matcher": {
                                          "id": "byName",
                                          "options": "Used"
                                      },
                                      "properties": [
                                          {
                                              "id": "custom.width",
                                              "value": 72
                                          }
                                      ]
                                  },
                                  {
                                      "matcher": {
                                          "id": "byName",
                                          "options": "Available"
                                      },
                                      "properties": [
                                          {
                                              "id": "custom.width",
                                              "value": 88
                                          }
                                      ]
                                  },
                                  {
                                      "matcher": {
                                          "id": "byName",
                                          "options": "Used, %"
                                      },
                                      "properties": [
                                          {
                                              "id": "unit",
                                              "value": "percentunit"
                                          },
                                          {
                                              "id": "custom.displayMode",
                                              "value": "gradient-gauge"
                                          },
                                          {
                                              "id": "max",
                                              "value": 1
                                          },
                                          {
                                              "id": "min",
                                              "value": 0
                                          }
                                      ]
                                  }
                              ]
                          },
                          "gridPos": {

                          },
                          "id": 7,
                          "span": 6,
                          "targets": [
                              {
                                  "expr": "max by (mountpoint) (node_filesystem_size_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\", fstype!=\"\", mountpoint!=\"\"})\n",
                                  "format": "table",
                                  "instant": true,
                                  "intervalFactor": 2,
                                  "legendFormat": ""
                              },
                              {
                                  "expr": "max by (mountpoint) (node_filesystem_avail_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\", fstype!=\"\", mountpoint!=\"\"})\n",
                                  "format": "table",
                                  "instant": true,
                                  "intervalFactor": 2,
                                  "legendFormat": ""
                              }
                          ],
                          "title": "Disk Space Usage",
                          "transformations": [
                              {
                                  "id": "groupBy",
                                  "options": {
                                      "fields": {
                                          "Value #A": {
                                              "aggregations": [
                                                  "lastNotNull"
                                              ],
                                              "operation": "aggregate"
                                          },
                                          "Value #B": {
                                              "aggregations": [
                                                  "lastNotNull"
                                              ],
                                              "operation": "aggregate"
                                          },
                                          "mountpoint": {
                                              "aggregations": [

                                              ],
                                              "operation": "groupby"
                                          }
                                      }
                                  }
                              },
                              {
                                  "id": "merge",
                                  "options": {

                                  }
                              },
                              {
                                  "id": "calculateField",
                                  "options": {
                                      "alias": "Used",
                                      "binary": {
                                          "left": "Value #A (lastNotNull)",
                                          "operator": "-",
                                          "reducer": "sum",
                                          "right": "Value #B (lastNotNull)"
                                      },
                                      "mode": "binary",
                                      "reduce": {
                                          "reducer": "sum"
                                      }
                                  }
                              },
                              {
                                  "id": "calculateField",
                                  "options": {
                                      "alias": "Used, %",
                                      "binary": {
                                          "left": "Used",
                                          "operator": "/",
                                          "reducer": "sum",
                                          "right": "Value #A (lastNotNull)"
                                      },
                                      "mode": "binary",
                                      "reduce": {
                                          "reducer": "sum"
                                      }
                                  }
                              },
                              {
                                  "id": "organize",
                                  "options": {
                                      "excludeByName": {

                                      },
                                      "indexByName": {

                                      },
                                      "renameByName": {
                                          "Value #A (lastNotNull)": "Size",
                                          "Value #B (lastNotNull)": "Available",
                                          "mountpoint": "Mounted on"
                                      }
                                  }
                              },
                              {
                                  "id": "sortBy",
                                  "options": {
                                      "fields": {

                                      },
                                      "sort": [
                                          {
                                              "field": "Mounted on"
                                          }
                                      ]
                                  }
                              }
                          ],
                          "transparent": false,
                          "type": "table"
                      }
                  ],
                  "repeat": null,
                  "repeatIteration": null,
                  "repeatRowId": null,
                  "showTitle": true,
                  "title": "Disk",
                  "titleSize": "h6",
                  "type": "row"
              },
              {
                  "collapse": false,
                  "collapsed": false,
                  "panels": [
                      {
                          "aliasColors": {

                          },
                          "bars": false,
                          "dashLength": 10,
                          "dashes": false,
                          "datasource": "$datasource",
                          "description": "Network received (bits/s)",
                          "fill": 0,
                          "fillGradient": 0,
                          "gridPos": {

                          },
                          "id": 8,
                          "legend": {
                              "alignAsTable": false,
                              "avg": false,
                              "current": false,
                              "max": false,
                              "min": false,
                              "rightSide": false,
                              "show": true,
                              "sideWidth": null,
                              "total": false,
                              "values": false
                          },
                          "lines": true,
                          "linewidth": 1,
                          "links": [

                          ],
                          "nullPointMode": "null",
                          "percentage": false,
                          "pointradius": 5,
                          "points": false,
                          "renderer": "flot",
                          "repeat": null,
                          "seriesOverrides": [

                          ],
                          "spaceLength": 10,
                          "span": 6,
                          "stack": false,
                          "steppedLine": false,
                          "targets": [
                              {
                                  "expr": "rate(node_network_receive_bytes_total{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\", device!=\"lo\"}[$__rate_interval]) * 8",
                                  "format": "time_series",
                                  "intervalFactor": 1,
                                  "legendFormat": "{{device}}",
                                  "refId": "A"
                              }
                          ],
                          "thresholds": [

                          ],
                          "timeFrom": null,
                          "timeShift": null,
                          "title": "Network Received",
                          "tooltip": {
                              "shared": true,
                              "sort": 0,
                              "value_type": "individual"
                          },
                          "type": "graph",
                          "xaxis": {
                              "buckets": null,
                              "mode": "time",
                              "name": null,
                              "show": true,
                              "values": [

                              ]
                          },
                          "yaxes": [
                              {
                                  "format": "bps",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": 0,
                                  "show": true
                              },
                              {
                                  "format": "bps",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": 0,
                                  "show": true
                              }
                          ]
                      },
                      {
                          "aliasColors": {

                          },
                          "bars": false,
                          "dashLength": 10,
                          "dashes": false,
                          "datasource": "$datasource",
                          "description": "Network transmitted (bits/s)",
                          "fill": 0,
                          "fillGradient": 0,
                          "gridPos": {

                          },
                          "id": 9,
                          "legend": {
                              "alignAsTable": false,
                              "avg": false,
                              "current": false,
                              "max": false,
                              "min": false,
                              "rightSide": false,
                              "show": true,
                              "sideWidth": null,
                              "total": false,
                              "values": false
                          },
                          "lines": true,
                          "linewidth": 1,
                          "links": [

                          ],
                          "nullPointMode": "null",
                          "percentage": false,
                          "pointradius": 5,
                          "points": false,
                          "renderer": "flot",
                          "repeat": null,
                          "seriesOverrides": [

                          ],
                          "spaceLength": 10,
                          "span": 6,
                          "stack": false,
                          "steppedLine": false,
                          "targets": [
                              {
                                  "expr": "rate(node_network_transmit_bytes_total{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\", device!=\"lo\"}[$__rate_interval]) * 8",
                                  "format": "time_series",
                                  "intervalFactor": 1,
                                  "legendFormat": "{{device}}",
                                  "refId": "A"
                              }
                          ],
                          "thresholds": [

                          ],
                          "timeFrom": null,
                          "timeShift": null,
                          "title": "Network Transmitted",
                          "tooltip": {
                              "shared": true,
                              "sort": 0,
                              "value_type": "individual"
                          },
                          "type": "graph",
                          "xaxis": {
                              "buckets": null,
                              "mode": "time",
                              "name": null,
                              "show": true,
                              "values": [

                              ]
                          },
                          "yaxes": [
                              {
                                  "format": "bps",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": 0,
                                  "show": true
                              },
                              {
                                  "format": "bps",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": 0,
                                  "show": true
                              }
                          ]
                      }
                  ],
                  "repeat": null,
                  "repeatIteration": null,
                  "repeatRowId": null,
                  "showTitle": true,
                  "title": "Network",
                  "titleSize": "h6",
                  "type": "row"
              }
          ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
              "node-exporter-mixin"
          ],
          "templating": {
              "list": [
                  {
                      "current": {
                          "text": "default",
                          "value": "default"
                      },
                      "hide": 0,
                      "label": "Data Source",
                      "name": "datasource",
                      "options": [

                      ],
                      "query": "prometheus",
                      "refresh": 1,
                      "regex": "",
                      "type": "datasource"
                  },
                  {
                      "allValue": null,
                      "current": {

                      },
                      "datasource": "$datasource",
                      "hide": 2,
                      "includeAll": false,
                      "label": "Cluster",
                      "multi": false,
                      "name": "cluster",
                      "options": [

                      ],
                      "query": "label_values(node_uname_info{job=\"node-exporter\", sysname!=\"Darwin\"}, cluster)",
                      "refresh": 2,
                      "regex": "",
                      "sort": 0,
                      "tagValuesQuery": "",
                      "tags": [

                      ],
                      "tagsQuery": "",
                      "type": "query",
                      "useTags": false
                  },
                  {
                      "allValue": null,
                      "current": {

                      },
                      "datasource": "$datasource",
                      "hide": 0,
                      "includeAll": false,
                      "label": "Instance",
                      "multi": false,
                      "name": "instance",
                      "options": [

                      ],
                      "query": "label_values(node_uname_info{job=\"node-exporter\", cluster=\"$cluster\", sysname!=\"Darwin\"}, instance)",
                      "refresh": 2,
                      "regex": "",
                      "sort": 0,
                      "tagValuesQuery": "",
                      "tags": [

                      ],
                      "tagsQuery": "",
                      "type": "query",
                      "useTags": false
                  }
              ]
          },
          "time": {
              "from": "now-1h",
              "to": "now"
          },
          "timepicker": {
              "refresh_intervals": [
                  "5s",
                  "10s",
                  "30s",
                  "1m",
                  "5m",
                  "15m",
                  "30m",
                  "1h",
                  "2h",
                  "1d"
              ],
              "time_options": [
                  "5m",
                  "15m",
                  "1h",
                  "6h",
                  "12h",
                  "24h",
                  "2d",
                  "7d",
                  "30d"
              ]
          },
          "timezone": "utc",
          "title": "Node Exporter / AIX",
          "uid": "7e0a61e486f727d763fb1d86fdd629c2",
          "version": 0
      }
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"nodes-aix.json":"{\n    \"__inputs\": [\n\n    ],\n    \"__requires\": [\n\n    ],\n    \"annotations\": {\n        \"list\": [\n\n        ]\n    },\n    \"editable\": false,\n    \"gnetId\": null,\n    \"graphTooltip\": 1,\n    \"hideControls\": false,\n    \"id\": null,\n    \"links\": [\n\n    ],\n    \"refresh\": \"30s\",\n    \"rows\": [\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 2,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"(\\n  (1 - sum without (mode) (rate(node_cpu_seconds_total{job=\\\"node-exporter\\\", mode=~\\\"idle|iowait|steal\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"}[$__rate_interval])))\\n/ ignoring(cpu) group_left\\n  count without (cpu, mode) (node_cpu_seconds_total{job=\\\"node-exporter\\\", mode=\\\"idle\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"})\\n)\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 5,\n                            \"legendFormat\": \"{{cpu}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"CPU Usage\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": 1,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": 1,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 0,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 3,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"node_load1{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"}\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"1m load average\",\n                            \"refId\": \"A\"\n                        },\n                        {\n                            \"expr\": \"node_load5{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"}\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"5m load average\",\n                            \"refId\": \"B\"\n                        },\n                        {\n                            \"expr\": \"node_load15{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"}\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"15m load average\",\n                            \"refId\": \"C\"\n                        },\n                        {\n                            \"expr\": \"count(node_cpu_seconds_total{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\", mode=\\\"idle\\\"})\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"logical cores\",\n                            \"refId\": \"D\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Load Average\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"CPU\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 4,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 9,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"node_memory_total_bytes{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"}\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"Physical Memory\",\n                            \"refId\": \"A\"\n                        },\n                        {\n                            \"expr\": \"(\\n    node_memory_total_bytes{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"} -\\n    node_memory_available_bytes{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"}\\n)\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"Memory Used\",\n                            \"refId\": \"B\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Memory Usage\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"bytes\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"bytes\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"datasource\": \"$datasource\",\n                    \"fieldConfig\": {\n                        \"defaults\": {\n                            \"max\": 100,\n                            \"min\": 0,\n                            \"thresholds\": {\n                                \"mode\": \"absolute\",\n                                \"steps\": [\n                                    {\n                                        \"color\": \"rgba(50, 172, 45, 0.97)\"\n                                    },\n                                    {\n                                        \"color\": \"rgba(237, 129, 40, 0.89)\",\n                                        \"value\": 80\n                                    },\n                                    {\n                                        \"color\": \"rgba(245, 54, 54, 0.9)\",\n                                        \"value\": 90\n                                    }\n                                ]\n                            },\n                            \"unit\": \"percent\"\n                        }\n                    },\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 5,\n                    \"span\": 3,\n                    \"targets\": [\n                        {\n                            \"expr\": \"100 -\\n(\\n  avg(node_memory_available_bytes{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"}) /\\n  avg(node_memory_total_bytes{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"})\\n  * 100\\n)\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\"\n                        }\n                    ],\n                    \"title\": \"Memory Usage\",\n                    \"transparent\": false,\n                    \"type\": \"gauge\"\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Memory\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 0,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 6,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n                        {\n                            \"alias\": \"/ read| written/\",\n                            \"yaxis\": 1\n                        },\n                        {\n                            \"alias\": \"/ io time/\",\n                            \"yaxis\": 2\n                        }\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"rate(node_disk_read_bytes_total{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\", device=~\\\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\\\"}[$__rate_interval])\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 1,\n                            \"legendFormat\": \"{{device}} read\",\n                            \"refId\": \"A\"\n                        },\n                        {\n                            \"expr\": \"rate(node_disk_written_bytes_total{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\", device=~\\\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\\\"}[$__rate_interval])\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 1,\n                            \"legendFormat\": \"{{device}} written\",\n                            \"refId\": \"B\"\n                        },\n                        {\n                            \"expr\": \"rate(node_disk_io_time_seconds_total{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\", device=~\\\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\\\"}[$__rate_interval])\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 1,\n                            \"legendFormat\": \"{{device}} io time\",\n                            \"refId\": \"C\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Disk I/O\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"Bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"datasource\": \"$datasource\",\n                    \"fieldConfig\": {\n                        \"defaults\": {\n                            \"custom\": {\n\n                            },\n                            \"thresholds\": {\n                                \"mode\": \"absolute\",\n                                \"steps\": [\n                                    {\n                                        \"color\": \"green\"\n                                    },\n                                    {\n                                        \"color\": \"yellow\",\n                                        \"value\": 0.8\n                                    },\n                                    {\n                                        \"color\": \"red\",\n                                        \"value\": 0.9\n                                    }\n                                ]\n                            },\n                            \"unit\": \"decbytes\"\n                        },\n                        \"overrides\": [\n                            {\n                                \"matcher\": {\n                                    \"id\": \"byName\",\n                                    \"options\": \"Mounted on\"\n                                },\n                                \"properties\": [\n                                    {\n                                        \"id\": \"custom.width\",\n                                        \"value\": 260\n                                    }\n                                ]\n                            },\n                            {\n                                \"matcher\": {\n                                    \"id\": \"byName\",\n                                    \"options\": \"Size\"\n                                },\n                                \"properties\": [\n                                    {\n                                        \"id\": \"custom.width\",\n                                        \"value\": 93\n                                    }\n                                ]\n                            },\n                            {\n                                \"matcher\": {\n                                    \"id\": \"byName\",\n                                    \"options\": \"Used\"\n                                },\n                                \"properties\": [\n                                    {\n                                        \"id\": \"custom.width\",\n                                        \"value\": 72\n                                    }\n                                ]\n                            },\n                            {\n                                \"matcher\": {\n                                    \"id\": \"byName\",\n                                    \"options\": \"Available\"\n                                },\n                                \"properties\": [\n                                    {\n                                        \"id\": \"custom.width\",\n                                        \"value\": 88\n                                    }\n                                ]\n                            },\n                            {\n                                \"matcher\": {\n                                    \"id\": \"byName\",\n                                    \"options\": \"Used, %\"\n                                },\n                                \"properties\": [\n                                    {\n                                        \"id\": \"unit\",\n                                        \"value\": \"percentunit\"\n                                    },\n                                    {\n                                        \"id\": \"custom.displayMode\",\n                                        \"value\": \"gradient-gauge\"\n                                    },\n                                    {\n                                        \"id\": \"max\",\n                                        \"value\": 1\n                                    },\n                                    {\n                                        \"id\": \"min\",\n                                        \"value\": 0\n                                    }\n                                ]\n                            }\n                        ]\n                    },\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 7,\n                    \"span\": 6,\n                    \"targets\": [\n                        {\n                            \"expr\": \"max by (mountpoint) (node_filesystem_size_bytes{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\", fstype!=\\\"\\\", mountpoint!=\\\"\\\"})\\n\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\"\n                        },\n                        {\n                            \"expr\": \"max by (mountpoint) (node_filesystem_avail_bytes{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\", fstype!=\\\"\\\", mountpoint!=\\\"\\\"})\\n\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\"\n                        }\n                    ],\n                    \"title\": \"Disk Space Usage\",\n                    \"transformations\": [\n                        {\n                            \"id\": \"groupBy\",\n                            \"options\": {\n                                \"fields\": {\n                                    \"Value #A\": {\n                                        \"aggregations\": [\n                                            \"lastNotNull\"\n                                        ],\n                                        \"operation\": \"aggregate\"\n                                    },\n                                    \"Value #B\": {\n                                        \"aggregations\": [\n                                            \"lastNotNull\"\n                                        ],\n                                        \"operation\": \"aggregate\"\n                                    },\n                                    \"mountpoint\": {\n                                        \"aggregations\": [\n\n                                        ],\n                                        \"operation\": \"groupby\"\n                                    }\n                                }\n                            }\n                        },\n                        {\n                            \"id\": \"merge\",\n                            \"options\": {\n\n                            }\n                        },\n                        {\n                            \"id\": \"calculateField\",\n                            \"options\": {\n                                \"alias\": \"Used\",\n                                \"binary\": {\n                                    \"left\": \"Value #A (lastNotNull)\",\n                                    \"operator\": \"-\",\n                                    \"reducer\": \"sum\",\n                                    \"right\": \"Value #B (lastNotNull)\"\n                                },\n                                \"mode\": \"binary\",\n                                \"reduce\": {\n                                    \"reducer\": \"sum\"\n                                }\n                            }\n                        },\n                        {\n                            \"id\": \"calculateField\",\n                            \"options\": {\n                                \"alias\": \"Used, %\",\n                                \"binary\": {\n                                    \"left\": \"Used\",\n                                    \"operator\": \"/\",\n                                    \"reducer\": \"sum\",\n                                    \"right\": \"Value #A (lastNotNull)\"\n                                },\n                                \"mode\": \"binary\",\n                                \"reduce\": {\n                                    \"reducer\": \"sum\"\n                                }\n                            }\n                        },\n                        {\n                            \"id\": \"organize\",\n                            \"options\": {\n                                \"excludeByName\": {\n\n                                },\n                                \"indexByName\": {\n\n                                },\n                                \"renameByName\": {\n                                    \"Value #A (lastNotNull)\": \"Size\",\n                                    \"Value #B (lastNotNull)\": \"Available\",\n                                    \"mountpoint\": \"Mounted on\"\n                                }\n                            }\n                        },\n                        {\n                            \"id\": \"sortBy\",\n                            \"options\": {\n                                \"fields\": {\n\n                                },\n                                \"sort\": [\n                                    {\n                                        \"field\": \"Mounted on\"\n                                    }\n                                ]\n                            }\n                        }\n                    ],\n                    \"transparent\": false,\n                    \"type\": \"table\"\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Disk\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"description\": \"Network received (bits/s)\",\n                    \"fill\": 0,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 8,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"rate(node_network_receive_bytes_total{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\", device!=\\\"lo\\\"}[$__rate_interval]) * 8\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 1,\n                            \"legendFormat\": \"{{device}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Network Received\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"description\": \"Network transmitted (bits/s)\",\n                    \"fill\": 0,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 9,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"rate(node_network_transmit_bytes_total{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\", device!=\\\"lo\\\"}[$__rate_interval]) * 8\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 1,\n                            \"legendFormat\": \"{{device}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Network Transmitted\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Network\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        }\n    ],\n    \"schemaVersion\": 14,\n    \"style\": \"dark\",\n    \"tags\": [\n        \"node-exporter-mixin\"\n    ],\n    \"templating\": {\n        \"list\": [\n            {\n                \"current\": {\n                    \"text\": \"default\",\n                    \"value\": \"default\"\n                },\n                \"hide\": 0,\n                \"label\": \"Data Source\",\n                \"name\": \"datasource\",\n                \"options\": [\n\n                ],\n                \"query\": \"prometheus\",\n                \"refresh\": 1,\n                \"regex\": \"\",\n                \"type\": \"datasource\"\n            },\n            {\n                \"allValue\": null,\n                \"current\": {\n\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 2,\n                \"includeAll\": false,\n                \"label\": \"Cluster\",\n                \"multi\": false,\n                \"name\": \"cluster\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(node_uname_info{job=\\\"node-exporter\\\", sysname!=\\\"Darwin\\\"}, cluster)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"sort\": 0,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            },\n            {\n                \"allValue\": null,\n                \"current\": {\n\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 0,\n                \"includeAll\": false,\n                \"label\": \"Instance\",\n                \"multi\": false,\n                \"name\": \"instance\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(node_uname_info{job=\\\"node-exporter\\\", cluster=\\\"$cluster\\\", sysname!=\\\"Darwin\\\"}, instance)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"sort\": 0,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            }\n        ]\n    },\n    \"time\": {\n        \"from\": \"now-1h\",\n        \"to\": \"now\"\n    },\n    \"timepicker\": {\n        \"refresh_intervals\": [\n            \"5s\",\n            \"10s\",\n            \"30s\",\n            \"1m\",\n            \"5m\",\n            \"15m\",\n            \"30m\",\n            \"1h\",\n            \"2h\",\n            \"1d\"\n        ],\n        \"time_options\": [\n            \"5m\",\n            \"15m\",\n            \"1h\",\n            \"6h\",\n            \"12h\",\n            \"24h\",\n            \"2d\",\n            \"7d\",\n            \"30d\"\n        ]\n    },\n    \"timezone\": \"utc\",\n    \"title\": \"Node Exporter / AIX\",\n    \"uid\": \"7e0a61e486f727d763fb1d86fdd629c2\",\n    \"version\": 0\n}"},"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"grafana","app.kubernetes.io/name":"grafana","app.kubernetes.io/part-of":"kube-prometheus","app.kubernetes.io/version":"11.3.1"},"name":"grafana-dashboard-nodes-aix","namespace":"monitoring"}}
    creationTimestamp: "2024-11-25T14:40:26Z"
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 11.3.1
    name: grafana-dashboard-nodes-aix
    namespace: monitoring
    resourceVersion: "3039629"
    uid: 59e2577d-8d5c-4e4f-b6e7-79bfeb7d7f90
- apiVersion: v1
  data:
    nodes-darwin.json: |-
      {
          "__inputs": [

          ],
          "__requires": [

          ],
          "annotations": {
              "list": [

              ]
          },
          "editable": false,
          "gnetId": null,
          "graphTooltip": 1,
          "hideControls": false,
          "id": null,
          "links": [

          ],
          "refresh": "30s",
          "rows": [
              {
                  "collapse": false,
                  "collapsed": false,
                  "panels": [
                      {
                          "aliasColors": {

                          },
                          "bars": false,
                          "dashLength": 10,
                          "dashes": false,
                          "datasource": "$datasource",
                          "fill": 1,
                          "fillGradient": 0,
                          "gridPos": {

                          },
                          "id": 2,
                          "legend": {
                              "alignAsTable": false,
                              "avg": false,
                              "current": false,
                              "max": false,
                              "min": false,
                              "rightSide": false,
                              "show": true,
                              "sideWidth": null,
                              "total": false,
                              "values": false
                          },
                          "lines": true,
                          "linewidth": 1,
                          "links": [

                          ],
                          "nullPointMode": "null",
                          "percentage": false,
                          "pointradius": 5,
                          "points": false,
                          "renderer": "flot",
                          "repeat": null,
                          "seriesOverrides": [

                          ],
                          "spaceLength": 10,
                          "span": 6,
                          "stack": true,
                          "steppedLine": false,
                          "targets": [
                              {
                                  "expr": "(\n  (1 - sum without (mode) (rate(node_cpu_seconds_total{job=\"node-exporter\", mode=~\"idle|iowait|steal\", instance=\"$instance\", cluster=\"$cluster\"}[$__rate_interval])))\n/ ignoring(cpu) group_left\n  count without (cpu, mode) (node_cpu_seconds_total{job=\"node-exporter\", mode=\"idle\", instance=\"$instance\", cluster=\"$cluster\"})\n)\n",
                                  "format": "time_series",
                                  "intervalFactor": 5,
                                  "legendFormat": "{{cpu}}",
                                  "refId": "A"
                              }
                          ],
                          "thresholds": [

                          ],
                          "timeFrom": null,
                          "timeShift": null,
                          "title": "CPU Usage",
                          "tooltip": {
                              "shared": true,
                              "sort": 0,
                              "value_type": "individual"
                          },
                          "type": "graph",
                          "xaxis": {
                              "buckets": null,
                              "mode": "time",
                              "name": null,
                              "show": true,
                              "values": [

                              ]
                          },
                          "yaxes": [
                              {
                                  "format": "percentunit",
                                  "label": null,
                                  "logBase": 1,
                                  "max": 1,
                                  "min": 0,
                                  "show": true
                              },
                              {
                                  "format": "percentunit",
                                  "label": null,
                                  "logBase": 1,
                                  "max": 1,
                                  "min": 0,
                                  "show": true
                              }
                          ]
                      },
                      {
                          "aliasColors": {

                          },
                          "bars": false,
                          "dashLength": 10,
                          "dashes": false,
                          "datasource": "$datasource",
                          "fill": 0,
                          "fillGradient": 0,
                          "gridPos": {

                          },
                          "id": 3,
                          "legend": {
                              "alignAsTable": false,
                              "avg": false,
                              "current": false,
                              "max": false,
                              "min": false,
                              "rightSide": false,
                              "show": true,
                              "sideWidth": null,
                              "total": false,
                              "values": false
                          },
                          "lines": true,
                          "linewidth": 1,
                          "links": [

                          ],
                          "nullPointMode": "null",
                          "percentage": false,
                          "pointradius": 5,
                          "points": false,
                          "renderer": "flot",
                          "repeat": null,
                          "seriesOverrides": [

                          ],
                          "spaceLength": 10,
                          "span": 6,
                          "stack": false,
                          "steppedLine": false,
                          "targets": [
                              {
                                  "expr": "node_load1{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"}",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": "1m load average",
                                  "refId": "A"
                              },
                              {
                                  "expr": "node_load5{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"}",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": "5m load average",
                                  "refId": "B"
                              },
                              {
                                  "expr": "node_load15{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"}",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": "15m load average",
                                  "refId": "C"
                              },
                              {
                                  "expr": "count(node_cpu_seconds_total{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\", mode=\"idle\"})",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": "logical cores",
                                  "refId": "D"
                              }
                          ],
                          "thresholds": [

                          ],
                          "timeFrom": null,
                          "timeShift": null,
                          "title": "Load Average",
                          "tooltip": {
                              "shared": true,
                              "sort": 0,
                              "value_type": "individual"
                          },
                          "type": "graph",
                          "xaxis": {
                              "buckets": null,
                              "mode": "time",
                              "name": null,
                              "show": true,
                              "values": [

                              ]
                          },
                          "yaxes": [
                              {
                                  "format": "short",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": 0,
                                  "show": true
                              },
                              {
                                  "format": "short",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": 0,
                                  "show": true
                              }
                          ]
                      }
                  ],
                  "repeat": null,
                  "repeatIteration": null,
                  "repeatRowId": null,
                  "showTitle": true,
                  "title": "CPU",
                  "titleSize": "h6",
                  "type": "row"
              },
              {
                  "collapse": false,
                  "collapsed": false,
                  "panels": [
                      {
                          "aliasColors": {

                          },
                          "bars": false,
                          "dashLength": 10,
                          "dashes": false,
                          "datasource": "$datasource",
                          "fill": 1,
                          "fillGradient": 0,
                          "gridPos": {

                          },
                          "id": 4,
                          "legend": {
                              "alignAsTable": false,
                              "avg": false,
                              "current": false,
                              "max": false,
                              "min": false,
                              "rightSide": false,
                              "show": true,
                              "sideWidth": null,
                              "total": false,
                              "values": false
                          },
                          "lines": true,
                          "linewidth": 1,
                          "links": [

                          ],
                          "nullPointMode": "null",
                          "percentage": false,
                          "pointradius": 5,
                          "points": false,
                          "renderer": "flot",
                          "repeat": null,
                          "seriesOverrides": [

                          ],
                          "spaceLength": 10,
                          "span": 9,
                          "stack": false,
                          "steppedLine": false,
                          "targets": [
                              {
                                  "expr": "node_memory_total_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"}",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": "Physical Memory",
                                  "refId": "A"
                              },
                              {
                                  "expr": "(\n    node_memory_internal_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"} -\n    node_memory_purgeable_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"} +\n    node_memory_wired_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"} +\n    node_memory_compressed_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"}\n)\n",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": "Memory Used",
                                  "refId": "B"
                              },
                              {
                                  "expr": "(\n    node_memory_internal_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"} -\n    node_memory_purgeable_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"}\n)\n",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": "App Memory",
                                  "refId": "C"
                              },
                              {
                                  "expr": "node_memory_wired_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"}",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": "Wired Memory",
                                  "refId": "D"
                              },
                              {
                                  "expr": "node_memory_compressed_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"}",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": "Compressed",
                                  "refId": "E"
                              }
                          ],
                          "thresholds": [

                          ],
                          "timeFrom": null,
                          "timeShift": null,
                          "title": "Memory Usage",
                          "tooltip": {
                              "shared": true,
                              "sort": 0,
                              "value_type": "individual"
                          },
                          "type": "graph",
                          "xaxis": {
                              "buckets": null,
                              "mode": "time",
                              "name": null,
                              "show": true,
                              "values": [

                              ]
                          },
                          "yaxes": [
                              {
                                  "format": "bytes",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": 0,
                                  "show": true
                              },
                              {
                                  "format": "bytes",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": 0,
                                  "show": true
                              }
                          ]
                      },
                      {
                          "datasource": "$datasource",
                          "fieldConfig": {
                              "defaults": {
                                  "max": 100,
                                  "min": 0,
                                  "thresholds": {
                                      "mode": "absolute",
                                      "steps": [
                                          {
                                              "color": "rgba(50, 172, 45, 0.97)"
                                          },
                                          {
                                              "color": "rgba(237, 129, 40, 0.89)",
                                              "value": 80
                                          },
                                          {
                                              "color": "rgba(245, 54, 54, 0.9)",
                                              "value": 90
                                          }
                                      ]
                                  },
                                  "unit": "percent"
                              }
                          },
                          "gridPos": {

                          },
                          "id": 5,
                          "span": 3,
                          "targets": [
                              {
                                  "expr": "(\n    (\n      avg(node_memory_internal_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"}) -\n      avg(node_memory_purgeable_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"}) +\n      avg(node_memory_wired_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"}) +\n      avg(node_memory_compressed_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"})\n    ) /\n    avg(node_memory_total_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"})\n)\n*\n100\n",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": ""
                              }
                          ],
                          "title": "Memory Usage",
                          "transparent": false,
                          "type": "gauge"
                      }
                  ],
                  "repeat": null,
                  "repeatIteration": null,
                  "repeatRowId": null,
                  "showTitle": true,
                  "title": "Memory",
                  "titleSize": "h6",
                  "type": "row"
              },
              {
                  "collapse": false,
                  "collapsed": false,
                  "panels": [
                      {
                          "aliasColors": {

                          },
                          "bars": false,
                          "dashLength": 10,
                          "dashes": false,
                          "datasource": "$datasource",
                          "fill": 0,
                          "fillGradient": 0,
                          "gridPos": {

                          },
                          "id": 6,
                          "legend": {
                              "alignAsTable": false,
                              "avg": false,
                              "current": false,
                              "max": false,
                              "min": false,
                              "rightSide": false,
                              "show": true,
                              "sideWidth": null,
                              "total": false,
                              "values": false
                          },
                          "lines": true,
                          "linewidth": 1,
                          "links": [

                          ],
                          "nullPointMode": "null",
                          "percentage": false,
                          "pointradius": 5,
                          "points": false,
                          "renderer": "flot",
                          "repeat": null,
                          "seriesOverrides": [
                              {
                                  "alias": "/ read| written/",
                                  "yaxis": 1
                              },
                              {
                                  "alias": "/ io time/",
                                  "yaxis": 2
                              }
                          ],
                          "spaceLength": 10,
                          "span": 6,
                          "stack": false,
                          "steppedLine": false,
                          "targets": [
                              {
                                  "expr": "rate(node_disk_read_bytes_total{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\"}[$__rate_interval])",
                                  "format": "time_series",
                                  "intervalFactor": 1,
                                  "legendFormat": "{{device}} read",
                                  "refId": "A"
                              },
                              {
                                  "expr": "rate(node_disk_written_bytes_total{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\"}[$__rate_interval])",
                                  "format": "time_series",
                                  "intervalFactor": 1,
                                  "legendFormat": "{{device}} written",
                                  "refId": "B"
                              },
                              {
                                  "expr": "rate(node_disk_io_time_seconds_total{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\"}[$__rate_interval])",
                                  "format": "time_series",
                                  "intervalFactor": 1,
                                  "legendFormat": "{{device}} io time",
                                  "refId": "C"
                              }
                          ],
                          "thresholds": [

                          ],
                          "timeFrom": null,
                          "timeShift": null,
                          "title": "Disk I/O",
                          "tooltip": {
                              "shared": true,
                              "sort": 0,
                              "value_type": "individual"
                          },
                          "type": "graph",
                          "xaxis": {
                              "buckets": null,
                              "mode": "time",
                              "name": null,
                              "show": true,
                              "values": [

                              ]
                          },
                          "yaxes": [
                              {
                                  "format": "Bps",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              },
                              {
                                  "format": "percentunit",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              }
                          ]
                      },
                      {
                          "datasource": "$datasource",
                          "fieldConfig": {
                              "defaults": {
                                  "custom": {

                                  },
                                  "thresholds": {
                                      "mode": "absolute",
                                      "steps": [
                                          {
                                              "color": "green"
                                          },
                                          {
                                              "color": "yellow",
                                              "value": 0.8
                                          },
                                          {
                                              "color": "red",
                                              "value": 0.9
                                          }
                                      ]
                                  },
                                  "unit": "decbytes"
                              },
                              "overrides": [
                                  {
                                      "matcher": {
                                          "id": "byName",
                                          "options": "Mounted on"
                                      },
                                      "properties": [
                                          {
                                              "id": "custom.width",
                                              "value": 260
                                          }
                                      ]
                                  },
                                  {
                                      "matcher": {
                                          "id": "byName",
                                          "options": "Size"
                                      },
                                      "properties": [
                                          {
                                              "id": "custom.width",
                                              "value": 93
                                          }
                                      ]
                                  },
                                  {
                                      "matcher": {
                                          "id": "byName",
                                          "options": "Used"
                                      },
                                      "properties": [
                                          {
                                              "id": "custom.width",
                                              "value": 72
                                          }
                                      ]
                                  },
                                  {
                                      "matcher": {
                                          "id": "byName",
                                          "options": "Available"
                                      },
                                      "properties": [
                                          {
                                              "id": "custom.width",
                                              "value": 88
                                          }
                                      ]
                                  },
                                  {
                                      "matcher": {
                                          "id": "byName",
                                          "options": "Used, %"
                                      },
                                      "properties": [
                                          {
                                              "id": "unit",
                                              "value": "percentunit"
                                          },
                                          {
                                              "id": "custom.displayMode",
                                              "value": "gradient-gauge"
                                          },
                                          {
                                              "id": "max",
                                              "value": 1
                                          },
                                          {
                                              "id": "min",
                                              "value": 0
                                          }
                                      ]
                                  }
                              ]
                          },
                          "gridPos": {

                          },
                          "id": 7,
                          "span": 6,
                          "targets": [
                              {
                                  "expr": "max by (mountpoint) (node_filesystem_size_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\", fstype!=\"\", mountpoint!=\"\"})\n",
                                  "format": "table",
                                  "instant": true,
                                  "intervalFactor": 2,
                                  "legendFormat": ""
                              },
                              {
                                  "expr": "max by (mountpoint) (node_filesystem_avail_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\", fstype!=\"\", mountpoint!=\"\"})\n",
                                  "format": "table",
                                  "instant": true,
                                  "intervalFactor": 2,
                                  "legendFormat": ""
                              }
                          ],
                          "title": "Disk Space Usage",
                          "transformations": [
                              {
                                  "id": "groupBy",
                                  "options": {
                                      "fields": {
                                          "Value #A": {
                                              "aggregations": [
                                                  "lastNotNull"
                                              ],
                                              "operation": "aggregate"
                                          },
                                          "Value #B": {
                                              "aggregations": [
                                                  "lastNotNull"
                                              ],
                                              "operation": "aggregate"
                                          },
                                          "mountpoint": {
                                              "aggregations": [

                                              ],
                                              "operation": "groupby"
                                          }
                                      }
                                  }
                              },
                              {
                                  "id": "merge",
                                  "options": {

                                  }
                              },
                              {
                                  "id": "calculateField",
                                  "options": {
                                      "alias": "Used",
                                      "binary": {
                                          "left": "Value #A (lastNotNull)",
                                          "operator": "-",
                                          "reducer": "sum",
                                          "right": "Value #B (lastNotNull)"
                                      },
                                      "mode": "binary",
                                      "reduce": {
                                          "reducer": "sum"
                                      }
                                  }
                              },
                              {
                                  "id": "calculateField",
                                  "options": {
                                      "alias": "Used, %",
                                      "binary": {
                                          "left": "Used",
                                          "operator": "/",
                                          "reducer": "sum",
                                          "right": "Value #A (lastNotNull)"
                                      },
                                      "mode": "binary",
                                      "reduce": {
                                          "reducer": "sum"
                                      }
                                  }
                              },
                              {
                                  "id": "organize",
                                  "options": {
                                      "excludeByName": {

                                      },
                                      "indexByName": {

                                      },
                                      "renameByName": {
                                          "Value #A (lastNotNull)": "Size",
                                          "Value #B (lastNotNull)": "Available",
                                          "mountpoint": "Mounted on"
                                      }
                                  }
                              },
                              {
                                  "id": "sortBy",
                                  "options": {
                                      "fields": {

                                      },
                                      "sort": [
                                          {
                                              "field": "Mounted on"
                                          }
                                      ]
                                  }
                              }
                          ],
                          "transparent": false,
                          "type": "table"
                      }
                  ],
                  "repeat": null,
                  "repeatIteration": null,
                  "repeatRowId": null,
                  "showTitle": true,
                  "title": "Disk",
                  "titleSize": "h6",
                  "type": "row"
              },
              {
                  "collapse": false,
                  "collapsed": false,
                  "panels": [
                      {
                          "aliasColors": {

                          },
                          "bars": false,
                          "dashLength": 10,
                          "dashes": false,
                          "datasource": "$datasource",
                          "description": "Network received (bits/s)",
                          "fill": 0,
                          "fillGradient": 0,
                          "gridPos": {

                          },
                          "id": 8,
                          "legend": {
                              "alignAsTable": false,
                              "avg": false,
                              "current": false,
                              "max": false,
                              "min": false,
                              "rightSide": false,
                              "show": true,
                              "sideWidth": null,
                              "total": false,
                              "values": false
                          },
                          "lines": true,
                          "linewidth": 1,
                          "links": [

                          ],
                          "nullPointMode": "null",
                          "percentage": false,
                          "pointradius": 5,
                          "points": false,
                          "renderer": "flot",
                          "repeat": null,
                          "seriesOverrides": [

                          ],
                          "spaceLength": 10,
                          "span": 6,
                          "stack": false,
                          "steppedLine": false,
                          "targets": [
                              {
                                  "expr": "rate(node_network_receive_bytes_total{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\", device!=\"lo\"}[$__rate_interval]) * 8",
                                  "format": "time_series",
                                  "intervalFactor": 1,
                                  "legendFormat": "{{device}}",
                                  "refId": "A"
                              }
                          ],
                          "thresholds": [

                          ],
                          "timeFrom": null,
                          "timeShift": null,
                          "title": "Network Received",
                          "tooltip": {
                              "shared": true,
                              "sort": 0,
                              "value_type": "individual"
                          },
                          "type": "graph",
                          "xaxis": {
                              "buckets": null,
                              "mode": "time",
                              "name": null,
                              "show": true,
                              "values": [

                              ]
                          },
                          "yaxes": [
                              {
                                  "format": "bps",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": 0,
                                  "show": true
                              },
                              {
                                  "format": "bps",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": 0,
                                  "show": true
                              }
                          ]
                      },
                      {
                          "aliasColors": {

                          },
                          "bars": false,
                          "dashLength": 10,
                          "dashes": false,
                          "datasource": "$datasource",
                          "description": "Network transmitted (bits/s)",
                          "fill": 0,
                          "fillGradient": 0,
                          "gridPos": {

                          },
                          "id": 9,
                          "legend": {
                              "alignAsTable": false,
                              "avg": false,
                              "current": false,
                              "max": false,
                              "min": false,
                              "rightSide": false,
                              "show": true,
                              "sideWidth": null,
                              "total": false,
                              "values": false
                          },
                          "lines": true,
                          "linewidth": 1,
                          "links": [

                          ],
                          "nullPointMode": "null",
                          "percentage": false,
                          "pointradius": 5,
                          "points": false,
                          "renderer": "flot",
                          "repeat": null,
                          "seriesOverrides": [

                          ],
                          "spaceLength": 10,
                          "span": 6,
                          "stack": false,
                          "steppedLine": false,
                          "targets": [
                              {
                                  "expr": "rate(node_network_transmit_bytes_total{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\", device!=\"lo\"}[$__rate_interval]) * 8",
                                  "format": "time_series",
                                  "intervalFactor": 1,
                                  "legendFormat": "{{device}}",
                                  "refId": "A"
                              }
                          ],
                          "thresholds": [

                          ],
                          "timeFrom": null,
                          "timeShift": null,
                          "title": "Network Transmitted",
                          "tooltip": {
                              "shared": true,
                              "sort": 0,
                              "value_type": "individual"
                          },
                          "type": "graph",
                          "xaxis": {
                              "buckets": null,
                              "mode": "time",
                              "name": null,
                              "show": true,
                              "values": [

                              ]
                          },
                          "yaxes": [
                              {
                                  "format": "bps",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": 0,
                                  "show": true
                              },
                              {
                                  "format": "bps",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": 0,
                                  "show": true
                              }
                          ]
                      }
                  ],
                  "repeat": null,
                  "repeatIteration": null,
                  "repeatRowId": null,
                  "showTitle": true,
                  "title": "Network",
                  "titleSize": "h6",
                  "type": "row"
              }
          ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
              "node-exporter-mixin"
          ],
          "templating": {
              "list": [
                  {
                      "current": {
                          "text": "default",
                          "value": "default"
                      },
                      "hide": 0,
                      "label": "Data Source",
                      "name": "datasource",
                      "options": [

                      ],
                      "query": "prometheus",
                      "refresh": 1,
                      "regex": "",
                      "type": "datasource"
                  },
                  {
                      "allValue": null,
                      "current": {

                      },
                      "datasource": "$datasource",
                      "hide": 2,
                      "includeAll": false,
                      "label": "Cluster",
                      "multi": false,
                      "name": "cluster",
                      "options": [

                      ],
                      "query": "label_values(node_uname_info{job=\"node-exporter\", sysname=\"Darwin\"}, cluster)",
                      "refresh": 2,
                      "regex": "",
                      "sort": 0,
                      "tagValuesQuery": "",
                      "tags": [

                      ],
                      "tagsQuery": "",
                      "type": "query",
                      "useTags": false
                  },
                  {
                      "allValue": null,
                      "current": {

                      },
                      "datasource": "$datasource",
                      "hide": 0,
                      "includeAll": false,
                      "label": "Instance",
                      "multi": false,
                      "name": "instance",
                      "options": [

                      ],
                      "query": "label_values(node_uname_info{job=\"node-exporter\", cluster=\"$cluster\", sysname=\"Darwin\"}, instance)",
                      "refresh": 2,
                      "regex": "",
                      "sort": 0,
                      "tagValuesQuery": "",
                      "tags": [

                      ],
                      "tagsQuery": "",
                      "type": "query",
                      "useTags": false
                  }
              ]
          },
          "time": {
              "from": "now-1h",
              "to": "now"
          },
          "timepicker": {
              "refresh_intervals": [
                  "5s",
                  "10s",
                  "30s",
                  "1m",
                  "5m",
                  "15m",
                  "30m",
                  "1h",
                  "2h",
                  "1d"
              ],
              "time_options": [
                  "5m",
                  "15m",
                  "1h",
                  "6h",
                  "12h",
                  "24h",
                  "2d",
                  "7d",
                  "30d"
              ]
          },
          "timezone": "utc",
          "title": "Node Exporter / MacOS",
          "uid": "629701ea43bf69291922ea45f4a87d37",
          "version": 0
      }
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"nodes-darwin.json":"{\n    \"__inputs\": [\n\n    ],\n    \"__requires\": [\n\n    ],\n    \"annotations\": {\n        \"list\": [\n\n        ]\n    },\n    \"editable\": false,\n    \"gnetId\": null,\n    \"graphTooltip\": 1,\n    \"hideControls\": false,\n    \"id\": null,\n    \"links\": [\n\n    ],\n    \"refresh\": \"30s\",\n    \"rows\": [\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 2,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"(\\n  (1 - sum without (mode) (rate(node_cpu_seconds_total{job=\\\"node-exporter\\\", mode=~\\\"idle|iowait|steal\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"}[$__rate_interval])))\\n/ ignoring(cpu) group_left\\n  count without (cpu, mode) (node_cpu_seconds_total{job=\\\"node-exporter\\\", mode=\\\"idle\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"})\\n)\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 5,\n                            \"legendFormat\": \"{{cpu}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"CPU Usage\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": 1,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": 1,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 0,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 3,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"node_load1{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"}\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"1m load average\",\n                            \"refId\": \"A\"\n                        },\n                        {\n                            \"expr\": \"node_load5{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"}\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"5m load average\",\n                            \"refId\": \"B\"\n                        },\n                        {\n                            \"expr\": \"node_load15{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"}\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"15m load average\",\n                            \"refId\": \"C\"\n                        },\n                        {\n                            \"expr\": \"count(node_cpu_seconds_total{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\", mode=\\\"idle\\\"})\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"logical cores\",\n                            \"refId\": \"D\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Load Average\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"CPU\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 4,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 9,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"node_memory_total_bytes{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"}\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"Physical Memory\",\n                            \"refId\": \"A\"\n                        },\n                        {\n                            \"expr\": \"(\\n    node_memory_internal_bytes{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"} -\\n    node_memory_purgeable_bytes{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"} +\\n    node_memory_wired_bytes{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"} +\\n    node_memory_compressed_bytes{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"}\\n)\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"Memory Used\",\n                            \"refId\": \"B\"\n                        },\n                        {\n                            \"expr\": \"(\\n    node_memory_internal_bytes{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"} -\\n    node_memory_purgeable_bytes{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"}\\n)\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"App Memory\",\n                            \"refId\": \"C\"\n                        },\n                        {\n                            \"expr\": \"node_memory_wired_bytes{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"}\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"Wired Memory\",\n                            \"refId\": \"D\"\n                        },\n                        {\n                            \"expr\": \"node_memory_compressed_bytes{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"}\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"Compressed\",\n                            \"refId\": \"E\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Memory Usage\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"bytes\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"bytes\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"datasource\": \"$datasource\",\n                    \"fieldConfig\": {\n                        \"defaults\": {\n                            \"max\": 100,\n                            \"min\": 0,\n                            \"thresholds\": {\n                                \"mode\": \"absolute\",\n                                \"steps\": [\n                                    {\n                                        \"color\": \"rgba(50, 172, 45, 0.97)\"\n                                    },\n                                    {\n                                        \"color\": \"rgba(237, 129, 40, 0.89)\",\n                                        \"value\": 80\n                                    },\n                                    {\n                                        \"color\": \"rgba(245, 54, 54, 0.9)\",\n                                        \"value\": 90\n                                    }\n                                ]\n                            },\n                            \"unit\": \"percent\"\n                        }\n                    },\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 5,\n                    \"span\": 3,\n                    \"targets\": [\n                        {\n                            \"expr\": \"(\\n    (\\n      avg(node_memory_internal_bytes{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"}) -\\n      avg(node_memory_purgeable_bytes{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"}) +\\n      avg(node_memory_wired_bytes{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"}) +\\n      avg(node_memory_compressed_bytes{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"})\\n    ) /\\n    avg(node_memory_total_bytes{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\"})\\n)\\n*\\n100\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\"\n                        }\n                    ],\n                    \"title\": \"Memory Usage\",\n                    \"transparent\": false,\n                    \"type\": \"gauge\"\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Memory\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 0,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 6,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n                        {\n                            \"alias\": \"/ read| written/\",\n                            \"yaxis\": 1\n                        },\n                        {\n                            \"alias\": \"/ io time/\",\n                            \"yaxis\": 2\n                        }\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"rate(node_disk_read_bytes_total{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\", device=~\\\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\\\"}[$__rate_interval])\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 1,\n                            \"legendFormat\": \"{{device}} read\",\n                            \"refId\": \"A\"\n                        },\n                        {\n                            \"expr\": \"rate(node_disk_written_bytes_total{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\", device=~\\\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\\\"}[$__rate_interval])\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 1,\n                            \"legendFormat\": \"{{device}} written\",\n                            \"refId\": \"B\"\n                        },\n                        {\n                            \"expr\": \"rate(node_disk_io_time_seconds_total{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\", device=~\\\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\\\"}[$__rate_interval])\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 1,\n                            \"legendFormat\": \"{{device}} io time\",\n                            \"refId\": \"C\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Disk I/O\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"Bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"percentunit\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"datasource\": \"$datasource\",\n                    \"fieldConfig\": {\n                        \"defaults\": {\n                            \"custom\": {\n\n                            },\n                            \"thresholds\": {\n                                \"mode\": \"absolute\",\n                                \"steps\": [\n                                    {\n                                        \"color\": \"green\"\n                                    },\n                                    {\n                                        \"color\": \"yellow\",\n                                        \"value\": 0.8\n                                    },\n                                    {\n                                        \"color\": \"red\",\n                                        \"value\": 0.9\n                                    }\n                                ]\n                            },\n                            \"unit\": \"decbytes\"\n                        },\n                        \"overrides\": [\n                            {\n                                \"matcher\": {\n                                    \"id\": \"byName\",\n                                    \"options\": \"Mounted on\"\n                                },\n                                \"properties\": [\n                                    {\n                                        \"id\": \"custom.width\",\n                                        \"value\": 260\n                                    }\n                                ]\n                            },\n                            {\n                                \"matcher\": {\n                                    \"id\": \"byName\",\n                                    \"options\": \"Size\"\n                                },\n                                \"properties\": [\n                                    {\n                                        \"id\": \"custom.width\",\n                                        \"value\": 93\n                                    }\n                                ]\n                            },\n                            {\n                                \"matcher\": {\n                                    \"id\": \"byName\",\n                                    \"options\": \"Used\"\n                                },\n                                \"properties\": [\n                                    {\n                                        \"id\": \"custom.width\",\n                                        \"value\": 72\n                                    }\n                                ]\n                            },\n                            {\n                                \"matcher\": {\n                                    \"id\": \"byName\",\n                                    \"options\": \"Available\"\n                                },\n                                \"properties\": [\n                                    {\n                                        \"id\": \"custom.width\",\n                                        \"value\": 88\n                                    }\n                                ]\n                            },\n                            {\n                                \"matcher\": {\n                                    \"id\": \"byName\",\n                                    \"options\": \"Used, %\"\n                                },\n                                \"properties\": [\n                                    {\n                                        \"id\": \"unit\",\n                                        \"value\": \"percentunit\"\n                                    },\n                                    {\n                                        \"id\": \"custom.displayMode\",\n                                        \"value\": \"gradient-gauge\"\n                                    },\n                                    {\n                                        \"id\": \"max\",\n                                        \"value\": 1\n                                    },\n                                    {\n                                        \"id\": \"min\",\n                                        \"value\": 0\n                                    }\n                                ]\n                            }\n                        ]\n                    },\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 7,\n                    \"span\": 6,\n                    \"targets\": [\n                        {\n                            \"expr\": \"max by (mountpoint) (node_filesystem_size_bytes{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\", fstype!=\\\"\\\", mountpoint!=\\\"\\\"})\\n\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\"\n                        },\n                        {\n                            \"expr\": \"max by (mountpoint) (node_filesystem_avail_bytes{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\", fstype!=\\\"\\\", mountpoint!=\\\"\\\"})\\n\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"\"\n                        }\n                    ],\n                    \"title\": \"Disk Space Usage\",\n                    \"transformations\": [\n                        {\n                            \"id\": \"groupBy\",\n                            \"options\": {\n                                \"fields\": {\n                                    \"Value #A\": {\n                                        \"aggregations\": [\n                                            \"lastNotNull\"\n                                        ],\n                                        \"operation\": \"aggregate\"\n                                    },\n                                    \"Value #B\": {\n                                        \"aggregations\": [\n                                            \"lastNotNull\"\n                                        ],\n                                        \"operation\": \"aggregate\"\n                                    },\n                                    \"mountpoint\": {\n                                        \"aggregations\": [\n\n                                        ],\n                                        \"operation\": \"groupby\"\n                                    }\n                                }\n                            }\n                        },\n                        {\n                            \"id\": \"merge\",\n                            \"options\": {\n\n                            }\n                        },\n                        {\n                            \"id\": \"calculateField\",\n                            \"options\": {\n                                \"alias\": \"Used\",\n                                \"binary\": {\n                                    \"left\": \"Value #A (lastNotNull)\",\n                                    \"operator\": \"-\",\n                                    \"reducer\": \"sum\",\n                                    \"right\": \"Value #B (lastNotNull)\"\n                                },\n                                \"mode\": \"binary\",\n                                \"reduce\": {\n                                    \"reducer\": \"sum\"\n                                }\n                            }\n                        },\n                        {\n                            \"id\": \"calculateField\",\n                            \"options\": {\n                                \"alias\": \"Used, %\",\n                                \"binary\": {\n                                    \"left\": \"Used\",\n                                    \"operator\": \"/\",\n                                    \"reducer\": \"sum\",\n                                    \"right\": \"Value #A (lastNotNull)\"\n                                },\n                                \"mode\": \"binary\",\n                                \"reduce\": {\n                                    \"reducer\": \"sum\"\n                                }\n                            }\n                        },\n                        {\n                            \"id\": \"organize\",\n                            \"options\": {\n                                \"excludeByName\": {\n\n                                },\n                                \"indexByName\": {\n\n                                },\n                                \"renameByName\": {\n                                    \"Value #A (lastNotNull)\": \"Size\",\n                                    \"Value #B (lastNotNull)\": \"Available\",\n                                    \"mountpoint\": \"Mounted on\"\n                                }\n                            }\n                        },\n                        {\n                            \"id\": \"sortBy\",\n                            \"options\": {\n                                \"fields\": {\n\n                                },\n                                \"sort\": [\n                                    {\n                                        \"field\": \"Mounted on\"\n                                    }\n                                ]\n                            }\n                        }\n                    ],\n                    \"transparent\": false,\n                    \"type\": \"table\"\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Disk\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"description\": \"Network received (bits/s)\",\n                    \"fill\": 0,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 8,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"rate(node_network_receive_bytes_total{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\", device!=\\\"lo\\\"}[$__rate_interval]) * 8\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 1,\n                            \"legendFormat\": \"{{device}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Network Received\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"description\": \"Network transmitted (bits/s)\",\n                    \"fill\": 0,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 9,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"rate(node_network_transmit_bytes_total{job=\\\"node-exporter\\\", instance=\\\"$instance\\\", cluster=\\\"$cluster\\\", device!=\\\"lo\\\"}[$__rate_interval]) * 8\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 1,\n                            \"legendFormat\": \"{{device}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Network Transmitted\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"bps\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Network\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        }\n    ],\n    \"schemaVersion\": 14,\n    \"style\": \"dark\",\n    \"tags\": [\n        \"node-exporter-mixin\"\n    ],\n    \"templating\": {\n        \"list\": [\n            {\n                \"current\": {\n                    \"text\": \"default\",\n                    \"value\": \"default\"\n                },\n                \"hide\": 0,\n                \"label\": \"Data Source\",\n                \"name\": \"datasource\",\n                \"options\": [\n\n                ],\n                \"query\": \"prometheus\",\n                \"refresh\": 1,\n                \"regex\": \"\",\n                \"type\": \"datasource\"\n            },\n            {\n                \"allValue\": null,\n                \"current\": {\n\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 2,\n                \"includeAll\": false,\n                \"label\": \"Cluster\",\n                \"multi\": false,\n                \"name\": \"cluster\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(node_uname_info{job=\\\"node-exporter\\\", sysname=\\\"Darwin\\\"}, cluster)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"sort\": 0,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            },\n            {\n                \"allValue\": null,\n                \"current\": {\n\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 0,\n                \"includeAll\": false,\n                \"label\": \"Instance\",\n                \"multi\": false,\n                \"name\": \"instance\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(node_uname_info{job=\\\"node-exporter\\\", cluster=\\\"$cluster\\\", sysname=\\\"Darwin\\\"}, instance)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"sort\": 0,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            }\n        ]\n    },\n    \"time\": {\n        \"from\": \"now-1h\",\n        \"to\": \"now\"\n    },\n    \"timepicker\": {\n        \"refresh_intervals\": [\n            \"5s\",\n            \"10s\",\n            \"30s\",\n            \"1m\",\n            \"5m\",\n            \"15m\",\n            \"30m\",\n            \"1h\",\n            \"2h\",\n            \"1d\"\n        ],\n        \"time_options\": [\n            \"5m\",\n            \"15m\",\n            \"1h\",\n            \"6h\",\n            \"12h\",\n            \"24h\",\n            \"2d\",\n            \"7d\",\n            \"30d\"\n        ]\n    },\n    \"timezone\": \"utc\",\n    \"title\": \"Node Exporter / MacOS\",\n    \"uid\": \"629701ea43bf69291922ea45f4a87d37\",\n    \"version\": 0\n}"},"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"grafana","app.kubernetes.io/name":"grafana","app.kubernetes.io/part-of":"kube-prometheus","app.kubernetes.io/version":"11.3.1"},"name":"grafana-dashboard-nodes-darwin","namespace":"monitoring"}}
    creationTimestamp: "2024-11-25T14:40:26Z"
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 11.3.1
    name: grafana-dashboard-nodes-darwin
    namespace: monitoring
    resourceVersion: "3039630"
    uid: f007e3a6-d2ce-4cc8-bf6b-1a0694838d92
- apiVersion: v1
  data:
    persistentvolumesusage.json: |-
      {
          "editable": false,
          "links": [
              {
                  "asDropdown": true,
                  "includeVars": true,
                  "keepTime": true,
                  "tags": [
                      "kubernetes-mixin"
                  ],
                  "targetBlank": false,
                  "title": "Kubernetes",
                  "type": "dashboards"
              }
          ],
          "panels": [
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "bytes"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 18,
                      "y": 0
                  },
                  "id": 1,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "(\n  sum without(instance, node) (topk(1, (kubelet_volume_stats_capacity_bytes{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})))\n  -\n  sum without(instance, node) (topk(1, (kubelet_volume_stats_available_bytes{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})))\n)\n",
                          "legendFormat": "Used Space"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum without(instance, node) (topk(1, (kubelet_volume_stats_available_bytes{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})))\n",
                          "legendFormat": "Free Space"
                      }
                  ],
                  "title": "Volume Space Usage",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "color": {
                              "mode": "thresholds"
                          },
                          "max": 100,
                          "min": 0,
                          "thresholds": {
                              "mode": "absolute",
                              "steps": [
                                  {
                                      "color": "green",
                                      "value": 0
                                  },
                                  {
                                      "color": "orange",
                                      "value": 80
                                  },
                                  {
                                      "color": "red",
                                      "value": 90
                                  }
                              ]
                          },
                          "unit": "percent"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 6,
                      "x": 18,
                      "y": 0
                  },
                  "id": 2,
                  "interval": "1m",
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "max without(instance,node) (\n(\n  topk(1, kubelet_volume_stats_capacity_bytes{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})\n  -\n  topk(1, kubelet_volume_stats_available_bytes{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})\n)\n/\ntopk(1, kubelet_volume_stats_capacity_bytes{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})\n* 100)\n",
                          "instant": true
                      }
                  ],
                  "title": "Volume Space Usage",
                  "type": "gauge"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "none"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 18,
                      "y": 7
                  },
                  "id": 3,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum without(instance, node) (topk(1, (kubelet_volume_stats_inodes_used{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})))",
                          "legendFormat": "Used inodes"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "(\n  sum without(instance, node) (topk(1, (kubelet_volume_stats_inodes{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})))\n  -\n  sum without(instance, node) (topk(1, (kubelet_volume_stats_inodes_used{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})))\n)\n",
                          "legendFormat": "Free inodes"
                      }
                  ],
                  "title": "Volume inodes Usage",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "color": {
                              "mode": "thresholds"
                          },
                          "max": 100,
                          "min": 0,
                          "thresholds": {
                              "mode": "absolute",
                              "steps": [
                                  {
                                      "color": "green",
                                      "value": 0
                                  },
                                  {
                                      "color": "orange",
                                      "value": 80
                                  },
                                  {
                                      "color": "red",
                                      "value": 90
                                  }
                              ]
                          },
                          "unit": "percent"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 6,
                      "x": 18,
                      "y": 7
                  },
                  "id": 4,
                  "interval": "1m",
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "max without(instance,node) (\ntopk(1, kubelet_volume_stats_inodes_used{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})\n/\ntopk(1, kubelet_volume_stats_inodes{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})\n* 100)\n",
                          "instant": true
                      }
                  ],
                  "title": "Volume inodes Usage",
                  "type": "gauge"
              }
          ],
          "refresh": "10s",
          "schemaVersion": 39,
          "tags": [
              "kubernetes-mixin"
          ],
          "templating": {
              "list": [
                  {
                      "current": {
                          "selected": true,
                          "text": "default",
                          "value": "default"
                      },
                      "hide": 0,
                      "label": "Data source",
                      "name": "datasource",
                      "query": "prometheus",
                      "regex": "",
                      "type": "datasource"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "cluster",
                      "name": "cluster",
                      "query": "label_values(kubelet_volume_stats_capacity_bytes{job=\"kubelet\", metrics_path=\"/metrics\"}, cluster)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "Namespace",
                      "name": "namespace",
                      "query": "label_values(kubelet_volume_stats_capacity_bytes{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\"}, namespace)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "PersistentVolumeClaim",
                      "name": "volume",
                      "query": "label_values(kubelet_volume_stats_capacity_bytes{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", namespace=\"$namespace\"}, persistentvolumeclaim)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  }
              ]
          },
          "time": {
              "from": "now-1h",
              "to": "now"
          },
          "timezone": "UTC",
          "title": "Kubernetes / Persistent Volumes",
          "uid": "919b92a8e8041bd567af9edab12c840c"
      }
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"persistentvolumesusage.json":"{\n    \"editable\": false,\n    \"links\": [\n        {\n            \"asDropdown\": true,\n            \"includeVars\": true,\n            \"keepTime\": true,\n            \"tags\": [\n                \"kubernetes-mixin\"\n            ],\n            \"targetBlank\": false,\n            \"title\": \"Kubernetes\",\n            \"type\": \"dashboards\"\n        }\n    ],\n    \"panels\": [\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"bytes\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 18,\n                \"y\": 0\n            },\n            \"id\": 1,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"(\\n  sum without(instance, node) (topk(1, (kubelet_volume_stats_capacity_bytes{cluster=\\\"$cluster\\\", job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\", namespace=\\\"$namespace\\\", persistentvolumeclaim=\\\"$volume\\\"})))\\n  -\\n  sum without(instance, node) (topk(1, (kubelet_volume_stats_available_bytes{cluster=\\\"$cluster\\\", job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\", namespace=\\\"$namespace\\\", persistentvolumeclaim=\\\"$volume\\\"})))\\n)\\n\",\n                    \"legendFormat\": \"Used Space\"\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum without(instance, node) (topk(1, (kubelet_volume_stats_available_bytes{cluster=\\\"$cluster\\\", job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\", namespace=\\\"$namespace\\\", persistentvolumeclaim=\\\"$volume\\\"})))\\n\",\n                    \"legendFormat\": \"Free Space\"\n                }\n            ],\n            \"title\": \"Volume Space Usage\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"color\": {\n                        \"mode\": \"thresholds\"\n                    },\n                    \"max\": 100,\n                    \"min\": 0,\n                    \"thresholds\": {\n                        \"mode\": \"absolute\",\n                        \"steps\": [\n                            {\n                                \"color\": \"green\",\n                                \"value\": 0\n                            },\n                            {\n                                \"color\": \"orange\",\n                                \"value\": 80\n                            },\n                            {\n                                \"color\": \"red\",\n                                \"value\": 90\n                            }\n                        ]\n                    },\n                    \"unit\": \"percent\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 6,\n                \"x\": 18,\n                \"y\": 0\n            },\n            \"id\": 2,\n            \"interval\": \"1m\",\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"max without(instance,node) (\\n(\\n  topk(1, kubelet_volume_stats_capacity_bytes{cluster=\\\"$cluster\\\", job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\", namespace=\\\"$namespace\\\", persistentvolumeclaim=\\\"$volume\\\"})\\n  -\\n  topk(1, kubelet_volume_stats_available_bytes{cluster=\\\"$cluster\\\", job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\", namespace=\\\"$namespace\\\", persistentvolumeclaim=\\\"$volume\\\"})\\n)\\n/\\ntopk(1, kubelet_volume_stats_capacity_bytes{cluster=\\\"$cluster\\\", job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\", namespace=\\\"$namespace\\\", persistentvolumeclaim=\\\"$volume\\\"})\\n* 100)\\n\",\n                    \"instant\": true\n                }\n            ],\n            \"title\": \"Volume Space Usage\",\n            \"type\": \"gauge\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"none\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 18,\n                \"y\": 7\n            },\n            \"id\": 3,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum without(instance, node) (topk(1, (kubelet_volume_stats_inodes_used{cluster=\\\"$cluster\\\", job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\", namespace=\\\"$namespace\\\", persistentvolumeclaim=\\\"$volume\\\"})))\",\n                    \"legendFormat\": \"Used inodes\"\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"(\\n  sum without(instance, node) (topk(1, (kubelet_volume_stats_inodes{cluster=\\\"$cluster\\\", job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\", namespace=\\\"$namespace\\\", persistentvolumeclaim=\\\"$volume\\\"})))\\n  -\\n  sum without(instance, node) (topk(1, (kubelet_volume_stats_inodes_used{cluster=\\\"$cluster\\\", job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\", namespace=\\\"$namespace\\\", persistentvolumeclaim=\\\"$volume\\\"})))\\n)\\n\",\n                    \"legendFormat\": \"Free inodes\"\n                }\n            ],\n            \"title\": \"Volume inodes Usage\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"color\": {\n                        \"mode\": \"thresholds\"\n                    },\n                    \"max\": 100,\n                    \"min\": 0,\n                    \"thresholds\": {\n                        \"mode\": \"absolute\",\n                        \"steps\": [\n                            {\n                                \"color\": \"green\",\n                                \"value\": 0\n                            },\n                            {\n                                \"color\": \"orange\",\n                                \"value\": 80\n                            },\n                            {\n                                \"color\": \"red\",\n                                \"value\": 90\n                            }\n                        ]\n                    },\n                    \"unit\": \"percent\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 6,\n                \"x\": 18,\n                \"y\": 7\n            },\n            \"id\": 4,\n            \"interval\": \"1m\",\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"max without(instance,node) (\\ntopk(1, kubelet_volume_stats_inodes_used{cluster=\\\"$cluster\\\", job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\", namespace=\\\"$namespace\\\", persistentvolumeclaim=\\\"$volume\\\"})\\n/\\ntopk(1, kubelet_volume_stats_inodes{cluster=\\\"$cluster\\\", job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\", namespace=\\\"$namespace\\\", persistentvolumeclaim=\\\"$volume\\\"})\\n* 100)\\n\",\n                    \"instant\": true\n                }\n            ],\n            \"title\": \"Volume inodes Usage\",\n            \"type\": \"gauge\"\n        }\n    ],\n    \"refresh\": \"10s\",\n    \"schemaVersion\": 39,\n    \"tags\": [\n        \"kubernetes-mixin\"\n    ],\n    \"templating\": {\n        \"list\": [\n            {\n                \"current\": {\n                    \"selected\": true,\n                    \"text\": \"default\",\n                    \"value\": \"default\"\n                },\n                \"hide\": 0,\n                \"label\": \"Data source\",\n                \"name\": \"datasource\",\n                \"query\": \"prometheus\",\n                \"regex\": \"\",\n                \"type\": \"datasource\"\n            },\n            {\n                \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"${datasource}\"\n                },\n                \"hide\": 0,\n                \"label\": \"cluster\",\n                \"name\": \"cluster\",\n                \"query\": \"label_values(kubelet_volume_stats_capacity_bytes{job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\"}, cluster)\",\n                \"refresh\": 2,\n                \"sort\": 1,\n                \"type\": \"query\"\n            },\n            {\n                \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"${datasource}\"\n                },\n                \"hide\": 0,\n                \"label\": \"Namespace\",\n                \"name\": \"namespace\",\n                \"query\": \"label_values(kubelet_volume_stats_capacity_bytes{cluster=\\\"$cluster\\\", job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\"}, namespace)\",\n                \"refresh\": 2,\n                \"sort\": 1,\n                \"type\": \"query\"\n            },\n            {\n                \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"${datasource}\"\n                },\n                \"hide\": 0,\n                \"label\": \"PersistentVolumeClaim\",\n                \"name\": \"volume\",\n                \"query\": \"label_values(kubelet_volume_stats_capacity_bytes{cluster=\\\"$cluster\\\", job=\\\"kubelet\\\", metrics_path=\\\"/metrics\\\", namespace=\\\"$namespace\\\"}, persistentvolumeclaim)\",\n                \"refresh\": 2,\n                \"sort\": 1,\n                \"type\": \"query\"\n            }\n        ]\n    },\n    \"time\": {\n        \"from\": \"now-1h\",\n        \"to\": \"now\"\n    },\n    \"timezone\": \"UTC\",\n    \"title\": \"Kubernetes / Persistent Volumes\",\n    \"uid\": \"919b92a8e8041bd567af9edab12c840c\"\n}"},"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"grafana","app.kubernetes.io/name":"grafana","app.kubernetes.io/part-of":"kube-prometheus","app.kubernetes.io/version":"11.3.1"},"name":"grafana-dashboard-persistentvolumesusage","namespace":"monitoring"}}
    creationTimestamp: "2024-11-25T14:40:26Z"
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 11.3.1
    name: grafana-dashboard-persistentvolumesusage
    namespace: monitoring
    resourceVersion: "3039632"
    uid: c0df908c-4473-42fd-a34e-fd6ca3093838
- apiVersion: v1
  data:
    pod-total.json: |-
      {
          "editable": false,
          "links": [
              {
                  "asDropdown": true,
                  "includeVars": true,
                  "keepTime": true,
                  "tags": [
                      "kubernetes-mixin"
                  ],
                  "targetBlank": false,
                  "title": "Kubernetes",
                  "type": "dashboards"
              }
          ],
          "panels": [
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "displayName": "$pod",
                          "max": 10000000000,
                          "min": 0,
                          "thresholds": {
                              "steps": [
                                  {
                                      "color": "dark-green",
                                      "index": 0,
                                      "value": null
                                  },
                                  {
                                      "color": "dark-yellow",
                                      "index": 1,
                                      "value": 5000000000
                                  },
                                  {
                                      "color": "dark-red",
                                      "index": 2,
                                      "value": 7000000000
                                  }
                              ]
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 0,
                      "y": 0
                  },
                  "id": 1,
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\", pod=~\"$pod\"}[$__rate_interval]))",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Current Rate of Bytes Received",
                  "type": "gauge"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "displayName": "$pod",
                          "max": 10000000000,
                          "min": 0,
                          "thresholds": {
                              "steps": [
                                  {
                                      "color": "dark-green",
                                      "index": 0,
                                      "value": null
                                  },
                                  {
                                      "color": "dark-yellow",
                                      "index": 1,
                                      "value": 5000000000
                                  },
                                  {
                                      "color": "dark-red",
                                      "index": 2,
                                      "value": 7000000000
                                  }
                              ]
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 12,
                      "y": 0
                  },
                  "id": 2,
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\", pod=~\"$pod\"}[$__rate_interval]))",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Current Rate of Bytes Transmitted",
                  "type": "gauge"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "showPoints": "never"
                          },
                          "unit": "binBps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 0,
                      "y": 9
                  },
                  "id": 3,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\", pod=~\"$pod\"}[$__rate_interval])) by (pod)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Receive Bandwidth",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "showPoints": "never"
                          },
                          "unit": "binBps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 12,
                      "y": 9
                  },
                  "id": 4,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\", pod=~\"$pod\"}[$__rate_interval])) by (pod)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Transmit Bandwidth",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "showPoints": "never"
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 0,
                      "y": 18
                  },
                  "id": 5,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(container_network_receive_packets_total{cluster=\"$cluster\",namespace=~\"$namespace\", pod=~\"$pod\"}[$__rate_interval])) by (pod)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Received Packets",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "showPoints": "never"
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 12,
                      "y": 18
                  },
                  "id": 6,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(container_network_transmit_packets_total{cluster=\"$cluster\",namespace=~\"$namespace\", pod=~\"$pod\"}[$__rate_interval])) by (pod)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Transmitted Packets",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "showPoints": "never"
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 0,
                      "y": 27
                  },
                  "id": 7,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(container_network_receive_packets_dropped_total{cluster=\"$cluster\",namespace=~\"$namespace\", pod=~\"$pod\"}[$__rate_interval])) by (pod)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Received Packets Dropped",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "showPoints": "never"
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 12,
                      "y": 27
                  },
                  "id": 8,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(container_network_transmit_packets_dropped_total{cluster=\"$cluster\",namespace=~\"$namespace\", pod=~\"$pod\"}[$__rate_interval])) by (pod)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Transmitted Packets Dropped",
                  "type": "timeseries"
              }
          ],
          "refresh": "10s",
          "schemaVersion": 39,
          "tags": [
              "kubernetes-mixin"
          ],
          "templating": {
              "list": [
                  {
                      "current": {
                          "selected": true,
                          "text": "default",
                          "value": "default"
                      },
                      "hide": 0,
                      "label": "Data source",
                      "name": "datasource",
                      "query": "prometheus",
                      "regex": "",
                      "type": "datasource"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "cluster",
                      "name": "cluster",
                      "query": "label_values(up{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\"}, cluster)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  },
                  {
                      "allValue": ".+",
                      "current": {
                          "selected": false,
                          "text": "kube-system",
                          "value": "kube-system"
                      },
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "includeAll": true,
                      "label": "namespace",
                      "name": "namespace",
                      "query": "label_values(container_network_receive_packets_total{cluster=\"$cluster\"}, namespace)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  },
                  {
                      "current": {
                          "selected": false,
                          "text": "kube-system",
                          "value": "kube-system"
                      },
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "pod",
                      "name": "pod",
                      "query": "label_values(container_network_receive_packets_total{cluster=\"$cluster\",namespace=~\"$namespace\"}, pod)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  }
              ]
          },
          "time": {
              "from": "now-1h",
              "to": "now"
          },
          "timezone": "UTC",
          "title": "Kubernetes / Networking / Pod",
          "uid": "7a18067ce943a40ae25454675c19ff5c"
      }
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"pod-total.json":"{\n    \"editable\": false,\n    \"links\": [\n        {\n            \"asDropdown\": true,\n            \"includeVars\": true,\n            \"keepTime\": true,\n            \"tags\": [\n                \"kubernetes-mixin\"\n            ],\n            \"targetBlank\": false,\n            \"title\": \"Kubernetes\",\n            \"type\": \"dashboards\"\n        }\n    ],\n    \"panels\": [\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"displayName\": \"$pod\",\n                    \"max\": 10000000000,\n                    \"min\": 0,\n                    \"thresholds\": {\n                        \"steps\": [\n                            {\n                                \"color\": \"dark-green\",\n                                \"index\": 0,\n                                \"value\": null\n                            },\n                            {\n                                \"color\": \"dark-yellow\",\n                                \"index\": 1,\n                                \"value\": 5000000000\n                            },\n                            {\n                                \"color\": \"dark-red\",\n                                \"index\": 2,\n                                \"value\": 7000000000\n                            }\n                        ]\n                    },\n                    \"unit\": \"Bps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 0\n            },\n            \"id\": 1,\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(container_network_receive_bytes_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", pod=~\\\"$pod\\\"}[$__rate_interval]))\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Current Rate of Bytes Received\",\n            \"type\": \"gauge\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"displayName\": \"$pod\",\n                    \"max\": 10000000000,\n                    \"min\": 0,\n                    \"thresholds\": {\n                        \"steps\": [\n                            {\n                                \"color\": \"dark-green\",\n                                \"index\": 0,\n                                \"value\": null\n                            },\n                            {\n                                \"color\": \"dark-yellow\",\n                                \"index\": 1,\n                                \"value\": 5000000000\n                            },\n                            {\n                                \"color\": \"dark-red\",\n                                \"index\": 2,\n                                \"value\": 7000000000\n                            }\n                        ]\n                    },\n                    \"unit\": \"Bps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 0\n            },\n            \"id\": 2,\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(container_network_transmit_bytes_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", pod=~\\\"$pod\\\"}[$__rate_interval]))\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Current Rate of Bytes Transmitted\",\n            \"type\": \"gauge\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"showPoints\": \"never\"\n                    },\n                    \"unit\": \"binBps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 9\n            },\n            \"id\": 3,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(container_network_receive_bytes_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", pod=~\\\"$pod\\\"}[$__rate_interval])) by (pod)\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Receive Bandwidth\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"showPoints\": \"never\"\n                    },\n                    \"unit\": \"binBps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 9\n            },\n            \"id\": 4,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(container_network_transmit_bytes_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", pod=~\\\"$pod\\\"}[$__rate_interval])) by (pod)\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Transmit Bandwidth\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"showPoints\": \"never\"\n                    },\n                    \"unit\": \"pps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 18\n            },\n            \"id\": 5,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(container_network_receive_packets_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", pod=~\\\"$pod\\\"}[$__rate_interval])) by (pod)\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Rate of Received Packets\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"showPoints\": \"never\"\n                    },\n                    \"unit\": \"pps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 18\n            },\n            \"id\": 6,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(container_network_transmit_packets_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", pod=~\\\"$pod\\\"}[$__rate_interval])) by (pod)\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Rate of Transmitted Packets\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"showPoints\": \"never\"\n                    },\n                    \"unit\": \"pps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 27\n            },\n            \"id\": 7,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(container_network_receive_packets_dropped_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", pod=~\\\"$pod\\\"}[$__rate_interval])) by (pod)\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Rate of Received Packets Dropped\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"showPoints\": \"never\"\n                    },\n                    \"unit\": \"pps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 27\n            },\n            \"id\": 8,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(container_network_transmit_packets_dropped_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", pod=~\\\"$pod\\\"}[$__rate_interval])) by (pod)\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Rate of Transmitted Packets Dropped\",\n            \"type\": \"timeseries\"\n        }\n    ],\n    \"refresh\": \"10s\",\n    \"schemaVersion\": 39,\n    \"tags\": [\n        \"kubernetes-mixin\"\n    ],\n    \"templating\": {\n        \"list\": [\n            {\n                \"current\": {\n                    \"selected\": true,\n                    \"text\": \"default\",\n                    \"value\": \"default\"\n                },\n                \"hide\": 0,\n                \"label\": \"Data source\",\n                \"name\": \"datasource\",\n                \"query\": \"prometheus\",\n                \"regex\": \"\",\n                \"type\": \"datasource\"\n            },\n            {\n                \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"${datasource}\"\n                },\n                \"hide\": 0,\n                \"label\": \"cluster\",\n                \"name\": \"cluster\",\n                \"query\": \"label_values(up{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\"}, cluster)\",\n                \"refresh\": 2,\n                \"sort\": 1,\n                \"type\": \"query\"\n            },\n            {\n                \"allValue\": \".+\",\n                \"current\": {\n                    \"selected\": false,\n                    \"text\": \"kube-system\",\n                    \"value\": \"kube-system\"\n                },\n                \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"${datasource}\"\n                },\n                \"hide\": 0,\n                \"includeAll\": true,\n                \"label\": \"namespace\",\n                \"name\": \"namespace\",\n                \"query\": \"label_values(container_network_receive_packets_total{cluster=\\\"$cluster\\\"}, namespace)\",\n                \"refresh\": 2,\n                \"sort\": 1,\n                \"type\": \"query\"\n            },\n            {\n                \"current\": {\n                    \"selected\": false,\n                    \"text\": \"kube-system\",\n                    \"value\": \"kube-system\"\n                },\n                \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"${datasource}\"\n                },\n                \"hide\": 0,\n                \"label\": \"pod\",\n                \"name\": \"pod\",\n                \"query\": \"label_values(container_network_receive_packets_total{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}, pod)\",\n                \"refresh\": 2,\n                \"sort\": 1,\n                \"type\": \"query\"\n            }\n        ]\n    },\n    \"time\": {\n        \"from\": \"now-1h\",\n        \"to\": \"now\"\n    },\n    \"timezone\": \"UTC\",\n    \"title\": \"Kubernetes / Networking / Pod\",\n    \"uid\": \"7a18067ce943a40ae25454675c19ff5c\"\n}"},"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"grafana","app.kubernetes.io/name":"grafana","app.kubernetes.io/part-of":"kube-prometheus","app.kubernetes.io/version":"11.3.1"},"name":"grafana-dashboard-pod-total","namespace":"monitoring"}}
    creationTimestamp: "2024-11-25T14:40:26Z"
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 11.3.1
    name: grafana-dashboard-pod-total
    namespace: monitoring
    resourceVersion: "3039633"
    uid: 4775aa81-ec39-428b-9a77-f3df9569d930
- apiVersion: v1
  data:
    prometheus.json: |-
      {
          "annotations": {
              "list": [

              ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 0,
          "hideControls": false,
          "links": [

          ],
          "refresh": "60s",
          "rows": [
              {
                  "collapse": false,
                  "height": "250px",
                  "panels": [
                      {
                          "aliasColors": {

                          },
                          "bars": false,
                          "dashLength": 10,
                          "dashes": false,
                          "datasource": "$datasource",
                          "fill": 1,
                          "id": 1,
                          "legend": {
                              "avg": false,
                              "current": false,
                              "max": false,
                              "min": false,
                              "show": true,
                              "total": false,
                              "values": false
                          },
                          "lines": true,
                          "linewidth": 1,
                          "links": [

                          ],
                          "nullPointMode": "null as zero",
                          "percentage": false,
                          "pointradius": 5,
                          "points": false,
                          "renderer": "flot",
                          "seriesOverrides": [

                          ],
                          "spaceLength": 10,
                          "span": 12,
                          "stack": false,
                          "steppedLine": false,
                          "styles": [
                              {
                                  "alias": "Time",
                                  "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                  "pattern": "Time",
                                  "type": "hidden"
                              },
                              {
                                  "alias": "Count",
                                  "colorMode": null,
                                  "colors": [

                                  ],
                                  "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                  "decimals": 2,
                                  "link": false,
                                  "linkTargetBlank": false,
                                  "linkTooltip": "Drill down",
                                  "linkUrl": "",
                                  "pattern": "Value #A",
                                  "thresholds": [

                                  ],
                                  "type": "hidden",
                                  "unit": "short"
                              },
                              {
                                  "alias": "Uptime",
                                  "colorMode": null,
                                  "colors": [

                                  ],
                                  "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                  "decimals": 2,
                                  "link": false,
                                  "linkTargetBlank": false,
                                  "linkTooltip": "Drill down",
                                  "linkUrl": "",
                                  "pattern": "Value #B",
                                  "thresholds": [

                                  ],
                                  "type": "number",
                                  "unit": "s"
                              },
                              {
                                  "alias": "Cluster",
                                  "colorMode": null,
                                  "colors": [

                                  ],
                                  "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                  "decimals": 2,
                                  "link": false,
                                  "linkTargetBlank": false,
                                  "linkTooltip": "Drill down",
                                  "linkUrl": "",
                                  "pattern": "cluster",
                                  "thresholds": [

                                  ],
                                  "type": "number",
                                  "unit": "short"
                              },
                              {
                                  "alias": "Instance",
                                  "colorMode": null,
                                  "colors": [

                                  ],
                                  "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                  "decimals": 2,
                                  "link": false,
                                  "linkTargetBlank": false,
                                  "linkTooltip": "Drill down",
                                  "linkUrl": "",
                                  "pattern": "instance",
                                  "thresholds": [

                                  ],
                                  "type": "number",
                                  "unit": "short"
                              },
                              {
                                  "alias": "Job",
                                  "colorMode": null,
                                  "colors": [

                                  ],
                                  "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                  "decimals": 2,
                                  "link": false,
                                  "linkTargetBlank": false,
                                  "linkTooltip": "Drill down",
                                  "linkUrl": "",
                                  "pattern": "job",
                                  "thresholds": [

                                  ],
                                  "type": "number",
                                  "unit": "short"
                              },
                              {
                                  "alias": "Version",
                                  "colorMode": null,
                                  "colors": [

                                  ],
                                  "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                  "decimals": 2,
                                  "link": false,
                                  "linkTargetBlank": false,
                                  "linkTooltip": "Drill down",
                                  "linkUrl": "",
                                  "pattern": "version",
                                  "thresholds": [

                                  ],
                                  "type": "number",
                                  "unit": "short"
                              },
                              {
                                  "alias": "",
                                  "colorMode": null,
                                  "colors": [

                                  ],
                                  "dateFormat": "YYYY-MM-DD HH:mm:ss",
                                  "decimals": 2,
                                  "pattern": "/.*/",
                                  "thresholds": [

                                  ],
                                  "type": "string",
                                  "unit": "short"
                              }
                          ],
                          "targets": [
                              {
                                  "expr": "count by (cluster, job, instance, version) (prometheus_build_info{cluster=~\"$cluster\", job=~\"$job\", instance=~\"$instance\"})",
                                  "format": "table",
                                  "instant": true,
                                  "legendFormat": "",
                                  "refId": "A"
                              },
                              {
                                  "expr": "max by (cluster, job, instance) (time() - process_start_time_seconds{cluster=~\"$cluster\", job=~\"$job\", instance=~\"$instance\"})",
                                  "format": "table",
                                  "instant": true,
                                  "legendFormat": "",
                                  "refId": "B"
                              }
                          ],
                          "thresholds": [

                          ],
                          "timeFrom": null,
                          "timeShift": null,
                          "title": "Prometheus Stats",
                          "tooltip": {
                              "shared": true,
                              "sort": 2,
                              "value_type": "individual"
                          },
                          "transform": "table",
                          "type": "table",
                          "xaxis": {
                              "buckets": null,
                              "mode": "time",
                              "name": null,
                              "show": true,
                              "values": [

                              ]
                          },
                          "yaxes": [
                              {
                                  "format": "short",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": 0,
                                  "show": true
                              },
                              {
                                  "format": "short",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": false
                              }
                          ]
                      }
                  ],
                  "repeat": null,
                  "repeatIteration": null,
                  "repeatRowId": null,
                  "showTitle": true,
                  "title": "Prometheus Stats",
                  "titleSize": "h6"
              },
              {
                  "collapse": false,
                  "height": "250px",
                  "panels": [
                      {
                          "aliasColors": {

                          },
                          "bars": false,
                          "dashLength": 10,
                          "dashes": false,
                          "datasource": "$datasource",
                          "fill": 1,
                          "id": 2,
                          "legend": {
                              "avg": false,
                              "current": false,
                              "max": false,
                              "min": false,
                              "show": true,
                              "total": false,
                              "values": false
                          },
                          "lines": true,
                          "linewidth": 1,
                          "links": [

                          ],
                          "nullPointMode": "null as zero",
                          "percentage": false,
                          "pointradius": 5,
                          "points": false,
                          "renderer": "flot",
                          "seriesOverrides": [

                          ],
                          "spaceLength": 10,
                          "span": 6,
                          "stack": false,
                          "steppedLine": false,
                          "targets": [
                              {
                                  "expr": "sum(rate(prometheus_target_sync_length_seconds_sum{cluster=~\"$cluster\",job=~\"$job\",instance=~\"$instance\"}[5m])) by (cluster, job, scrape_job, instance) * 1e3",
                                  "format": "time_series",
                                  "legendFormat": "{{cluster}}:{{job}}:{{instance}}:{{scrape_job}}",
                                  "legendLink": null
                              }
                          ],
                          "thresholds": [

                          ],
                          "timeFrom": null,
                          "timeShift": null,
                          "title": "Target Sync",
                          "tooltip": {
                              "shared": true,
                              "sort": 2,
                              "value_type": "individual"
                          },
                          "type": "graph",
                          "xaxis": {
                              "buckets": null,
                              "mode": "time",
                              "name": null,
                              "show": true,
                              "values": [

                              ]
                          },
                          "yaxes": [
                              {
                                  "format": "ms",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": 0,
                                  "show": true
                              },
                              {
                                  "format": "short",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": false
                              }
                          ]
                      },
                      {
                          "aliasColors": {

                          },
                          "bars": false,
                          "dashLength": 10,
                          "dashes": false,
                          "datasource": "$datasource",
                          "fill": 10,
                          "id": 3,
                          "legend": {
                              "avg": false,
                              "current": false,
                              "max": false,
                              "min": false,
                              "show": true,
                              "total": false,
                              "values": false
                          },
                          "lines": true,
                          "linewidth": 0,
                          "links": [

                          ],
                          "nullPointMode": "null as zero",
                          "percentage": false,
                          "pointradius": 5,
                          "points": false,
                          "renderer": "flot",
                          "seriesOverrides": [

                          ],
                          "spaceLength": 10,
                          "span": 6,
                          "stack": true,
                          "steppedLine": false,
                          "targets": [
                              {
                                  "expr": "sum by (cluster, job, instance) (prometheus_sd_discovered_targets{cluster=~\"$cluster\", job=~\"$job\",instance=~\"$instance\"})",
                                  "format": "time_series",
                                  "legendFormat": "{{cluster}}:{{job}}:{{instance}}",
                                  "legendLink": null
                              }
                          ],
                          "thresholds": [

                          ],
                          "timeFrom": null,
                          "timeShift": null,
                          "title": "Targets",
                          "tooltip": {
                              "shared": true,
                              "sort": 2,
                              "value_type": "individual"
                          },
                          "type": "graph",
                          "xaxis": {
                              "buckets": null,
                              "mode": "time",
                              "name": null,
                              "show": true,
                              "values": [

                              ]
                          },
                          "yaxes": [
                              {
                                  "format": "short",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": 0,
                                  "show": true
                              },
                              {
                                  "format": "short",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": false
                              }
                          ]
                      }
                  ],
                  "repeat": null,
                  "repeatIteration": null,
                  "repeatRowId": null,
                  "showTitle": true,
                  "title": "Discovery",
                  "titleSize": "h6"
              },
              {
                  "collapse": false,
                  "height": "250px",
                  "panels": [
                      {
                          "aliasColors": {

                          },
                          "bars": false,
                          "dashLength": 10,
                          "dashes": false,
                          "datasource": "$datasource",
                          "fill": 1,
                          "id": 4,
                          "legend": {
                              "avg": false,
                              "current": false,
                              "max": false,
                              "min": false,
                              "show": true,
                              "total": false,
                              "values": false
                          },
                          "lines": true,
                          "linewidth": 1,
                          "links": [

                          ],
                          "nullPointMode": "null as zero",
                          "percentage": false,
                          "pointradius": 5,
                          "points": false,
                          "renderer": "flot",
                          "seriesOverrides": [

                          ],
                          "spaceLength": 10,
                          "span": 4,
                          "stack": false,
                          "steppedLine": false,
                          "targets": [
                              {
                                  "expr": "rate(prometheus_target_interval_length_seconds_sum{cluster=~\"$cluster\", job=~\"$job\",instance=~\"$instance\"}[5m]) / rate(prometheus_target_interval_length_seconds_count{cluster=~\"$cluster\", job=~\"$job\",instance=~\"$instance\"}[5m]) * 1e3",
                                  "format": "time_series",
                                  "legendFormat": "{{cluster}}:{{job}}:{{instance}} {{interval}} configured",
                                  "legendLink": null
                              }
                          ],
                          "thresholds": [

                          ],
                          "timeFrom": null,
                          "timeShift": null,
                          "title": "Average Scrape Interval Duration",
                          "tooltip": {
                              "shared": true,
                              "sort": 2,
                              "value_type": "individual"
                          },
                          "type": "graph",
                          "xaxis": {
                              "buckets": null,
                              "mode": "time",
                              "name": null,
                              "show": true,
                              "values": [

                              ]
                          },
                          "yaxes": [
                              {
                                  "format": "ms",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": 0,
                                  "show": true
                              },
                              {
                                  "format": "short",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": false
                              }
                          ]
                      },
                      {
                          "aliasColors": {

                          },
                          "bars": false,
                          "dashLength": 10,
                          "dashes": false,
                          "datasource": "$datasource",
                          "fill": 10,
                          "id": 5,
                          "legend": {
                              "avg": false,
                              "current": false,
                              "max": false,
                              "min": false,
                              "show": true,
                              "total": false,
                              "values": false
                          },
                          "lines": true,
                          "linewidth": 0,
                          "links": [

                          ],
                          "nullPointMode": "null as zero",
                          "percentage": false,
                          "pointradius": 5,
                          "points": false,
                          "renderer": "flot",
                          "seriesOverrides": [

                          ],
                          "spaceLength": 10,
                          "span": 4,
                          "stack": true,
                          "steppedLine": false,
                          "targets": [
                              {
                                  "expr": "sum by (cluster, job, instance) (rate(prometheus_target_scrapes_exceeded_body_size_limit_total{cluster=~\"$cluster\",job=~\"$job\",instance=~\"$instance\"}[1m]))",
                                  "format": "time_series",
                                  "legendFormat": "exceeded body size limit: {{cluster}} {{job}} {{instance}}",
                                  "legendLink": null
                              },
                              {
                                  "expr": "sum by (cluster, job, instance) (rate(prometheus_target_scrapes_exceeded_sample_limit_total{cluster=~\"$cluster\",job=~\"$job\",instance=~\"$instance\"}[1m]))",
                                  "format": "time_series",
                                  "legendFormat": "exceeded sample limit: {{cluster}} {{job}} {{instance}}",
                                  "legendLink": null
                              },
                              {
                                  "expr": "sum by (cluster, job, instance) (rate(prometheus_target_scrapes_sample_duplicate_timestamp_total{cluster=~\"$cluster\",job=~\"$job\",instance=~\"$instance\"}[1m]))",
                                  "format": "time_series",
                                  "legendFormat": "duplicate timestamp: {{cluster}} {{job}} {{instance}}",
                                  "legendLink": null
                              },
                              {
                                  "expr": "sum by (cluster, job, instance) (rate(prometheus_target_scrapes_sample_out_of_bounds_total{cluster=~\"$cluster\",job=~\"$job\",instance=~\"$instance\"}[1m]))",
                                  "format": "time_series",
                                  "legendFormat": "out of bounds: {{cluster}} {{job}} {{instance}}",
                                  "legendLink": null
                              },
                              {
                                  "expr": "sum by (cluster, job, instance) (rate(prometheus_target_scrapes_sample_out_of_order_total{cluster=~\"$cluster\",job=~\"$job\",instance=~\"$instance\"}[1m]))",
                                  "format": "time_series",
                                  "legendFormat": "out of order: {{cluster}} {{job}} {{instance}}",
                                  "legendLink": null
                              }
                          ],
                          "thresholds": [

                          ],
                          "timeFrom": null,
                          "timeShift": null,
                          "title": "Scrape failures",
                          "tooltip": {
                              "shared": true,
                              "sort": 2,
                              "value_type": "individual"
                          },
                          "type": "graph",
                          "xaxis": {
                              "buckets": null,
                              "mode": "time",
                              "name": null,
                              "show": true,
                              "values": [

                              ]
                          },
                          "yaxes": [
                              {
                                  "format": "short",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": 0,
                                  "show": true
                              },
                              {
                                  "format": "short",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": false
                              }
                          ]
                      },
                      {
                          "aliasColors": {

                          },
                          "bars": false,
                          "dashLength": 10,
                          "dashes": false,
                          "datasource": "$datasource",
                          "fill": 10,
                          "id": 6,
                          "legend": {
                              "avg": false,
                              "current": false,
                              "max": false,
                              "min": false,
                              "show": true,
                              "total": false,
                              "values": false
                          },
                          "lines": true,
                          "linewidth": 0,
                          "links": [

                          ],
                          "nullPointMode": "null as zero",
                          "percentage": false,
                          "pointradius": 5,
                          "points": false,
                          "renderer": "flot",
                          "seriesOverrides": [

                          ],
                          "spaceLength": 10,
                          "span": 4,
                          "stack": true,
                          "steppedLine": false,
                          "targets": [
                              {
                                  "expr": "rate(prometheus_tsdb_head_samples_appended_total{cluster=~\"$cluster\", job=~\"$job\",instance=~\"$instance\"}[5m])",
                                  "format": "time_series",
                                  "legendFormat": "{{cluster}} {{job}} {{instance}}",
                                  "legendLink": null
                              }
                          ],
                          "thresholds": [

                          ],
                          "timeFrom": null,
                          "timeShift": null,
                          "title": "Appended Samples",
                          "tooltip": {
                              "shared": true,
                              "sort": 2,
                              "value_type": "individual"
                          },
                          "type": "graph",
                          "xaxis": {
                              "buckets": null,
                              "mode": "time",
                              "name": null,
                              "show": true,
                              "values": [

                              ]
                          },
                          "yaxes": [
                              {
                                  "format": "short",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": 0,
                                  "show": true
                              },
                              {
                                  "format": "short",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": false
                              }
                          ]
                      }
                  ],
                  "repeat": null,
                  "repeatIteration": null,
                  "repeatRowId": null,
                  "showTitle": true,
                  "title": "Retrieval",
                  "titleSize": "h6"
              },
              {
                  "collapse": false,
                  "height": "250px",
                  "panels": [
                      {
                          "aliasColors": {

                          },
                          "bars": false,
                          "dashLength": 10,
                          "dashes": false,
                          "datasource": "$datasource",
                          "fill": 10,
                          "id": 7,
                          "legend": {
                              "avg": false,
                              "current": false,
                              "max": false,
                              "min": false,
                              "show": true,
                              "total": false,
                              "values": false
                          },
                          "lines": true,
                          "linewidth": 0,
                          "links": [

                          ],
                          "nullPointMode": "null as zero",
                          "percentage": false,
                          "pointradius": 5,
                          "points": false,
                          "renderer": "flot",
                          "seriesOverrides": [

                          ],
                          "spaceLength": 10,
                          "span": 6,
                          "stack": true,
                          "steppedLine": false,
                          "targets": [
                              {
                                  "expr": "prometheus_tsdb_head_series{cluster=~\"$cluster\",job=~\"$job\",instance=~\"$instance\"}",
                                  "format": "time_series",
                                  "legendFormat": "{{cluster}} {{job}} {{instance}} head series",
                                  "legendLink": null
                              }
                          ],
                          "thresholds": [

                          ],
                          "timeFrom": null,
                          "timeShift": null,
                          "title": "Head Series",
                          "tooltip": {
                              "shared": true,
                              "sort": 2,
                              "value_type": "individual"
                          },
                          "type": "graph",
                          "xaxis": {
                              "buckets": null,
                              "mode": "time",
                              "name": null,
                              "show": true,
                              "values": [

                              ]
                          },
                          "yaxes": [
                              {
                                  "format": "short",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": 0,
                                  "show": true
                              },
                              {
                                  "format": "short",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": false
                              }
                          ]
                      },
                      {
                          "aliasColors": {

                          },
                          "bars": false,
                          "dashLength": 10,
                          "dashes": false,
                          "datasource": "$datasource",
                          "fill": 10,
                          "id": 8,
                          "legend": {
                              "avg": false,
                              "current": false,
                              "max": false,
                              "min": false,
                              "show": true,
                              "total": false,
                              "values": false
                          },
                          "lines": true,
                          "linewidth": 0,
                          "links": [

                          ],
                          "nullPointMode": "null as zero",
                          "percentage": false,
                          "pointradius": 5,
                          "points": false,
                          "renderer": "flot",
                          "seriesOverrides": [

                          ],
                          "spaceLength": 10,
                          "span": 6,
                          "stack": true,
                          "steppedLine": false,
                          "targets": [
                              {
                                  "expr": "prometheus_tsdb_head_chunks{cluster=~\"$cluster\",job=~\"$job\",instance=~\"$instance\"}",
                                  "format": "time_series",
                                  "legendFormat": "{{cluster}} {{job}} {{instance}} head chunks",
                                  "legendLink": null
                              }
                          ],
                          "thresholds": [

                          ],
                          "timeFrom": null,
                          "timeShift": null,
                          "title": "Head Chunks",
                          "tooltip": {
                              "shared": true,
                              "sort": 2,
                              "value_type": "individual"
                          },
                          "type": "graph",
                          "xaxis": {
                              "buckets": null,
                              "mode": "time",
                              "name": null,
                              "show": true,
                              "values": [

                              ]
                          },
                          "yaxes": [
                              {
                                  "format": "short",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": 0,
                                  "show": true
                              },
                              {
                                  "format": "short",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": false
                              }
                          ]
                      }
                  ],
                  "repeat": null,
                  "repeatIteration": null,
                  "repeatRowId": null,
                  "showTitle": true,
                  "title": "Storage",
                  "titleSize": "h6"
              },
              {
                  "collapse": false,
                  "height": "250px",
                  "panels": [
                      {
                          "aliasColors": {

                          },
                          "bars": false,
                          "dashLength": 10,
                          "dashes": false,
                          "datasource": "$datasource",
                          "fill": 10,
                          "id": 9,
                          "legend": {
                              "avg": false,
                              "current": false,
                              "max": false,
                              "min": false,
                              "show": true,
                              "total": false,
                              "values": false
                          },
                          "lines": true,
                          "linewidth": 0,
                          "links": [

                          ],
                          "nullPointMode": "null as zero",
                          "percentage": false,
                          "pointradius": 5,
                          "points": false,
                          "renderer": "flot",
                          "seriesOverrides": [

                          ],
                          "spaceLength": 10,
                          "span": 6,
                          "stack": true,
                          "steppedLine": false,
                          "targets": [
                              {
                                  "expr": "rate(prometheus_engine_query_duration_seconds_count{cluster=~\"$cluster\",job=~\"$job\",instance=~\"$instance\",slice=\"inner_eval\"}[5m])",
                                  "format": "time_series",
                                  "legendFormat": "{{cluster}} {{job}} {{instance}}",
                                  "legendLink": null
                              }
                          ],
                          "thresholds": [

                          ],
                          "timeFrom": null,
                          "timeShift": null,
                          "title": "Query Rate",
                          "tooltip": {
                              "shared": true,
                              "sort": 2,
                              "value_type": "individual"
                          },
                          "type": "graph",
                          "xaxis": {
                              "buckets": null,
                              "mode": "time",
                              "name": null,
                              "show": true,
                              "values": [

                              ]
                          },
                          "yaxes": [
                              {
                                  "format": "short",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": 0,
                                  "show": true
                              },
                              {
                                  "format": "short",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": false
                              }
                          ]
                      },
                      {
                          "aliasColors": {

                          },
                          "bars": false,
                          "dashLength": 10,
                          "dashes": false,
                          "datasource": "$datasource",
                          "fill": 10,
                          "id": 10,
                          "legend": {
                              "avg": false,
                              "current": false,
                              "max": false,
                              "min": false,
                              "show": true,
                              "total": false,
                              "values": false
                          },
                          "lines": true,
                          "linewidth": 0,
                          "links": [

                          ],
                          "nullPointMode": "null as zero",
                          "percentage": false,
                          "pointradius": 5,
                          "points": false,
                          "renderer": "flot",
                          "seriesOverrides": [

                          ],
                          "spaceLength": 10,
                          "span": 6,
                          "stack": true,
                          "steppedLine": false,
                          "targets": [
                              {
                                  "expr": "max by (slice) (prometheus_engine_query_duration_seconds{quantile=\"0.9\",cluster=~\"$cluster\", job=~\"$job\",instance=~\"$instance\"}) * 1e3",
                                  "format": "time_series",
                                  "legendFormat": "{{slice}}",
                                  "legendLink": null
                              }
                          ],
                          "thresholds": [

                          ],
                          "timeFrom": null,
                          "timeShift": null,
                          "title": "Stage Duration",
                          "tooltip": {
                              "shared": true,
                              "sort": 2,
                              "value_type": "individual"
                          },
                          "type": "graph",
                          "xaxis": {
                              "buckets": null,
                              "mode": "time",
                              "name": null,
                              "show": true,
                              "values": [

                              ]
                          },
                          "yaxes": [
                              {
                                  "format": "ms",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": 0,
                                  "show": true
                              },
                              {
                                  "format": "short",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": false
                              }
                          ]
                      }
                  ],
                  "repeat": null,
                  "repeatIteration": null,
                  "repeatRowId": null,
                  "showTitle": true,
                  "title": "Query",
                  "titleSize": "h6"
              }
          ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
              "prometheus-mixin"
          ],
          "templating": {
              "list": [
                  {
                      "current": {
                          "text": "default",
                          "value": "default"
                      },
                      "hide": 0,
                      "label": "Data source",
                      "name": "datasource",
                      "options": [

                      ],
                      "query": "prometheus",
                      "refresh": 1,
                      "regex": "",
                      "type": "datasource"
                  },
                  {
                      "allValue": ".+",
                      "current": {
                          "selected": true,
                          "text": "All",
                          "value": "$__all"
                      },
                      "datasource": "$datasource",
                      "hide": 0,
                      "includeAll": true,
                      "label": "cluster",
                      "multi": true,
                      "name": "cluster",
                      "options": [

                      ],
                      "query": "label_values(prometheus_build_info{job=\"prometheus-k8s\",namespace=\"monitoring\"}, cluster)",
                      "refresh": 1,
                      "regex": "",
                      "sort": 2,
                      "tagValuesQuery": "",
                      "tags": [

                      ],
                      "tagsQuery": "",
                      "type": "query",
                      "useTags": false
                  },
                  {
                      "allValue": ".+",
                      "current": {
                          "selected": true,
                          "text": "All",
                          "value": "$__all"
                      },
                      "datasource": "$datasource",
                      "hide": 0,
                      "includeAll": true,
                      "label": "job",
                      "multi": true,
                      "name": "job",
                      "options": [

                      ],
                      "query": "label_values(prometheus_build_info{cluster=~\"$cluster\"}, job)",
                      "refresh": 1,
                      "regex": "",
                      "sort": 2,
                      "tagValuesQuery": "",
                      "tags": [

                      ],
                      "tagsQuery": "",
                      "type": "query",
                      "useTags": false
                  },
                  {
                      "allValue": ".+",
                      "current": {
                          "selected": true,
                          "text": "All",
                          "value": "$__all"
                      },
                      "datasource": "$datasource",
                      "hide": 0,
                      "includeAll": true,
                      "label": "instance",
                      "multi": true,
                      "name": "instance",
                      "options": [

                      ],
                      "query": "label_values(prometheus_build_info{cluster=~\"$cluster\", job=~\"$job\"}, instance)",
                      "refresh": 1,
                      "regex": "",
                      "sort": 2,
                      "tagValuesQuery": "",
                      "tags": [

                      ],
                      "tagsQuery": "",
                      "type": "query",
                      "useTags": false
                  }
              ]
          },
          "time": {
              "from": "now-1h",
              "to": "now"
          },
          "timepicker": {
              "refresh_intervals": [
                  "5s",
                  "10s",
                  "30s",
                  "1m",
                  "5m",
                  "15m",
                  "30m",
                  "1h",
                  "2h",
                  "1d"
              ],
              "time_options": [
                  "5m",
                  "15m",
                  "1h",
                  "6h",
                  "12h",
                  "24h",
                  "2d",
                  "7d",
                  "30d"
              ]
          },
          "timezone": "utc",
          "title": "Prometheus / Overview",
          "uid": "",
          "version": 0
      }
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"prometheus.json":"{\n    \"annotations\": {\n        \"list\": [\n\n        ]\n    },\n    \"editable\": true,\n    \"gnetId\": null,\n    \"graphTooltip\": 0,\n    \"hideControls\": false,\n    \"links\": [\n\n    ],\n    \"refresh\": \"60s\",\n    \"rows\": [\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"id\": 1,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"styles\": [\n                        {\n                            \"alias\": \"Time\",\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"pattern\": \"Time\",\n                            \"type\": \"hidden\"\n                        },\n                        {\n                            \"alias\": \"Count\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #A\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"hidden\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"Uptime\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"Value #B\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"s\"\n                        },\n                        {\n                            \"alias\": \"Cluster\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"cluster\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"Instance\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"instance\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"Job\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"job\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"Version\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"link\": false,\n                            \"linkTargetBlank\": false,\n                            \"linkTooltip\": \"Drill down\",\n                            \"linkUrl\": \"\",\n                            \"pattern\": \"version\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"number\",\n                            \"unit\": \"short\"\n                        },\n                        {\n                            \"alias\": \"\",\n                            \"colorMode\": null,\n                            \"colors\": [\n\n                            ],\n                            \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\n                            \"decimals\": 2,\n                            \"pattern\": \"/.*/\",\n                            \"thresholds\": [\n\n                            ],\n                            \"type\": \"string\",\n                            \"unit\": \"short\"\n                        }\n                    ],\n                    \"targets\": [\n                        {\n                            \"expr\": \"count by (cluster, job, instance, version) (prometheus_build_info{cluster=~\\\"$cluster\\\", job=~\\\"$job\\\", instance=~\\\"$instance\\\"})\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"A\"\n                        },\n                        {\n                            \"expr\": \"max by (cluster, job, instance) (time() - process_start_time_seconds{cluster=~\\\"$cluster\\\", job=~\\\"$job\\\", instance=~\\\"$instance\\\"})\",\n                            \"format\": \"table\",\n                            \"instant\": true,\n                            \"legendFormat\": \"\",\n                            \"refId\": \"B\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Prometheus Stats\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"transform\": \"table\",\n                    \"type\": \"table\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Prometheus Stats\",\n            \"titleSize\": \"h6\"\n        },\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"id\": 2,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum(rate(prometheus_target_sync_length_seconds_sum{cluster=~\\\"$cluster\\\",job=~\\\"$job\\\",instance=~\\\"$instance\\\"}[5m])) by (cluster, job, scrape_job, instance) * 1e3\",\n                            \"format\": \"time_series\",\n                            \"legendFormat\": \"{{cluster}}:{{job}}:{{instance}}:{{scrape_job}}\",\n                            \"legendLink\": null\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Target Sync\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"ms\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 3,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum by (cluster, job, instance) (prometheus_sd_discovered_targets{cluster=~\\\"$cluster\\\", job=~\\\"$job\\\",instance=~\\\"$instance\\\"})\",\n                            \"format\": \"time_series\",\n                            \"legendFormat\": \"{{cluster}}:{{job}}:{{instance}}\",\n                            \"legendLink\": null\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Targets\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Discovery\",\n            \"titleSize\": \"h6\"\n        },\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"id\": 4,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 4,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"rate(prometheus_target_interval_length_seconds_sum{cluster=~\\\"$cluster\\\", job=~\\\"$job\\\",instance=~\\\"$instance\\\"}[5m]) / rate(prometheus_target_interval_length_seconds_count{cluster=~\\\"$cluster\\\", job=~\\\"$job\\\",instance=~\\\"$instance\\\"}[5m]) * 1e3\",\n                            \"format\": \"time_series\",\n                            \"legendFormat\": \"{{cluster}}:{{job}}:{{instance}} {{interval}} configured\",\n                            \"legendLink\": null\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Average Scrape Interval Duration\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"ms\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 5,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 4,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"sum by (cluster, job, instance) (rate(prometheus_target_scrapes_exceeded_body_size_limit_total{cluster=~\\\"$cluster\\\",job=~\\\"$job\\\",instance=~\\\"$instance\\\"}[1m]))\",\n                            \"format\": \"time_series\",\n                            \"legendFormat\": \"exceeded body size limit: {{cluster}} {{job}} {{instance}}\",\n                            \"legendLink\": null\n                        },\n                        {\n                            \"expr\": \"sum by (cluster, job, instance) (rate(prometheus_target_scrapes_exceeded_sample_limit_total{cluster=~\\\"$cluster\\\",job=~\\\"$job\\\",instance=~\\\"$instance\\\"}[1m]))\",\n                            \"format\": \"time_series\",\n                            \"legendFormat\": \"exceeded sample limit: {{cluster}} {{job}} {{instance}}\",\n                            \"legendLink\": null\n                        },\n                        {\n                            \"expr\": \"sum by (cluster, job, instance) (rate(prometheus_target_scrapes_sample_duplicate_timestamp_total{cluster=~\\\"$cluster\\\",job=~\\\"$job\\\",instance=~\\\"$instance\\\"}[1m]))\",\n                            \"format\": \"time_series\",\n                            \"legendFormat\": \"duplicate timestamp: {{cluster}} {{job}} {{instance}}\",\n                            \"legendLink\": null\n                        },\n                        {\n                            \"expr\": \"sum by (cluster, job, instance) (rate(prometheus_target_scrapes_sample_out_of_bounds_total{cluster=~\\\"$cluster\\\",job=~\\\"$job\\\",instance=~\\\"$instance\\\"}[1m]))\",\n                            \"format\": \"time_series\",\n                            \"legendFormat\": \"out of bounds: {{cluster}} {{job}} {{instance}}\",\n                            \"legendLink\": null\n                        },\n                        {\n                            \"expr\": \"sum by (cluster, job, instance) (rate(prometheus_target_scrapes_sample_out_of_order_total{cluster=~\\\"$cluster\\\",job=~\\\"$job\\\",instance=~\\\"$instance\\\"}[1m]))\",\n                            \"format\": \"time_series\",\n                            \"legendFormat\": \"out of order: {{cluster}} {{job}} {{instance}}\",\n                            \"legendLink\": null\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Scrape failures\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 6,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 4,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"rate(prometheus_tsdb_head_samples_appended_total{cluster=~\\\"$cluster\\\", job=~\\\"$job\\\",instance=~\\\"$instance\\\"}[5m])\",\n                            \"format\": \"time_series\",\n                            \"legendFormat\": \"{{cluster}} {{job}} {{instance}}\",\n                            \"legendLink\": null\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Appended Samples\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Retrieval\",\n            \"titleSize\": \"h6\"\n        },\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 7,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"prometheus_tsdb_head_series{cluster=~\\\"$cluster\\\",job=~\\\"$job\\\",instance=~\\\"$instance\\\"}\",\n                            \"format\": \"time_series\",\n                            \"legendFormat\": \"{{cluster}} {{job}} {{instance}} head series\",\n                            \"legendLink\": null\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Head Series\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 8,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"prometheus_tsdb_head_chunks{cluster=~\\\"$cluster\\\",job=~\\\"$job\\\",instance=~\\\"$instance\\\"}\",\n                            \"format\": \"time_series\",\n                            \"legendFormat\": \"{{cluster}} {{job}} {{instance}} head chunks\",\n                            \"legendLink\": null\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Head Chunks\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Storage\",\n            \"titleSize\": \"h6\"\n        },\n        {\n            \"collapse\": false,\n            \"height\": \"250px\",\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 9,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"rate(prometheus_engine_query_duration_seconds_count{cluster=~\\\"$cluster\\\",job=~\\\"$job\\\",instance=~\\\"$instance\\\",slice=\\\"inner_eval\\\"}[5m])\",\n                            \"format\": \"time_series\",\n                            \"legendFormat\": \"{{cluster}} {{job}} {{instance}}\",\n                            \"legendLink\": null\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Query Rate\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 10,\n                    \"id\": 10,\n                    \"legend\": {\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"show\": true,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 0,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null as zero\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": true,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"max by (slice) (prometheus_engine_query_duration_seconds{quantile=\\\"0.9\\\",cluster=~\\\"$cluster\\\", job=~\\\"$job\\\",instance=~\\\"$instance\\\"}) * 1e3\",\n                            \"format\": \"time_series\",\n                            \"legendFormat\": \"{{slice}}\",\n                            \"legendLink\": null\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Stage Duration\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 2,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"ms\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": 0,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": false\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Query\",\n            \"titleSize\": \"h6\"\n        }\n    ],\n    \"schemaVersion\": 14,\n    \"style\": \"dark\",\n    \"tags\": [\n        \"prometheus-mixin\"\n    ],\n    \"templating\": {\n        \"list\": [\n            {\n                \"current\": {\n                    \"text\": \"default\",\n                    \"value\": \"default\"\n                },\n                \"hide\": 0,\n                \"label\": \"Data source\",\n                \"name\": \"datasource\",\n                \"options\": [\n\n                ],\n                \"query\": \"prometheus\",\n                \"refresh\": 1,\n                \"regex\": \"\",\n                \"type\": \"datasource\"\n            },\n            {\n                \"allValue\": \".+\",\n                \"current\": {\n                    \"selected\": true,\n                    \"text\": \"All\",\n                    \"value\": \"$__all\"\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 0,\n                \"includeAll\": true,\n                \"label\": \"cluster\",\n                \"multi\": true,\n                \"name\": \"cluster\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(prometheus_build_info{job=\\\"prometheus-k8s\\\",namespace=\\\"monitoring\\\"}, cluster)\",\n                \"refresh\": 1,\n                \"regex\": \"\",\n                \"sort\": 2,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            },\n            {\n                \"allValue\": \".+\",\n                \"current\": {\n                    \"selected\": true,\n                    \"text\": \"All\",\n                    \"value\": \"$__all\"\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 0,\n                \"includeAll\": true,\n                \"label\": \"job\",\n                \"multi\": true,\n                \"name\": \"job\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(prometheus_build_info{cluster=~\\\"$cluster\\\"}, job)\",\n                \"refresh\": 1,\n                \"regex\": \"\",\n                \"sort\": 2,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            },\n            {\n                \"allValue\": \".+\",\n                \"current\": {\n                    \"selected\": true,\n                    \"text\": \"All\",\n                    \"value\": \"$__all\"\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 0,\n                \"includeAll\": true,\n                \"label\": \"instance\",\n                \"multi\": true,\n                \"name\": \"instance\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(prometheus_build_info{cluster=~\\\"$cluster\\\", job=~\\\"$job\\\"}, instance)\",\n                \"refresh\": 1,\n                \"regex\": \"\",\n                \"sort\": 2,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            }\n        ]\n    },\n    \"time\": {\n        \"from\": \"now-1h\",\n        \"to\": \"now\"\n    },\n    \"timepicker\": {\n        \"refresh_intervals\": [\n            \"5s\",\n            \"10s\",\n            \"30s\",\n            \"1m\",\n            \"5m\",\n            \"15m\",\n            \"30m\",\n            \"1h\",\n            \"2h\",\n            \"1d\"\n        ],\n        \"time_options\": [\n            \"5m\",\n            \"15m\",\n            \"1h\",\n            \"6h\",\n            \"12h\",\n            \"24h\",\n            \"2d\",\n            \"7d\",\n            \"30d\"\n        ]\n    },\n    \"timezone\": \"utc\",\n    \"title\": \"Prometheus / Overview\",\n    \"uid\": \"\",\n    \"version\": 0\n}"},"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"grafana","app.kubernetes.io/name":"grafana","app.kubernetes.io/part-of":"kube-prometheus","app.kubernetes.io/version":"11.3.1"},"name":"grafana-dashboard-prometheus","namespace":"monitoring"}}
    creationTimestamp: "2024-11-25T14:40:26Z"
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 11.3.1
    name: grafana-dashboard-prometheus
    namespace: monitoring
    resourceVersion: "3039636"
    uid: b4b385b8-30f5-4d02-bb78-6fbba6308b48
- apiVersion: v1
  data:
    prometheus-remote-write.json: |-
      {
          "__inputs": [

          ],
          "__requires": [

          ],
          "annotations": {
              "list": [

              ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 0,
          "hideControls": false,
          "id": null,
          "links": [

          ],
          "refresh": "60s",
          "rows": [
              {
                  "collapse": false,
                  "collapsed": false,
                  "panels": [
                      {
                          "aliasColors": {

                          },
                          "bars": false,
                          "dashLength": 10,
                          "dashes": false,
                          "datasource": "$datasource",
                          "fill": 1,
                          "fillGradient": 0,
                          "gridPos": {

                          },
                          "id": 2,
                          "legend": {
                              "alignAsTable": false,
                              "avg": false,
                              "current": false,
                              "max": false,
                              "min": false,
                              "rightSide": false,
                              "show": true,
                              "sideWidth": null,
                              "total": false,
                              "values": false
                          },
                          "lines": true,
                          "linewidth": 1,
                          "links": [

                          ],
                          "nullPointMode": "null",
                          "percentage": false,
                          "pointradius": 5,
                          "points": false,
                          "renderer": "flot",
                          "repeat": null,
                          "seriesOverrides": [

                          ],
                          "spaceLength": 10,
                          "span": 6,
                          "stack": false,
                          "steppedLine": false,
                          "targets": [
                              {
                                  "expr": "(\n  prometheus_remote_storage_highest_timestamp_in_seconds{cluster=~\"$cluster\", instance=~\"$instance\"} \n-  \n  ignoring(remote_name, url) group_right(instance) (prometheus_remote_storage_queue_highest_sent_timestamp_seconds{cluster=~\"$cluster\", instance=~\"$instance\", url=~\"$url\"} != 0)\n)\n",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": "{{cluster}}:{{instance}} {{remote_name}}:{{url}}",
                                  "refId": "A"
                              }
                          ],
                          "thresholds": [

                          ],
                          "timeFrom": null,
                          "timeShift": null,
                          "title": "Highest Timestamp In vs. Highest Timestamp Sent",
                          "tooltip": {
                              "shared": true,
                              "sort": 0,
                              "value_type": "individual"
                          },
                          "type": "graph",
                          "xaxis": {
                              "buckets": null,
                              "mode": "time",
                              "name": null,
                              "show": true,
                              "values": [

                              ]
                          },
                          "yaxes": [
                              {
                                  "format": "short",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              },
                              {
                                  "format": "short",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              }
                          ]
                      },
                      {
                          "aliasColors": {

                          },
                          "bars": false,
                          "dashLength": 10,
                          "dashes": false,
                          "datasource": "$datasource",
                          "fill": 1,
                          "fillGradient": 0,
                          "gridPos": {

                          },
                          "id": 3,
                          "legend": {
                              "alignAsTable": false,
                              "avg": false,
                              "current": false,
                              "max": false,
                              "min": false,
                              "rightSide": false,
                              "show": true,
                              "sideWidth": null,
                              "total": false,
                              "values": false
                          },
                          "lines": true,
                          "linewidth": 1,
                          "links": [

                          ],
                          "nullPointMode": "null",
                          "percentage": false,
                          "pointradius": 5,
                          "points": false,
                          "renderer": "flot",
                          "repeat": null,
                          "seriesOverrides": [

                          ],
                          "spaceLength": 10,
                          "span": 6,
                          "stack": false,
                          "steppedLine": false,
                          "targets": [
                              {
                                  "expr": "clamp_min(\n  rate(prometheus_remote_storage_highest_timestamp_in_seconds{cluster=~\"$cluster\", instance=~\"$instance\"}[5m])  \n- \n  ignoring (remote_name, url) group_right(instance) rate(prometheus_remote_storage_queue_highest_sent_timestamp_seconds{cluster=~\"$cluster\", instance=~\"$instance\", url=~\"$url\"}[5m])\n, 0)\n",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": "{{cluster}}:{{instance}} {{remote_name}}:{{url}}",
                                  "refId": "A"
                              }
                          ],
                          "thresholds": [

                          ],
                          "timeFrom": null,
                          "timeShift": null,
                          "title": "Rate[5m]",
                          "tooltip": {
                              "shared": true,
                              "sort": 0,
                              "value_type": "individual"
                          },
                          "type": "graph",
                          "xaxis": {
                              "buckets": null,
                              "mode": "time",
                              "name": null,
                              "show": true,
                              "values": [

                              ]
                          },
                          "yaxes": [
                              {
                                  "format": "short",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              },
                              {
                                  "format": "short",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              }
                          ]
                      }
                  ],
                  "repeat": null,
                  "repeatIteration": null,
                  "repeatRowId": null,
                  "showTitle": true,
                  "title": "Timestamps",
                  "titleSize": "h6",
                  "type": "row"
              },
              {
                  "collapse": false,
                  "collapsed": false,
                  "panels": [
                      {
                          "aliasColors": {

                          },
                          "bars": false,
                          "dashLength": 10,
                          "dashes": false,
                          "datasource": "$datasource",
                          "fill": 1,
                          "fillGradient": 0,
                          "gridPos": {

                          },
                          "id": 4,
                          "legend": {
                              "alignAsTable": false,
                              "avg": false,
                              "current": false,
                              "max": false,
                              "min": false,
                              "rightSide": false,
                              "show": true,
                              "sideWidth": null,
                              "total": false,
                              "values": false
                          },
                          "lines": true,
                          "linewidth": 1,
                          "links": [

                          ],
                          "nullPointMode": "null",
                          "percentage": false,
                          "pointradius": 5,
                          "points": false,
                          "renderer": "flot",
                          "repeat": null,
                          "seriesOverrides": [

                          ],
                          "spaceLength": 10,
                          "span": 12,
                          "stack": false,
                          "steppedLine": false,
                          "targets": [
                              {
                                  "expr": "rate(\n  prometheus_remote_storage_samples_in_total{cluster=~\"$cluster\", instance=~\"$instance\"}[5m])\n- \n  ignoring(remote_name, url) group_right(instance) (rate(prometheus_remote_storage_succeeded_samples_total{cluster=~\"$cluster\", instance=~\"$instance\", url=~\"$url\"}[5m]) or rate(prometheus_remote_storage_samples_total{cluster=~\"$cluster\", instance=~\"$instance\", url=~\"$url\"}[5m]))\n- \n  (rate(prometheus_remote_storage_dropped_samples_total{cluster=~\"$cluster\", instance=~\"$instance\", url=~\"$url\"}[5m]) or rate(prometheus_remote_storage_samples_dropped_total{cluster=~\"$cluster\", instance=~\"$instance\", url=~\"$url\"}[5m]))\n",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": "{{cluster}}:{{instance}} {{remote_name}}:{{url}}",
                                  "refId": "A"
                              }
                          ],
                          "thresholds": [

                          ],
                          "timeFrom": null,
                          "timeShift": null,
                          "title": "Rate, in vs. succeeded or dropped [5m]",
                          "tooltip": {
                              "shared": true,
                              "sort": 0,
                              "value_type": "individual"
                          },
                          "type": "graph",
                          "xaxis": {
                              "buckets": null,
                              "mode": "time",
                              "name": null,
                              "show": true,
                              "values": [

                              ]
                          },
                          "yaxes": [
                              {
                                  "format": "short",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              },
                              {
                                  "format": "short",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              }
                          ]
                      }
                  ],
                  "repeat": null,
                  "repeatIteration": null,
                  "repeatRowId": null,
                  "showTitle": true,
                  "title": "Samples",
                  "titleSize": "h6",
                  "type": "row"
              },
              {
                  "collapse": false,
                  "collapsed": false,
                  "panels": [
                      {
                          "aliasColors": {

                          },
                          "bars": false,
                          "dashLength": 10,
                          "dashes": false,
                          "datasource": "$datasource",
                          "fill": 1,
                          "fillGradient": 0,
                          "gridPos": {

                          },
                          "id": 5,
                          "legend": {
                              "alignAsTable": false,
                              "avg": false,
                              "current": false,
                              "max": false,
                              "min": false,
                              "rightSide": false,
                              "show": true,
                              "sideWidth": null,
                              "total": false,
                              "values": false
                          },
                          "lines": true,
                          "linewidth": 1,
                          "links": [

                          ],
                          "minSpan": 6,
                          "nullPointMode": "null",
                          "percentage": false,
                          "pointradius": 5,
                          "points": false,
                          "renderer": "flot",
                          "repeat": null,
                          "seriesOverrides": [

                          ],
                          "spaceLength": 10,
                          "span": 12,
                          "stack": false,
                          "steppedLine": false,
                          "targets": [
                              {
                                  "expr": "prometheus_remote_storage_shards{cluster=~\"$cluster\", instance=~\"$instance\", url=~\"$url\"}",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": "{{cluster}}:{{instance}} {{remote_name}}:{{url}}",
                                  "refId": "A"
                              }
                          ],
                          "thresholds": [

                          ],
                          "timeFrom": null,
                          "timeShift": null,
                          "title": "Current Shards",
                          "tooltip": {
                              "shared": true,
                              "sort": 0,
                              "value_type": "individual"
                          },
                          "type": "graph",
                          "xaxis": {
                              "buckets": null,
                              "mode": "time",
                              "name": null,
                              "show": true,
                              "values": [

                              ]
                          },
                          "yaxes": [
                              {
                                  "format": "short",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              },
                              {
                                  "format": "short",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              }
                          ]
                      },
                      {
                          "aliasColors": {

                          },
                          "bars": false,
                          "dashLength": 10,
                          "dashes": false,
                          "datasource": "$datasource",
                          "fill": 1,
                          "fillGradient": 0,
                          "gridPos": {

                          },
                          "id": 6,
                          "legend": {
                              "alignAsTable": false,
                              "avg": false,
                              "current": false,
                              "max": false,
                              "min": false,
                              "rightSide": false,
                              "show": true,
                              "sideWidth": null,
                              "total": false,
                              "values": false
                          },
                          "lines": true,
                          "linewidth": 1,
                          "links": [

                          ],
                          "nullPointMode": "null",
                          "percentage": false,
                          "pointradius": 5,
                          "points": false,
                          "renderer": "flot",
                          "repeat": null,
                          "seriesOverrides": [

                          ],
                          "spaceLength": 10,
                          "span": 4,
                          "stack": false,
                          "steppedLine": false,
                          "targets": [
                              {
                                  "expr": "prometheus_remote_storage_shards_max{cluster=~\"$cluster\", instance=~\"$instance\", url=~\"$url\"}",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": "{{cluster}}:{{instance}} {{remote_name}}:{{url}}",
                                  "refId": "A"
                              }
                          ],
                          "thresholds": [

                          ],
                          "timeFrom": null,
                          "timeShift": null,
                          "title": "Max Shards",
                          "tooltip": {
                              "shared": true,
                              "sort": 0,
                              "value_type": "individual"
                          },
                          "type": "graph",
                          "xaxis": {
                              "buckets": null,
                              "mode": "time",
                              "name": null,
                              "show": true,
                              "values": [

                              ]
                          },
                          "yaxes": [
                              {
                                  "format": "short",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              },
                              {
                                  "format": "short",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              }
                          ]
                      },
                      {
                          "aliasColors": {

                          },
                          "bars": false,
                          "dashLength": 10,
                          "dashes": false,
                          "datasource": "$datasource",
                          "fill": 1,
                          "fillGradient": 0,
                          "gridPos": {

                          },
                          "id": 7,
                          "legend": {
                              "alignAsTable": false,
                              "avg": false,
                              "current": false,
                              "max": false,
                              "min": false,
                              "rightSide": false,
                              "show": true,
                              "sideWidth": null,
                              "total": false,
                              "values": false
                          },
                          "lines": true,
                          "linewidth": 1,
                          "links": [

                          ],
                          "nullPointMode": "null",
                          "percentage": false,
                          "pointradius": 5,
                          "points": false,
                          "renderer": "flot",
                          "repeat": null,
                          "seriesOverrides": [

                          ],
                          "spaceLength": 10,
                          "span": 4,
                          "stack": false,
                          "steppedLine": false,
                          "targets": [
                              {
                                  "expr": "prometheus_remote_storage_shards_min{cluster=~\"$cluster\", instance=~\"$instance\", url=~\"$url\"}",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": "{{cluster}}:{{instance}} {{remote_name}}:{{url}}",
                                  "refId": "A"
                              }
                          ],
                          "thresholds": [

                          ],
                          "timeFrom": null,
                          "timeShift": null,
                          "title": "Min Shards",
                          "tooltip": {
                              "shared": true,
                              "sort": 0,
                              "value_type": "individual"
                          },
                          "type": "graph",
                          "xaxis": {
                              "buckets": null,
                              "mode": "time",
                              "name": null,
                              "show": true,
                              "values": [

                              ]
                          },
                          "yaxes": [
                              {
                                  "format": "short",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              },
                              {
                                  "format": "short",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              }
                          ]
                      },
                      {
                          "aliasColors": {

                          },
                          "bars": false,
                          "dashLength": 10,
                          "dashes": false,
                          "datasource": "$datasource",
                          "fill": 1,
                          "fillGradient": 0,
                          "gridPos": {

                          },
                          "id": 8,
                          "legend": {
                              "alignAsTable": false,
                              "avg": false,
                              "current": false,
                              "max": false,
                              "min": false,
                              "rightSide": false,
                              "show": true,
                              "sideWidth": null,
                              "total": false,
                              "values": false
                          },
                          "lines": true,
                          "linewidth": 1,
                          "links": [

                          ],
                          "nullPointMode": "null",
                          "percentage": false,
                          "pointradius": 5,
                          "points": false,
                          "renderer": "flot",
                          "repeat": null,
                          "seriesOverrides": [

                          ],
                          "spaceLength": 10,
                          "span": 4,
                          "stack": false,
                          "steppedLine": false,
                          "targets": [
                              {
                                  "expr": "prometheus_remote_storage_shards_desired{cluster=~\"$cluster\", instance=~\"$instance\", url=~\"$url\"}",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": "{{cluster}}:{{instance}} {{remote_name}}:{{url}}",
                                  "refId": "A"
                              }
                          ],
                          "thresholds": [

                          ],
                          "timeFrom": null,
                          "timeShift": null,
                          "title": "Desired Shards",
                          "tooltip": {
                              "shared": true,
                              "sort": 0,
                              "value_type": "individual"
                          },
                          "type": "graph",
                          "xaxis": {
                              "buckets": null,
                              "mode": "time",
                              "name": null,
                              "show": true,
                              "values": [

                              ]
                          },
                          "yaxes": [
                              {
                                  "format": "short",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              },
                              {
                                  "format": "short",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              }
                          ]
                      }
                  ],
                  "repeat": null,
                  "repeatIteration": null,
                  "repeatRowId": null,
                  "showTitle": true,
                  "title": "Shards",
                  "titleSize": "h6",
                  "type": "row"
              },
              {
                  "collapse": false,
                  "collapsed": false,
                  "panels": [
                      {
                          "aliasColors": {

                          },
                          "bars": false,
                          "dashLength": 10,
                          "dashes": false,
                          "datasource": "$datasource",
                          "fill": 1,
                          "fillGradient": 0,
                          "gridPos": {

                          },
                          "id": 9,
                          "legend": {
                              "alignAsTable": false,
                              "avg": false,
                              "current": false,
                              "max": false,
                              "min": false,
                              "rightSide": false,
                              "show": true,
                              "sideWidth": null,
                              "total": false,
                              "values": false
                          },
                          "lines": true,
                          "linewidth": 1,
                          "links": [

                          ],
                          "nullPointMode": "null",
                          "percentage": false,
                          "pointradius": 5,
                          "points": false,
                          "renderer": "flot",
                          "repeat": null,
                          "seriesOverrides": [

                          ],
                          "spaceLength": 10,
                          "span": 6,
                          "stack": false,
                          "steppedLine": false,
                          "targets": [
                              {
                                  "expr": "prometheus_remote_storage_shard_capacity{cluster=~\"$cluster\", instance=~\"$instance\", url=~\"$url\"}",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": "{{cluster}}:{{instance}} {{remote_name}}:{{url}}",
                                  "refId": "A"
                              }
                          ],
                          "thresholds": [

                          ],
                          "timeFrom": null,
                          "timeShift": null,
                          "title": "Shard Capacity",
                          "tooltip": {
                              "shared": true,
                              "sort": 0,
                              "value_type": "individual"
                          },
                          "type": "graph",
                          "xaxis": {
                              "buckets": null,
                              "mode": "time",
                              "name": null,
                              "show": true,
                              "values": [

                              ]
                          },
                          "yaxes": [
                              {
                                  "format": "short",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              },
                              {
                                  "format": "short",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              }
                          ]
                      },
                      {
                          "aliasColors": {

                          },
                          "bars": false,
                          "dashLength": 10,
                          "dashes": false,
                          "datasource": "$datasource",
                          "fill": 1,
                          "fillGradient": 0,
                          "gridPos": {

                          },
                          "id": 10,
                          "legend": {
                              "alignAsTable": false,
                              "avg": false,
                              "current": false,
                              "max": false,
                              "min": false,
                              "rightSide": false,
                              "show": true,
                              "sideWidth": null,
                              "total": false,
                              "values": false
                          },
                          "lines": true,
                          "linewidth": 1,
                          "links": [

                          ],
                          "nullPointMode": "null",
                          "percentage": false,
                          "pointradius": 5,
                          "points": false,
                          "renderer": "flot",
                          "repeat": null,
                          "seriesOverrides": [

                          ],
                          "spaceLength": 10,
                          "span": 6,
                          "stack": false,
                          "steppedLine": false,
                          "targets": [
                              {
                                  "expr": "prometheus_remote_storage_pending_samples{cluster=~\"$cluster\", instance=~\"$instance\", url=~\"$url\"} or prometheus_remote_storage_samples_pending{cluster=~\"$cluster\", instance=~\"$instance\", url=~\"$url\"}",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": "{{cluster}}:{{instance}} {{remote_name}}:{{url}}",
                                  "refId": "A"
                              }
                          ],
                          "thresholds": [

                          ],
                          "timeFrom": null,
                          "timeShift": null,
                          "title": "Pending Samples",
                          "tooltip": {
                              "shared": true,
                              "sort": 0,
                              "value_type": "individual"
                          },
                          "type": "graph",
                          "xaxis": {
                              "buckets": null,
                              "mode": "time",
                              "name": null,
                              "show": true,
                              "values": [

                              ]
                          },
                          "yaxes": [
                              {
                                  "format": "short",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              },
                              {
                                  "format": "short",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              }
                          ]
                      }
                  ],
                  "repeat": null,
                  "repeatIteration": null,
                  "repeatRowId": null,
                  "showTitle": true,
                  "title": "Shard Details",
                  "titleSize": "h6",
                  "type": "row"
              },
              {
                  "collapse": false,
                  "collapsed": false,
                  "panels": [
                      {
                          "aliasColors": {

                          },
                          "bars": false,
                          "dashLength": 10,
                          "dashes": false,
                          "datasource": "$datasource",
                          "fill": 1,
                          "fillGradient": 0,
                          "gridPos": {

                          },
                          "id": 11,
                          "legend": {
                              "alignAsTable": false,
                              "avg": false,
                              "current": false,
                              "max": false,
                              "min": false,
                              "rightSide": false,
                              "show": true,
                              "sideWidth": null,
                              "total": false,
                              "values": false
                          },
                          "lines": true,
                          "linewidth": 1,
                          "links": [

                          ],
                          "nullPointMode": "null",
                          "percentage": false,
                          "pointradius": 5,
                          "points": false,
                          "renderer": "flot",
                          "repeat": null,
                          "seriesOverrides": [

                          ],
                          "spaceLength": 10,
                          "span": 6,
                          "stack": false,
                          "steppedLine": false,
                          "targets": [
                              {
                                  "expr": "prometheus_tsdb_wal_segment_current{cluster=~\"$cluster\", instance=~\"$instance\"}",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": "{{cluster}}:{{instance}}",
                                  "refId": "A"
                              }
                          ],
                          "thresholds": [

                          ],
                          "timeFrom": null,
                          "timeShift": null,
                          "title": "TSDB Current Segment",
                          "tooltip": {
                              "shared": true,
                              "sort": 0,
                              "value_type": "individual"
                          },
                          "type": "graph",
                          "xaxis": {
                              "buckets": null,
                              "mode": "time",
                              "name": null,
                              "show": true,
                              "values": [

                              ]
                          },
                          "yaxes": [
                              {
                                  "format": "none",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              },
                              {
                                  "format": "short",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              }
                          ]
                      },
                      {
                          "aliasColors": {

                          },
                          "bars": false,
                          "dashLength": 10,
                          "dashes": false,
                          "datasource": "$datasource",
                          "fill": 1,
                          "fillGradient": 0,
                          "gridPos": {

                          },
                          "id": 12,
                          "legend": {
                              "alignAsTable": false,
                              "avg": false,
                              "current": false,
                              "max": false,
                              "min": false,
                              "rightSide": false,
                              "show": true,
                              "sideWidth": null,
                              "total": false,
                              "values": false
                          },
                          "lines": true,
                          "linewidth": 1,
                          "links": [

                          ],
                          "nullPointMode": "null",
                          "percentage": false,
                          "pointradius": 5,
                          "points": false,
                          "renderer": "flot",
                          "repeat": null,
                          "seriesOverrides": [

                          ],
                          "spaceLength": 10,
                          "span": 6,
                          "stack": false,
                          "steppedLine": false,
                          "targets": [
                              {
                                  "expr": "prometheus_wal_watcher_current_segment{cluster=~\"$cluster\", instance=~\"$instance\"}",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": "{{cluster}}:{{instance}} {{consumer}}",
                                  "refId": "A"
                              }
                          ],
                          "thresholds": [

                          ],
                          "timeFrom": null,
                          "timeShift": null,
                          "title": "Remote Write Current Segment",
                          "tooltip": {
                              "shared": true,
                              "sort": 0,
                              "value_type": "individual"
                          },
                          "type": "graph",
                          "xaxis": {
                              "buckets": null,
                              "mode": "time",
                              "name": null,
                              "show": true,
                              "values": [

                              ]
                          },
                          "yaxes": [
                              {
                                  "format": "none",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              },
                              {
                                  "format": "short",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              }
                          ]
                      }
                  ],
                  "repeat": null,
                  "repeatIteration": null,
                  "repeatRowId": null,
                  "showTitle": true,
                  "title": "Segments",
                  "titleSize": "h6",
                  "type": "row"
              },
              {
                  "collapse": false,
                  "collapsed": false,
                  "panels": [
                      {
                          "aliasColors": {

                          },
                          "bars": false,
                          "dashLength": 10,
                          "dashes": false,
                          "datasource": "$datasource",
                          "fill": 1,
                          "fillGradient": 0,
                          "gridPos": {

                          },
                          "id": 13,
                          "legend": {
                              "alignAsTable": false,
                              "avg": false,
                              "current": false,
                              "max": false,
                              "min": false,
                              "rightSide": false,
                              "show": true,
                              "sideWidth": null,
                              "total": false,
                              "values": false
                          },
                          "lines": true,
                          "linewidth": 1,
                          "links": [

                          ],
                          "nullPointMode": "null",
                          "percentage": false,
                          "pointradius": 5,
                          "points": false,
                          "renderer": "flot",
                          "repeat": null,
                          "seriesOverrides": [

                          ],
                          "spaceLength": 10,
                          "span": 3,
                          "stack": false,
                          "steppedLine": false,
                          "targets": [
                              {
                                  "expr": "rate(prometheus_remote_storage_dropped_samples_total{cluster=~\"$cluster\", instance=~\"$instance\", url=~\"$url\"}[5m]) or rate(prometheus_remote_storage_samples_dropped_total{cluster=~\"$cluster\", instance=~\"$instance\", url=~\"$url\"}[5m])",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": "{{cluster}}:{{instance}} {{remote_name}}:{{url}}",
                                  "refId": "A"
                              }
                          ],
                          "thresholds": [

                          ],
                          "timeFrom": null,
                          "timeShift": null,
                          "title": "Dropped Samples",
                          "tooltip": {
                              "shared": true,
                              "sort": 0,
                              "value_type": "individual"
                          },
                          "type": "graph",
                          "xaxis": {
                              "buckets": null,
                              "mode": "time",
                              "name": null,
                              "show": true,
                              "values": [

                              ]
                          },
                          "yaxes": [
                              {
                                  "format": "short",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              },
                              {
                                  "format": "short",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              }
                          ]
                      },
                      {
                          "aliasColors": {

                          },
                          "bars": false,
                          "dashLength": 10,
                          "dashes": false,
                          "datasource": "$datasource",
                          "fill": 1,
                          "fillGradient": 0,
                          "gridPos": {

                          },
                          "id": 14,
                          "legend": {
                              "alignAsTable": false,
                              "avg": false,
                              "current": false,
                              "max": false,
                              "min": false,
                              "rightSide": false,
                              "show": true,
                              "sideWidth": null,
                              "total": false,
                              "values": false
                          },
                          "lines": true,
                          "linewidth": 1,
                          "links": [

                          ],
                          "nullPointMode": "null",
                          "percentage": false,
                          "pointradius": 5,
                          "points": false,
                          "renderer": "flot",
                          "repeat": null,
                          "seriesOverrides": [

                          ],
                          "spaceLength": 10,
                          "span": 3,
                          "stack": false,
                          "steppedLine": false,
                          "targets": [
                              {
                                  "expr": "rate(prometheus_remote_storage_failed_samples_total{cluster=~\"$cluster\", instance=~\"$instance\", url=~\"$url\"}[5m]) or rate(prometheus_remote_storage_samples_failed_total{cluster=~\"$cluster\", instance=~\"$instance\", url=~\"$url\"}[5m])",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": "{{cluster}}:{{instance}} {{remote_name}}:{{url}}",
                                  "refId": "A"
                              }
                          ],
                          "thresholds": [

                          ],
                          "timeFrom": null,
                          "timeShift": null,
                          "title": "Failed Samples",
                          "tooltip": {
                              "shared": true,
                              "sort": 0,
                              "value_type": "individual"
                          },
                          "type": "graph",
                          "xaxis": {
                              "buckets": null,
                              "mode": "time",
                              "name": null,
                              "show": true,
                              "values": [

                              ]
                          },
                          "yaxes": [
                              {
                                  "format": "short",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              },
                              {
                                  "format": "short",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              }
                          ]
                      },
                      {
                          "aliasColors": {

                          },
                          "bars": false,
                          "dashLength": 10,
                          "dashes": false,
                          "datasource": "$datasource",
                          "fill": 1,
                          "fillGradient": 0,
                          "gridPos": {

                          },
                          "id": 15,
                          "legend": {
                              "alignAsTable": false,
                              "avg": false,
                              "current": false,
                              "max": false,
                              "min": false,
                              "rightSide": false,
                              "show": true,
                              "sideWidth": null,
                              "total": false,
                              "values": false
                          },
                          "lines": true,
                          "linewidth": 1,
                          "links": [

                          ],
                          "nullPointMode": "null",
                          "percentage": false,
                          "pointradius": 5,
                          "points": false,
                          "renderer": "flot",
                          "repeat": null,
                          "seriesOverrides": [

                          ],
                          "spaceLength": 10,
                          "span": 3,
                          "stack": false,
                          "steppedLine": false,
                          "targets": [
                              {
                                  "expr": "rate(prometheus_remote_storage_retried_samples_total{cluster=~\"$cluster\", instance=~\"$instance\", url=~\"$url\"}[5m]) or rate(prometheus_remote_storage_samples_retried_total{cluster=~\"$cluster\", instance=~\"$instance\", url=~\"$url\"}[5m])",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": "{{cluster}}:{{instance}} {{remote_name}}:{{url}}",
                                  "refId": "A"
                              }
                          ],
                          "thresholds": [

                          ],
                          "timeFrom": null,
                          "timeShift": null,
                          "title": "Retried Samples",
                          "tooltip": {
                              "shared": true,
                              "sort": 0,
                              "value_type": "individual"
                          },
                          "type": "graph",
                          "xaxis": {
                              "buckets": null,
                              "mode": "time",
                              "name": null,
                              "show": true,
                              "values": [

                              ]
                          },
                          "yaxes": [
                              {
                                  "format": "short",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              },
                              {
                                  "format": "short",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              }
                          ]
                      },
                      {
                          "aliasColors": {

                          },
                          "bars": false,
                          "dashLength": 10,
                          "dashes": false,
                          "datasource": "$datasource",
                          "fill": 1,
                          "fillGradient": 0,
                          "gridPos": {

                          },
                          "id": 16,
                          "legend": {
                              "alignAsTable": false,
                              "avg": false,
                              "current": false,
                              "max": false,
                              "min": false,
                              "rightSide": false,
                              "show": true,
                              "sideWidth": null,
                              "total": false,
                              "values": false
                          },
                          "lines": true,
                          "linewidth": 1,
                          "links": [

                          ],
                          "nullPointMode": "null",
                          "percentage": false,
                          "pointradius": 5,
                          "points": false,
                          "renderer": "flot",
                          "repeat": null,
                          "seriesOverrides": [

                          ],
                          "spaceLength": 10,
                          "span": 3,
                          "stack": false,
                          "steppedLine": false,
                          "targets": [
                              {
                                  "expr": "rate(prometheus_remote_storage_enqueue_retries_total{cluster=~\"$cluster\", instance=~\"$instance\", url=~\"$url\"}[5m])",
                                  "format": "time_series",
                                  "intervalFactor": 2,
                                  "legendFormat": "{{cluster}}:{{instance}} {{remote_name}}:{{url}}",
                                  "refId": "A"
                              }
                          ],
                          "thresholds": [

                          ],
                          "timeFrom": null,
                          "timeShift": null,
                          "title": "Enqueue Retries",
                          "tooltip": {
                              "shared": true,
                              "sort": 0,
                              "value_type": "individual"
                          },
                          "type": "graph",
                          "xaxis": {
                              "buckets": null,
                              "mode": "time",
                              "name": null,
                              "show": true,
                              "values": [

                              ]
                          },
                          "yaxes": [
                              {
                                  "format": "short",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              },
                              {
                                  "format": "short",
                                  "label": null,
                                  "logBase": 1,
                                  "max": null,
                                  "min": null,
                                  "show": true
                              }
                          ]
                      }
                  ],
                  "repeat": null,
                  "repeatIteration": null,
                  "repeatRowId": null,
                  "showTitle": true,
                  "title": "Misc. Rates",
                  "titleSize": "h6",
                  "type": "row"
              }
          ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
              "prometheus-mixin"
          ],
          "templating": {
              "list": [
                  {
                      "hide": 0,
                      "label": null,
                      "name": "datasource",
                      "options": [

                      ],
                      "query": "prometheus",
                      "refresh": 1,
                      "regex": "",
                      "type": "datasource"
                  },
                  {
                      "allValue": null,
                      "current": {
                          "text": {
                              "selected": true,
                              "text": "All",
                              "value": "$__all"
                          },
                          "value": {
                              "selected": true,
                              "text": "All",
                              "value": "$__all"
                          }
                      },
                      "datasource": "$datasource",
                      "hide": 0,
                      "includeAll": true,
                      "label": null,
                      "multi": false,
                      "name": "cluster",
                      "options": [

                      ],
                      "query": "label_values(prometheus_build_info, cluster)",
                      "refresh": 2,
                      "regex": "",
                      "sort": 0,
                      "tagValuesQuery": "",
                      "tags": [

                      ],
                      "tagsQuery": "",
                      "type": "query",
                      "useTags": false
                  },
                  {
                      "allValue": null,
                      "current": {
                          "text": {
                              "selected": true,
                              "text": "All",
                              "value": "$__all"
                          },
                          "value": {
                              "selected": true,
                              "text": "All",
                              "value": "$__all"
                          }
                      },
                      "datasource": "$datasource",
                      "hide": 0,
                      "includeAll": true,
                      "label": null,
                      "multi": false,
                      "name": "instance",
                      "options": [

                      ],
                      "query": "label_values(prometheus_build_info{cluster=~\"$cluster\"}, instance)",
                      "refresh": 2,
                      "regex": "",
                      "sort": 0,
                      "tagValuesQuery": "",
                      "tags": [

                      ],
                      "tagsQuery": "",
                      "type": "query",
                      "useTags": false
                  },
                  {
                      "allValue": null,
                      "current": {

                      },
                      "datasource": "$datasource",
                      "hide": 0,
                      "includeAll": true,
                      "label": null,
                      "multi": false,
                      "name": "url",
                      "options": [

                      ],
                      "query": "label_values(prometheus_remote_storage_shards{cluster=~\"$cluster\", instance=~\"$instance\"}, url)",
                      "refresh": 2,
                      "regex": "",
                      "sort": 0,
                      "tagValuesQuery": "",
                      "tags": [

                      ],
                      "tagsQuery": "",
                      "type": "query",
                      "useTags": false
                  }
              ]
          },
          "time": {
              "from": "now-6h",
              "to": "now"
          },
          "timepicker": {
              "refresh_intervals": [
                  "5s",
                  "10s",
                  "30s",
                  "1m",
                  "5m",
                  "15m",
                  "30m",
                  "1h",
                  "2h",
                  "1d"
              ],
              "time_options": [
                  "5m",
                  "15m",
                  "1h",
                  "6h",
                  "12h",
                  "24h",
                  "2d",
                  "7d",
                  "30d"
              ]
          },
          "timezone": "browser",
          "title": "Prometheus / Remote Write",
          "version": 0
      }
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"prometheus-remote-write.json":"{\n    \"__inputs\": [\n\n    ],\n    \"__requires\": [\n\n    ],\n    \"annotations\": {\n        \"list\": [\n\n        ]\n    },\n    \"editable\": true,\n    \"gnetId\": null,\n    \"graphTooltip\": 0,\n    \"hideControls\": false,\n    \"id\": null,\n    \"links\": [\n\n    ],\n    \"refresh\": \"60s\",\n    \"rows\": [\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 2,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"(\\n  prometheus_remote_storage_highest_timestamp_in_seconds{cluster=~\\\"$cluster\\\", instance=~\\\"$instance\\\"} \\n-  \\n  ignoring(remote_name, url) group_right(instance) (prometheus_remote_storage_queue_highest_sent_timestamp_seconds{cluster=~\\\"$cluster\\\", instance=~\\\"$instance\\\", url=~\\\"$url\\\"} != 0)\\n)\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{cluster}}:{{instance}} {{remote_name}}:{{url}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Highest Timestamp In vs. Highest Timestamp Sent\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 3,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"clamp_min(\\n  rate(prometheus_remote_storage_highest_timestamp_in_seconds{cluster=~\\\"$cluster\\\", instance=~\\\"$instance\\\"}[5m])  \\n- \\n  ignoring (remote_name, url) group_right(instance) rate(prometheus_remote_storage_queue_highest_sent_timestamp_seconds{cluster=~\\\"$cluster\\\", instance=~\\\"$instance\\\", url=~\\\"$url\\\"}[5m])\\n, 0)\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{cluster}}:{{instance}} {{remote_name}}:{{url}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Rate[5m]\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Timestamps\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 4,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"rate(\\n  prometheus_remote_storage_samples_in_total{cluster=~\\\"$cluster\\\", instance=~\\\"$instance\\\"}[5m])\\n- \\n  ignoring(remote_name, url) group_right(instance) (rate(prometheus_remote_storage_succeeded_samples_total{cluster=~\\\"$cluster\\\", instance=~\\\"$instance\\\", url=~\\\"$url\\\"}[5m]) or rate(prometheus_remote_storage_samples_total{cluster=~\\\"$cluster\\\", instance=~\\\"$instance\\\", url=~\\\"$url\\\"}[5m]))\\n- \\n  (rate(prometheus_remote_storage_dropped_samples_total{cluster=~\\\"$cluster\\\", instance=~\\\"$instance\\\", url=~\\\"$url\\\"}[5m]) or rate(prometheus_remote_storage_samples_dropped_total{cluster=~\\\"$cluster\\\", instance=~\\\"$instance\\\", url=~\\\"$url\\\"}[5m]))\\n\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{cluster}}:{{instance}} {{remote_name}}:{{url}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Rate, in vs. succeeded or dropped [5m]\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Samples\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 5,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"minSpan\": 6,\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 12,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"prometheus_remote_storage_shards{cluster=~\\\"$cluster\\\", instance=~\\\"$instance\\\", url=~\\\"$url\\\"}\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{cluster}}:{{instance}} {{remote_name}}:{{url}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Current Shards\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 6,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 4,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"prometheus_remote_storage_shards_max{cluster=~\\\"$cluster\\\", instance=~\\\"$instance\\\", url=~\\\"$url\\\"}\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{cluster}}:{{instance}} {{remote_name}}:{{url}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Max Shards\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 7,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 4,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"prometheus_remote_storage_shards_min{cluster=~\\\"$cluster\\\", instance=~\\\"$instance\\\", url=~\\\"$url\\\"}\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{cluster}}:{{instance}} {{remote_name}}:{{url}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Min Shards\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 8,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 4,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"prometheus_remote_storage_shards_desired{cluster=~\\\"$cluster\\\", instance=~\\\"$instance\\\", url=~\\\"$url\\\"}\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{cluster}}:{{instance}} {{remote_name}}:{{url}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Desired Shards\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Shards\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 9,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"prometheus_remote_storage_shard_capacity{cluster=~\\\"$cluster\\\", instance=~\\\"$instance\\\", url=~\\\"$url\\\"}\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{cluster}}:{{instance}} {{remote_name}}:{{url}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Shard Capacity\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 10,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"prometheus_remote_storage_pending_samples{cluster=~\\\"$cluster\\\", instance=~\\\"$instance\\\", url=~\\\"$url\\\"} or prometheus_remote_storage_samples_pending{cluster=~\\\"$cluster\\\", instance=~\\\"$instance\\\", url=~\\\"$url\\\"}\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{cluster}}:{{instance}} {{remote_name}}:{{url}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Pending Samples\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Shard Details\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 11,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"prometheus_tsdb_wal_segment_current{cluster=~\\\"$cluster\\\", instance=~\\\"$instance\\\"}\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{cluster}}:{{instance}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"TSDB Current Segment\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"none\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 12,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 6,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"prometheus_wal_watcher_current_segment{cluster=~\\\"$cluster\\\", instance=~\\\"$instance\\\"}\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{cluster}}:{{instance}} {{consumer}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Remote Write Current Segment\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"none\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Segments\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        },\n        {\n            \"collapse\": false,\n            \"collapsed\": false,\n            \"panels\": [\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 13,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 3,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"rate(prometheus_remote_storage_dropped_samples_total{cluster=~\\\"$cluster\\\", instance=~\\\"$instance\\\", url=~\\\"$url\\\"}[5m]) or rate(prometheus_remote_storage_samples_dropped_total{cluster=~\\\"$cluster\\\", instance=~\\\"$instance\\\", url=~\\\"$url\\\"}[5m])\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{cluster}}:{{instance}} {{remote_name}}:{{url}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Dropped Samples\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 14,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 3,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"rate(prometheus_remote_storage_failed_samples_total{cluster=~\\\"$cluster\\\", instance=~\\\"$instance\\\", url=~\\\"$url\\\"}[5m]) or rate(prometheus_remote_storage_samples_failed_total{cluster=~\\\"$cluster\\\", instance=~\\\"$instance\\\", url=~\\\"$url\\\"}[5m])\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{cluster}}:{{instance}} {{remote_name}}:{{url}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Failed Samples\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 15,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 3,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"rate(prometheus_remote_storage_retried_samples_total{cluster=~\\\"$cluster\\\", instance=~\\\"$instance\\\", url=~\\\"$url\\\"}[5m]) or rate(prometheus_remote_storage_samples_retried_total{cluster=~\\\"$cluster\\\", instance=~\\\"$instance\\\", url=~\\\"$url\\\"}[5m])\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{cluster}}:{{instance}} {{remote_name}}:{{url}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Retried Samples\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                },\n                {\n                    \"aliasColors\": {\n\n                    },\n                    \"bars\": false,\n                    \"dashLength\": 10,\n                    \"dashes\": false,\n                    \"datasource\": \"$datasource\",\n                    \"fill\": 1,\n                    \"fillGradient\": 0,\n                    \"gridPos\": {\n\n                    },\n                    \"id\": 16,\n                    \"legend\": {\n                        \"alignAsTable\": false,\n                        \"avg\": false,\n                        \"current\": false,\n                        \"max\": false,\n                        \"min\": false,\n                        \"rightSide\": false,\n                        \"show\": true,\n                        \"sideWidth\": null,\n                        \"total\": false,\n                        \"values\": false\n                    },\n                    \"lines\": true,\n                    \"linewidth\": 1,\n                    \"links\": [\n\n                    ],\n                    \"nullPointMode\": \"null\",\n                    \"percentage\": false,\n                    \"pointradius\": 5,\n                    \"points\": false,\n                    \"renderer\": \"flot\",\n                    \"repeat\": null,\n                    \"seriesOverrides\": [\n\n                    ],\n                    \"spaceLength\": 10,\n                    \"span\": 3,\n                    \"stack\": false,\n                    \"steppedLine\": false,\n                    \"targets\": [\n                        {\n                            \"expr\": \"rate(prometheus_remote_storage_enqueue_retries_total{cluster=~\\\"$cluster\\\", instance=~\\\"$instance\\\", url=~\\\"$url\\\"}[5m])\",\n                            \"format\": \"time_series\",\n                            \"intervalFactor\": 2,\n                            \"legendFormat\": \"{{cluster}}:{{instance}} {{remote_name}}:{{url}}\",\n                            \"refId\": \"A\"\n                        }\n                    ],\n                    \"thresholds\": [\n\n                    ],\n                    \"timeFrom\": null,\n                    \"timeShift\": null,\n                    \"title\": \"Enqueue Retries\",\n                    \"tooltip\": {\n                        \"shared\": true,\n                        \"sort\": 0,\n                        \"value_type\": \"individual\"\n                    },\n                    \"type\": \"graph\",\n                    \"xaxis\": {\n                        \"buckets\": null,\n                        \"mode\": \"time\",\n                        \"name\": null,\n                        \"show\": true,\n                        \"values\": [\n\n                        ]\n                    },\n                    \"yaxes\": [\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        },\n                        {\n                            \"format\": \"short\",\n                            \"label\": null,\n                            \"logBase\": 1,\n                            \"max\": null,\n                            \"min\": null,\n                            \"show\": true\n                        }\n                    ]\n                }\n            ],\n            \"repeat\": null,\n            \"repeatIteration\": null,\n            \"repeatRowId\": null,\n            \"showTitle\": true,\n            \"title\": \"Misc. Rates\",\n            \"titleSize\": \"h6\",\n            \"type\": \"row\"\n        }\n    ],\n    \"schemaVersion\": 14,\n    \"style\": \"dark\",\n    \"tags\": [\n        \"prometheus-mixin\"\n    ],\n    \"templating\": {\n        \"list\": [\n            {\n                \"hide\": 0,\n                \"label\": null,\n                \"name\": \"datasource\",\n                \"options\": [\n\n                ],\n                \"query\": \"prometheus\",\n                \"refresh\": 1,\n                \"regex\": \"\",\n                \"type\": \"datasource\"\n            },\n            {\n                \"allValue\": null,\n                \"current\": {\n                    \"text\": {\n                        \"selected\": true,\n                        \"text\": \"All\",\n                        \"value\": \"$__all\"\n                    },\n                    \"value\": {\n                        \"selected\": true,\n                        \"text\": \"All\",\n                        \"value\": \"$__all\"\n                    }\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 0,\n                \"includeAll\": true,\n                \"label\": null,\n                \"multi\": false,\n                \"name\": \"cluster\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(prometheus_build_info, cluster)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"sort\": 0,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            },\n            {\n                \"allValue\": null,\n                \"current\": {\n                    \"text\": {\n                        \"selected\": true,\n                        \"text\": \"All\",\n                        \"value\": \"$__all\"\n                    },\n                    \"value\": {\n                        \"selected\": true,\n                        \"text\": \"All\",\n                        \"value\": \"$__all\"\n                    }\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 0,\n                \"includeAll\": true,\n                \"label\": null,\n                \"multi\": false,\n                \"name\": \"instance\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(prometheus_build_info{cluster=~\\\"$cluster\\\"}, instance)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"sort\": 0,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            },\n            {\n                \"allValue\": null,\n                \"current\": {\n\n                },\n                \"datasource\": \"$datasource\",\n                \"hide\": 0,\n                \"includeAll\": true,\n                \"label\": null,\n                \"multi\": false,\n                \"name\": \"url\",\n                \"options\": [\n\n                ],\n                \"query\": \"label_values(prometheus_remote_storage_shards{cluster=~\\\"$cluster\\\", instance=~\\\"$instance\\\"}, url)\",\n                \"refresh\": 2,\n                \"regex\": \"\",\n                \"sort\": 0,\n                \"tagValuesQuery\": \"\",\n                \"tags\": [\n\n                ],\n                \"tagsQuery\": \"\",\n                \"type\": \"query\",\n                \"useTags\": false\n            }\n        ]\n    },\n    \"time\": {\n        \"from\": \"now-6h\",\n        \"to\": \"now\"\n    },\n    \"timepicker\": {\n        \"refresh_intervals\": [\n            \"5s\",\n            \"10s\",\n            \"30s\",\n            \"1m\",\n            \"5m\",\n            \"15m\",\n            \"30m\",\n            \"1h\",\n            \"2h\",\n            \"1d\"\n        ],\n        \"time_options\": [\n            \"5m\",\n            \"15m\",\n            \"1h\",\n            \"6h\",\n            \"12h\",\n            \"24h\",\n            \"2d\",\n            \"7d\",\n            \"30d\"\n        ]\n    },\n    \"timezone\": \"browser\",\n    \"title\": \"Prometheus / Remote Write\",\n    \"version\": 0\n}"},"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"grafana","app.kubernetes.io/name":"grafana","app.kubernetes.io/part-of":"kube-prometheus","app.kubernetes.io/version":"11.3.1"},"name":"grafana-dashboard-prometheus-remote-write","namespace":"monitoring"}}
    creationTimestamp: "2024-11-25T14:40:26Z"
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 11.3.1
    name: grafana-dashboard-prometheus-remote-write
    namespace: monitoring
    resourceVersion: "3039634"
    uid: 60b08716-2fa4-46a2-b1f8-a86f0336c6ee
- apiVersion: v1
  data:
    proxy.json: |-
      {
          "editable": false,
          "links": [
              {
                  "asDropdown": true,
                  "includeVars": true,
                  "keepTime": true,
                  "tags": [
                      "kubernetes-mixin"
                  ],
                  "targetBlank": false,
                  "title": "Kubernetes",
                  "type": "dashboards"
              }
          ],
          "panels": [
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "none"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 4,
                      "x": 0,
                      "y": 0
                  },
                  "id": 1,
                  "interval": "1m",
                  "options": {
                      "colorMode": "none"
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(up{cluster=\"$cluster\", job=\"kube-proxy\"})",
                          "instant": true
                      }
                  ],
                  "title": "Up",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "ops"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 10,
                      "x": 4,
                      "y": 0
                  },
                  "id": 2,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(kubeproxy_sync_proxy_rules_duration_seconds_count{cluster=\"$cluster\", job=\"kube-proxy\", instance=~\"$instance\"}[$__rate_interval]))",
                          "legendFormat": "rate"
                      }
                  ],
                  "title": "Rules Sync Rate",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "s"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 10,
                      "x": 14,
                      "y": 0
                  },
                  "id": 3,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "histogram_quantile(0.99,rate(kubeproxy_sync_proxy_rules_duration_seconds_bucket{cluster=\"$cluster\", job=\"kube-proxy\", instance=~\"$instance\"}[$__rate_interval]))",
                          "legendFormat": "{{instance}}"
                      }
                  ],
                  "title": "Rules Sync Latency 99th Quantile",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "ops"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 7
                  },
                  "id": 4,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(kubeproxy_network_programming_duration_seconds_count{cluster=\"$cluster\", job=\"kube-proxy\", instance=~\"$instance\"}[$__rate_interval]))",
                          "legendFormat": "rate"
                      }
                  ],
                  "title": "Network Programming Rate",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "s"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 7
                  },
                  "id": 5,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "histogram_quantile(0.99, sum(rate(kubeproxy_network_programming_duration_seconds_bucket{cluster=\"$cluster\", job=\"kube-proxy\", instance=~\"$instance\"}[$__rate_interval])) by (instance, le))",
                          "legendFormat": "{{instance}}"
                      }
                  ],
                  "title": "Network Programming Latency 99th Quantile",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "ops"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 8,
                      "x": 0,
                      "y": 14
                  },
                  "id": 6,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(rest_client_requests_total{cluster=\"$cluster\",job=\"kube-proxy\", instance=~\"$instance\",code=~\"2..\"}[$__rate_interval]))",
                          "legendFormat": "2xx"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(rest_client_requests_total{cluster=\"$cluster\",job=\"kube-proxy\", instance=~\"$instance\",code=~\"3..\"}[$__rate_interval]))",
                          "legendFormat": "3xx"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(rest_client_requests_total{cluster=\"$cluster\",job=\"kube-proxy\", instance=~\"$instance\",code=~\"4..\"}[$__rate_interval]))",
                          "legendFormat": "4xx"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(rest_client_requests_total{cluster=\"$cluster\",job=\"kube-proxy\", instance=~\"$instance\",code=~\"5..\"}[$__rate_interval]))",
                          "legendFormat": "5xx"
                      }
                  ],
                  "title": "Kube API Request Rate",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "ops"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 16,
                      "x": 8,
                      "y": 14
                  },
                  "id": 7,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "histogram_quantile(0.99, sum(rate(rest_client_request_duration_seconds_bucket{cluster=\"$cluster\", job=\"kube-proxy\",instance=~\"$instance\",verb=\"POST\"}[$__rate_interval])) by (verb, url, le))",
                          "legendFormat": "{{verb}} {{url}}"
                      }
                  ],
                  "title": "Post Request Latency 99th Quantile",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "s"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 21
                  },
                  "id": 8,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "histogram_quantile(0.99, sum(rate(rest_client_request_duration_seconds_bucket{cluster=\"$cluster\", job=\"kube-proxy\", instance=~\"$instance\", verb=\"GET\"}[$__rate_interval])) by (verb, url, le))",
                          "legendFormat": "{{verb}} {{url}}"
                      }
                  ],
                  "title": "Get Request Latency 99th Quantile",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "bytes"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 8,
                      "x": 0,
                      "y": 28
                  },
                  "id": 9,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "process_resident_memory_bytes{cluster=\"$cluster\", job=\"kube-proxy\",instance=~\"$instance\"}",
                          "legendFormat": "{{instance}}"
                      }
                  ],
                  "title": "Memory",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "short"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 8,
                      "x": 8,
                      "y": 28
                  },
                  "id": 10,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "rate(process_cpu_seconds_total{cluster=\"$cluster\", job=\"kube-proxy\",instance=~\"$instance\"}[$__rate_interval])",
                          "legendFormat": "{{instance}}"
                      }
                  ],
                  "title": "CPU usage",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "short"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 8,
                      "x": 16,
                      "y": 28
                  },
                  "id": 11,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "go_goroutines{cluster=\"$cluster\", job=\"kube-proxy\",instance=~\"$instance\"}",
                          "legendFormat": "{{instance}}"
                      }
                  ],
                  "title": "Goroutines",
                  "type": "timeseries"
              }
          ],
          "refresh": "10s",
          "schemaVersion": 39,
          "tags": [
              "kubernetes-mixin"
          ],
          "templating": {
              "list": [
                  {
                      "current": {
                          "selected": true,
                          "text": "default",
                          "value": "default"
                      },
                      "hide": 0,
                      "label": "Data source",
                      "name": "datasource",
                      "query": "prometheus",
                      "regex": "",
                      "type": "datasource"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "cluster",
                      "name": "cluster",
                      "query": "label_values(up{job=\"kube-proxy\"}, cluster)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  },
                  {
                      "allValue": ".+",
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "includeAll": true,
                      "label": "instance",
                      "name": "instance",
                      "query": "label_values(up{job=\"kube-proxy\", cluster=\"$cluster\", job=\"kube-proxy\"}, instance)",
                      "refresh": 2,
                      "type": "query"
                  }
              ]
          },
          "time": {
              "from": "now-1h",
              "to": "now"
          },
          "timezone": "UTC",
          "title": "Kubernetes / Proxy",
          "uid": "632e265de029684c40b21cb76bca4f94"
      }
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"proxy.json":"{\n    \"editable\": false,\n    \"links\": [\n        {\n            \"asDropdown\": true,\n            \"includeVars\": true,\n            \"keepTime\": true,\n            \"tags\": [\n                \"kubernetes-mixin\"\n            ],\n            \"targetBlank\": false,\n            \"title\": \"Kubernetes\",\n            \"type\": \"dashboards\"\n        }\n    ],\n    \"panels\": [\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"unit\": \"none\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 4,\n                \"x\": 0,\n                \"y\": 0\n            },\n            \"id\": 1,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"colorMode\": \"none\"\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(up{cluster=\\\"$cluster\\\", job=\\\"kube-proxy\\\"})\",\n                    \"instant\": true\n                }\n            ],\n            \"title\": \"Up\",\n            \"type\": \"stat\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"ops\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 10,\n                \"x\": 4,\n                \"y\": 0\n            },\n            \"id\": 2,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(kubeproxy_sync_proxy_rules_duration_seconds_count{cluster=\\\"$cluster\\\", job=\\\"kube-proxy\\\", instance=~\\\"$instance\\\"}[$__rate_interval]))\",\n                    \"legendFormat\": \"rate\"\n                }\n            ],\n            \"title\": \"Rules Sync Rate\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"s\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 10,\n                \"x\": 14,\n                \"y\": 0\n            },\n            \"id\": 3,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"histogram_quantile(0.99,rate(kubeproxy_sync_proxy_rules_duration_seconds_bucket{cluster=\\\"$cluster\\\", job=\\\"kube-proxy\\\", instance=~\\\"$instance\\\"}[$__rate_interval]))\",\n                    \"legendFormat\": \"{{instance}}\"\n                }\n            ],\n            \"title\": \"Rules Sync Latency 99th Quantile\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"ops\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 7\n            },\n            \"id\": 4,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(kubeproxy_network_programming_duration_seconds_count{cluster=\\\"$cluster\\\", job=\\\"kube-proxy\\\", instance=~\\\"$instance\\\"}[$__rate_interval]))\",\n                    \"legendFormat\": \"rate\"\n                }\n            ],\n            \"title\": \"Network Programming Rate\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"s\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 7\n            },\n            \"id\": 5,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"histogram_quantile(0.99, sum(rate(kubeproxy_network_programming_duration_seconds_bucket{cluster=\\\"$cluster\\\", job=\\\"kube-proxy\\\", instance=~\\\"$instance\\\"}[$__rate_interval])) by (instance, le))\",\n                    \"legendFormat\": \"{{instance}}\"\n                }\n            ],\n            \"title\": \"Network Programming Latency 99th Quantile\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"ops\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 8,\n                \"x\": 0,\n                \"y\": 14\n            },\n            \"id\": 6,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(rest_client_requests_total{cluster=\\\"$cluster\\\",job=\\\"kube-proxy\\\", instance=~\\\"$instance\\\",code=~\\\"2..\\\"}[$__rate_interval]))\",\n                    \"legendFormat\": \"2xx\"\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(rest_client_requests_total{cluster=\\\"$cluster\\\",job=\\\"kube-proxy\\\", instance=~\\\"$instance\\\",code=~\\\"3..\\\"}[$__rate_interval]))\",\n                    \"legendFormat\": \"3xx\"\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(rest_client_requests_total{cluster=\\\"$cluster\\\",job=\\\"kube-proxy\\\", instance=~\\\"$instance\\\",code=~\\\"4..\\\"}[$__rate_interval]))\",\n                    \"legendFormat\": \"4xx\"\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(rest_client_requests_total{cluster=\\\"$cluster\\\",job=\\\"kube-proxy\\\", instance=~\\\"$instance\\\",code=~\\\"5..\\\"}[$__rate_interval]))\",\n                    \"legendFormat\": \"5xx\"\n                }\n            ],\n            \"title\": \"Kube API Request Rate\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"ops\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 16,\n                \"x\": 8,\n                \"y\": 14\n            },\n            \"id\": 7,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"histogram_quantile(0.99, sum(rate(rest_client_request_duration_seconds_bucket{cluster=\\\"$cluster\\\", job=\\\"kube-proxy\\\",instance=~\\\"$instance\\\",verb=\\\"POST\\\"}[$__rate_interval])) by (verb, url, le))\",\n                    \"legendFormat\": \"{{verb}} {{url}}\"\n                }\n            ],\n            \"title\": \"Post Request Latency 99th Quantile\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"s\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 21\n            },\n            \"id\": 8,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"histogram_quantile(0.99, sum(rate(rest_client_request_duration_seconds_bucket{cluster=\\\"$cluster\\\", job=\\\"kube-proxy\\\", instance=~\\\"$instance\\\", verb=\\\"GET\\\"}[$__rate_interval])) by (verb, url, le))\",\n                    \"legendFormat\": \"{{verb}} {{url}}\"\n                }\n            ],\n            \"title\": \"Get Request Latency 99th Quantile\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"bytes\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 8,\n                \"x\": 0,\n                \"y\": 28\n            },\n            \"id\": 9,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"process_resident_memory_bytes{cluster=\\\"$cluster\\\", job=\\\"kube-proxy\\\",instance=~\\\"$instance\\\"}\",\n                    \"legendFormat\": \"{{instance}}\"\n                }\n            ],\n            \"title\": \"Memory\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"short\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 8,\n                \"x\": 8,\n                \"y\": 28\n            },\n            \"id\": 10,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"rate(process_cpu_seconds_total{cluster=\\\"$cluster\\\", job=\\\"kube-proxy\\\",instance=~\\\"$instance\\\"}[$__rate_interval])\",\n                    \"legendFormat\": \"{{instance}}\"\n                }\n            ],\n            \"title\": \"CPU usage\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"short\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 8,\n                \"x\": 16,\n                \"y\": 28\n            },\n            \"id\": 11,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"go_goroutines{cluster=\\\"$cluster\\\", job=\\\"kube-proxy\\\",instance=~\\\"$instance\\\"}\",\n                    \"legendFormat\": \"{{instance}}\"\n                }\n            ],\n            \"title\": \"Goroutines\",\n            \"type\": \"timeseries\"\n        }\n    ],\n    \"refresh\": \"10s\",\n    \"schemaVersion\": 39,\n    \"tags\": [\n        \"kubernetes-mixin\"\n    ],\n    \"templating\": {\n        \"list\": [\n            {\n                \"current\": {\n                    \"selected\": true,\n                    \"text\": \"default\",\n                    \"value\": \"default\"\n                },\n                \"hide\": 0,\n                \"label\": \"Data source\",\n                \"name\": \"datasource\",\n                \"query\": \"prometheus\",\n                \"regex\": \"\",\n                \"type\": \"datasource\"\n            },\n            {\n                \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"${datasource}\"\n                },\n                \"hide\": 0,\n                \"label\": \"cluster\",\n                \"name\": \"cluster\",\n                \"query\": \"label_values(up{job=\\\"kube-proxy\\\"}, cluster)\",\n                \"refresh\": 2,\n                \"sort\": 1,\n                \"type\": \"query\"\n            },\n            {\n                \"allValue\": \".+\",\n                \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"${datasource}\"\n                },\n                \"hide\": 0,\n                \"includeAll\": true,\n                \"label\": \"instance\",\n                \"name\": \"instance\",\n                \"query\": \"label_values(up{job=\\\"kube-proxy\\\", cluster=\\\"$cluster\\\", job=\\\"kube-proxy\\\"}, instance)\",\n                \"refresh\": 2,\n                \"type\": \"query\"\n            }\n        ]\n    },\n    \"time\": {\n        \"from\": \"now-1h\",\n        \"to\": \"now\"\n    },\n    \"timezone\": \"UTC\",\n    \"title\": \"Kubernetes / Proxy\",\n    \"uid\": \"632e265de029684c40b21cb76bca4f94\"\n}"},"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"grafana","app.kubernetes.io/name":"grafana","app.kubernetes.io/part-of":"kube-prometheus","app.kubernetes.io/version":"11.3.1"},"name":"grafana-dashboard-proxy","namespace":"monitoring"}}
    creationTimestamp: "2024-11-25T14:40:26Z"
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 11.3.1
    name: grafana-dashboard-proxy
    namespace: monitoring
    resourceVersion: "3039637"
    uid: f069f3f6-1c06-4a17-bfc3-d6041f257d1d
- apiVersion: v1
  data:
    scheduler.json: |-
      {
          "editable": false,
          "links": [
              {
                  "asDropdown": true,
                  "includeVars": true,
                  "keepTime": true,
                  "tags": [
                      "kubernetes-mixin"
                  ],
                  "targetBlank": false,
                  "title": "Kubernetes",
                  "type": "dashboards"
              }
          ],
          "panels": [
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "none"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 4,
                      "x": 0,
                      "y": 0
                  },
                  "id": 1,
                  "interval": "1m",
                  "options": {
                      "colorMode": "none"
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(up{cluster=\"$cluster\", job=\"kube-scheduler\"})",
                          "instant": true
                      }
                  ],
                  "title": "Up",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "ops"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 10,
                      "x": 4,
                      "y": 0
                  },
                  "id": 2,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(scheduler_e2e_scheduling_duration_seconds_count{cluster=\"$cluster\", job=\"kube-scheduler\", instance=~\"$instance\"}[$__rate_interval])) by (cluster, instance)",
                          "legendFormat": "{{cluster}} {{instance}} e2e"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(scheduler_binding_duration_seconds_count{cluster=\"$cluster\", job=\"kube-scheduler\", instance=~\"$instance\"}[$__rate_interval])) by (cluster, instance)",
                          "legendFormat": "{{cluster}} {{instance}} binding"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(scheduler_scheduling_algorithm_duration_seconds_count{cluster=\"$cluster\", job=\"kube-scheduler\", instance=~\"$instance\"}[$__rate_interval])) by (cluster, instance)",
                          "legendFormat": "{{cluster}} {{instance}} scheduling algorithm"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(scheduler_volume_scheduling_duration_seconds_count{cluster=\"$cluster\", job=\"kube-scheduler\", instance=~\"$instance\"}[$__rate_interval])) by (cluster, instance)",
                          "legendFormat": "{{cluster}} {{instance}} volume"
                      }
                  ],
                  "title": "Scheduling Rate",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "s"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 10,
                      "x": 14,
                      "y": 0
                  },
                  "id": 3,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "histogram_quantile(0.99, sum(rate(scheduler_e2e_scheduling_duration_seconds_bucket{cluster=\"$cluster\", job=\"kube-scheduler\",instance=~\"$instance\"}[$__rate_interval])) by (cluster, instance, le))",
                          "legendFormat": "{{cluster}} {{instance}} e2e"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "histogram_quantile(0.99, sum(rate(scheduler_binding_duration_seconds_bucket{cluster=\"$cluster\", job=\"kube-scheduler\",instance=~\"$instance\"}[$__rate_interval])) by (cluster, instance, le))",
                          "legendFormat": "{{cluster}} {{instance}} binding"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "histogram_quantile(0.99, sum(rate(scheduler_scheduling_algorithm_duration_seconds_bucket{cluster=\"$cluster\", job=\"kube-scheduler\",instance=~\"$instance\"}[$__rate_interval])) by (cluster, instance, le))",
                          "legendFormat": "{{cluster}} {{instance}} scheduling algorithm"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "histogram_quantile(0.99, sum(rate(scheduler_volume_scheduling_duration_seconds_bucket{cluster=\"$cluster\", job=\"kube-scheduler\",instance=~\"$instance\"}[$__rate_interval])) by (cluster, instance, le))",
                          "legendFormat": "{{cluster}} {{instance}} volume"
                      }
                  ],
                  "title": "Scheduling latency 99th Quantile",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "ops"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 8,
                      "x": 0,
                      "y": 7
                  },
                  "id": 4,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(rest_client_requests_total{cluster=\"$cluster\", job=\"kube-scheduler\", instance=~\"$instance\",code=~\"2..\"}[$__rate_interval]))",
                          "legendFormat": "2xx"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(rest_client_requests_total{cluster=\"$cluster\", job=\"kube-scheduler\", instance=~\"$instance\",code=~\"3..\"}[$__rate_interval]))",
                          "legendFormat": "3xx"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(rest_client_requests_total{cluster=\"$cluster\", job=\"kube-scheduler\", instance=~\"$instance\",code=~\"4..\"}[$__rate_interval]))",
                          "legendFormat": "4xx"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(rest_client_requests_total{cluster=\"$cluster\", job=\"kube-scheduler\", instance=~\"$instance\",code=~\"5..\"}[$__rate_interval]))",
                          "legendFormat": "5xx"
                      }
                  ],
                  "title": "Kube API Request Rate",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "ops"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 16,
                      "x": 8,
                      "y": 7
                  },
                  "id": 5,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "histogram_quantile(0.99, sum(rate(rest_client_request_duration_seconds_bucket{cluster=\"$cluster\", job=\"kube-scheduler\", instance=~\"$instance\", verb=\"POST\"}[$__rate_interval])) by (verb, url, le))",
                          "legendFormat": "{{verb}} {{url}}"
                      }
                  ],
                  "title": "Post Request Latency 99th Quantile",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "s"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 14
                  },
                  "id": 6,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "histogram_quantile(0.99, sum(rate(rest_client_request_duration_seconds_bucket{cluster=\"$cluster\", job=\"kube-scheduler\", instance=~\"$instance\", verb=\"GET\"}[$__rate_interval])) by (verb, url, le))",
                          "legendFormat": "{{verb}} {{url}}"
                      }
                  ],
                  "title": "Get Request Latency 99th Quantile",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "bytes"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 8,
                      "x": 0,
                      "y": 21
                  },
                  "id": 7,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "process_resident_memory_bytes{cluster=\"$cluster\", job=\"kube-scheduler\", instance=~\"$instance\"}",
                          "legendFormat": "{{instance}}"
                      }
                  ],
                  "title": "Memory",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "short"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 8,
                      "x": 8,
                      "y": 21
                  },
                  "id": 8,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "rate(process_cpu_seconds_total{cluster=\"$cluster\", job=\"kube-scheduler\", instance=~\"$instance\"}[$__rate_interval])",
                          "legendFormat": "{{instance}}"
                      }
                  ],
                  "title": "CPU usage",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "short"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 8,
                      "x": 16,
                      "y": 21
                  },
                  "id": 9,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "go_goroutines{cluster=\"$cluster\", job=\"kube-scheduler\",instance=~\"$instance\"}",
                          "legendFormat": "{{instance}}"
                      }
                  ],
                  "title": "Goroutines",
                  "type": "timeseries"
              }
          ],
          "refresh": "10s",
          "schemaVersion": 39,
          "tags": [
              "kubernetes-mixin"
          ],
          "templating": {
              "list": [
                  {
                      "current": {
                          "selected": true,
                          "text": "default",
                          "value": "default"
                      },
                      "hide": 0,
                      "label": "Data source",
                      "name": "datasource",
                      "query": "prometheus",
                      "regex": "",
                      "type": "datasource"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "cluster",
                      "name": "cluster",
                      "query": "label_values(up{job=\"kube-scheduler\"}, cluster)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  },
                  {
                      "allValue": ".+",
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "includeAll": true,
                      "label": "instance",
                      "name": "instance",
                      "query": "label_values(up{job=\"kube-scheduler\", cluster=\"$cluster\"}, instance)",
                      "refresh": 2,
                      "type": "query"
                  }
              ]
          },
          "time": {
              "from": "now-1h",
              "to": "now"
          },
          "timezone": "UTC",
          "title": "Kubernetes / Scheduler",
          "uid": "2e6b6a3b4bddf1427b3a55aa1311c656"
      }
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"scheduler.json":"{\n    \"editable\": false,\n    \"links\": [\n        {\n            \"asDropdown\": true,\n            \"includeVars\": true,\n            \"keepTime\": true,\n            \"tags\": [\n                \"kubernetes-mixin\"\n            ],\n            \"targetBlank\": false,\n            \"title\": \"Kubernetes\",\n            \"type\": \"dashboards\"\n        }\n    ],\n    \"panels\": [\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"unit\": \"none\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 4,\n                \"x\": 0,\n                \"y\": 0\n            },\n            \"id\": 1,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"colorMode\": \"none\"\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(up{cluster=\\\"$cluster\\\", job=\\\"kube-scheduler\\\"})\",\n                    \"instant\": true\n                }\n            ],\n            \"title\": \"Up\",\n            \"type\": \"stat\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"ops\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 10,\n                \"x\": 4,\n                \"y\": 0\n            },\n            \"id\": 2,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(scheduler_e2e_scheduling_duration_seconds_count{cluster=\\\"$cluster\\\", job=\\\"kube-scheduler\\\", instance=~\\\"$instance\\\"}[$__rate_interval])) by (cluster, instance)\",\n                    \"legendFormat\": \"{{cluster}} {{instance}} e2e\"\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(scheduler_binding_duration_seconds_count{cluster=\\\"$cluster\\\", job=\\\"kube-scheduler\\\", instance=~\\\"$instance\\\"}[$__rate_interval])) by (cluster, instance)\",\n                    \"legendFormat\": \"{{cluster}} {{instance}} binding\"\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(scheduler_scheduling_algorithm_duration_seconds_count{cluster=\\\"$cluster\\\", job=\\\"kube-scheduler\\\", instance=~\\\"$instance\\\"}[$__rate_interval])) by (cluster, instance)\",\n                    \"legendFormat\": \"{{cluster}} {{instance}} scheduling algorithm\"\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(scheduler_volume_scheduling_duration_seconds_count{cluster=\\\"$cluster\\\", job=\\\"kube-scheduler\\\", instance=~\\\"$instance\\\"}[$__rate_interval])) by (cluster, instance)\",\n                    \"legendFormat\": \"{{cluster}} {{instance}} volume\"\n                }\n            ],\n            \"title\": \"Scheduling Rate\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"s\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 10,\n                \"x\": 14,\n                \"y\": 0\n            },\n            \"id\": 3,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"histogram_quantile(0.99, sum(rate(scheduler_e2e_scheduling_duration_seconds_bucket{cluster=\\\"$cluster\\\", job=\\\"kube-scheduler\\\",instance=~\\\"$instance\\\"}[$__rate_interval])) by (cluster, instance, le))\",\n                    \"legendFormat\": \"{{cluster}} {{instance}} e2e\"\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"histogram_quantile(0.99, sum(rate(scheduler_binding_duration_seconds_bucket{cluster=\\\"$cluster\\\", job=\\\"kube-scheduler\\\",instance=~\\\"$instance\\\"}[$__rate_interval])) by (cluster, instance, le))\",\n                    \"legendFormat\": \"{{cluster}} {{instance}} binding\"\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"histogram_quantile(0.99, sum(rate(scheduler_scheduling_algorithm_duration_seconds_bucket{cluster=\\\"$cluster\\\", job=\\\"kube-scheduler\\\",instance=~\\\"$instance\\\"}[$__rate_interval])) by (cluster, instance, le))\",\n                    \"legendFormat\": \"{{cluster}} {{instance}} scheduling algorithm\"\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"histogram_quantile(0.99, sum(rate(scheduler_volume_scheduling_duration_seconds_bucket{cluster=\\\"$cluster\\\", job=\\\"kube-scheduler\\\",instance=~\\\"$instance\\\"}[$__rate_interval])) by (cluster, instance, le))\",\n                    \"legendFormat\": \"{{cluster}} {{instance}} volume\"\n                }\n            ],\n            \"title\": \"Scheduling latency 99th Quantile\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"ops\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 8,\n                \"x\": 0,\n                \"y\": 7\n            },\n            \"id\": 4,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(rest_client_requests_total{cluster=\\\"$cluster\\\", job=\\\"kube-scheduler\\\", instance=~\\\"$instance\\\",code=~\\\"2..\\\"}[$__rate_interval]))\",\n                    \"legendFormat\": \"2xx\"\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(rest_client_requests_total{cluster=\\\"$cluster\\\", job=\\\"kube-scheduler\\\", instance=~\\\"$instance\\\",code=~\\\"3..\\\"}[$__rate_interval]))\",\n                    \"legendFormat\": \"3xx\"\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(rest_client_requests_total{cluster=\\\"$cluster\\\", job=\\\"kube-scheduler\\\", instance=~\\\"$instance\\\",code=~\\\"4..\\\"}[$__rate_interval]))\",\n                    \"legendFormat\": \"4xx\"\n                },\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sum(rate(rest_client_requests_total{cluster=\\\"$cluster\\\", job=\\\"kube-scheduler\\\", instance=~\\\"$instance\\\",code=~\\\"5..\\\"}[$__rate_interval]))\",\n                    \"legendFormat\": \"5xx\"\n                }\n            ],\n            \"title\": \"Kube API Request Rate\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"ops\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 16,\n                \"x\": 8,\n                \"y\": 7\n            },\n            \"id\": 5,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"histogram_quantile(0.99, sum(rate(rest_client_request_duration_seconds_bucket{cluster=\\\"$cluster\\\", job=\\\"kube-scheduler\\\", instance=~\\\"$instance\\\", verb=\\\"POST\\\"}[$__rate_interval])) by (verb, url, le))\",\n                    \"legendFormat\": \"{{verb}} {{url}}\"\n                }\n            ],\n            \"title\": \"Post Request Latency 99th Quantile\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"s\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 14\n            },\n            \"id\": 6,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"histogram_quantile(0.99, sum(rate(rest_client_request_duration_seconds_bucket{cluster=\\\"$cluster\\\", job=\\\"kube-scheduler\\\", instance=~\\\"$instance\\\", verb=\\\"GET\\\"}[$__rate_interval])) by (verb, url, le))\",\n                    \"legendFormat\": \"{{verb}} {{url}}\"\n                }\n            ],\n            \"title\": \"Get Request Latency 99th Quantile\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"bytes\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 8,\n                \"x\": 0,\n                \"y\": 21\n            },\n            \"id\": 7,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"process_resident_memory_bytes{cluster=\\\"$cluster\\\", job=\\\"kube-scheduler\\\", instance=~\\\"$instance\\\"}\",\n                    \"legendFormat\": \"{{instance}}\"\n                }\n            ],\n            \"title\": \"Memory\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"short\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 8,\n                \"x\": 8,\n                \"y\": 21\n            },\n            \"id\": 8,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"rate(process_cpu_seconds_total{cluster=\\\"$cluster\\\", job=\\\"kube-scheduler\\\", instance=~\\\"$instance\\\"}[$__rate_interval])\",\n                    \"legendFormat\": \"{{instance}}\"\n                }\n            ],\n            \"title\": \"CPU usage\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"short\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 7,\n                \"w\": 8,\n                \"x\": 16,\n                \"y\": 21\n            },\n            \"id\": 9,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"go_goroutines{cluster=\\\"$cluster\\\", job=\\\"kube-scheduler\\\",instance=~\\\"$instance\\\"}\",\n                    \"legendFormat\": \"{{instance}}\"\n                }\n            ],\n            \"title\": \"Goroutines\",\n            \"type\": \"timeseries\"\n        }\n    ],\n    \"refresh\": \"10s\",\n    \"schemaVersion\": 39,\n    \"tags\": [\n        \"kubernetes-mixin\"\n    ],\n    \"templating\": {\n        \"list\": [\n            {\n                \"current\": {\n                    \"selected\": true,\n                    \"text\": \"default\",\n                    \"value\": \"default\"\n                },\n                \"hide\": 0,\n                \"label\": \"Data source\",\n                \"name\": \"datasource\",\n                \"query\": \"prometheus\",\n                \"regex\": \"\",\n                \"type\": \"datasource\"\n            },\n            {\n                \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"${datasource}\"\n                },\n                \"hide\": 0,\n                \"label\": \"cluster\",\n                \"name\": \"cluster\",\n                \"query\": \"label_values(up{job=\\\"kube-scheduler\\\"}, cluster)\",\n                \"refresh\": 2,\n                \"sort\": 1,\n                \"type\": \"query\"\n            },\n            {\n                \"allValue\": \".+\",\n                \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"${datasource}\"\n                },\n                \"hide\": 0,\n                \"includeAll\": true,\n                \"label\": \"instance\",\n                \"name\": \"instance\",\n                \"query\": \"label_values(up{job=\\\"kube-scheduler\\\", cluster=\\\"$cluster\\\"}, instance)\",\n                \"refresh\": 2,\n                \"type\": \"query\"\n            }\n        ]\n    },\n    \"time\": {\n        \"from\": \"now-1h\",\n        \"to\": \"now\"\n    },\n    \"timezone\": \"UTC\",\n    \"title\": \"Kubernetes / Scheduler\",\n    \"uid\": \"2e6b6a3b4bddf1427b3a55aa1311c656\"\n}"},"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"grafana","app.kubernetes.io/name":"grafana","app.kubernetes.io/part-of":"kube-prometheus","app.kubernetes.io/version":"11.3.1"},"name":"grafana-dashboard-scheduler","namespace":"monitoring"}}
    creationTimestamp: "2024-11-25T14:40:26Z"
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 11.3.1
    name: grafana-dashboard-scheduler
    namespace: monitoring
    resourceVersion: "3039638"
    uid: f6383692-5011-45f9-9d8c-433a34b3ad20
- apiVersion: v1
  data:
    workload-total.json: |-
      {
          "editable": false,
          "links": [
              {
                  "asDropdown": true,
                  "includeVars": true,
                  "keepTime": true,
                  "tags": [
                      "kubernetes-mixin"
                  ],
                  "targetBlank": false,
                  "title": "Kubernetes",
                  "type": "dashboards"
              }
          ],
          "panels": [
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "color": {
                              "fixedColor": "green",
                              "mode": "fixed"
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 0,
                      "y": 0
                  },
                  "id": 1,
                  "options": {
                      "displayMode": "basic",
                      "showUnfilled": false
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sort_desc(sum(rate(container_network_receive_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Current Rate of Bytes Received",
                  "type": "bargauge"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "color": {
                              "fixedColor": "green",
                              "mode": "fixed"
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 12,
                      "y": 0
                  },
                  "id": 2,
                  "options": {
                      "displayMode": "basic",
                      "showUnfilled": false
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sort_desc(sum(rate(container_network_transmit_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Current Rate of Bytes Transmitted",
                  "type": "bargauge"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "color": {
                              "fixedColor": "green",
                              "mode": "fixed"
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 0,
                      "y": 9
                  },
                  "id": 3,
                  "options": {
                      "displayMode": "basic",
                      "showUnfilled": false
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sort_desc(avg(rate(container_network_receive_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Average Rate of Bytes Received",
                  "type": "bargauge"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "color": {
                              "fixedColor": "green",
                              "mode": "fixed"
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 12,
                      "y": 9
                  },
                  "id": 4,
                  "options": {
                      "displayMode": "basic",
                      "showUnfilled": false
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sort_desc(avg(rate(container_network_transmit_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Average Rate of Bytes Transmitted",
                  "type": "bargauge"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "binBps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 0,
                      "y": 18
                  },
                  "id": 5,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sort_desc(sum(rate(container_network_receive_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Receive Bandwidth",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "binBps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 12,
                      "y": 18
                  },
                  "id": 6,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sort_desc(sum(rate(container_network_transmit_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Transmit Bandwidth",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 0,
                      "y": 27
                  },
                  "id": 7,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sort_desc(sum(rate(container_network_receive_packets_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Received Packets",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 12,
                      "y": 27
                  },
                  "id": 8,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sort_desc(sum(rate(container_network_transmit_packets_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Transmitted Packets",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 0,
                      "y": 36
                  },
                  "id": 9,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sort_desc(sum(rate(container_network_receive_packets_dropped_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Received Packets Dropped",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 12,
                      "y": 36
                  },
                  "id": 10,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.1.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sort_desc(sum(rate(container_network_transmit_packets_dropped_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Transmitted Packets Dropped",
                  "type": "timeseries"
              }
          ],
          "refresh": "10s",
          "schemaVersion": 39,
          "tags": [
              "kubernetes-mixin"
          ],
          "templating": {
              "list": [
                  {
                      "current": {
                          "selected": true,
                          "text": "default",
                          "value": "default"
                      },
                      "hide": 0,
                      "label": "Data source",
                      "name": "datasource",
                      "query": "prometheus",
                      "regex": "",
                      "type": "datasource"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "cluster",
                      "name": "cluster",
                      "query": "label_values(kube_pod_info{job=\"kube-state-metrics\"}, cluster)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  },
                  {
                      "allValue": ".+",
                      "current": {
                          "selected": false,
                          "text": "kube-system",
                          "value": "kube-system"
                      },
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "includeAll": true,
                      "label": "namespace",
                      "name": "namespace",
                      "query": "label_values(container_network_receive_packets_total{cluster=\"$cluster\"}, namespace)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "workload",
                      "name": "workload",
                      "query": "label_values(namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=~\"$namespace\", workload=~\".+\"}, workload)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  },
                  {
                      "allValue": ".+",
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "includeAll": true,
                      "label": "workload_type",
                      "name": "type",
                      "query": "label_values(namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=~\"$namespace\", workload=~\"$workload\"}, workload_type)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  }
              ]
          },
          "time": {
              "from": "now-1h",
              "to": "now"
          },
          "timezone": "UTC",
          "title": "Kubernetes / Networking / Workload",
          "uid": "728bf77cc1166d2f3133bf25846876cc"
      }
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"workload-total.json":"{\n    \"editable\": false,\n    \"links\": [\n        {\n            \"asDropdown\": true,\n            \"includeVars\": true,\n            \"keepTime\": true,\n            \"tags\": [\n                \"kubernetes-mixin\"\n            ],\n            \"targetBlank\": false,\n            \"title\": \"Kubernetes\",\n            \"type\": \"dashboards\"\n        }\n    ],\n    \"panels\": [\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"color\": {\n                        \"fixedColor\": \"green\",\n                        \"mode\": \"fixed\"\n                    },\n                    \"unit\": \"Bps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 0\n            },\n            \"id\": 1,\n            \"options\": {\n                \"displayMode\": \"basic\",\n                \"showUnfilled\": false\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sort_desc(sum(rate(container_network_receive_bytes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=~\\\"$type\\\"}) by (pod))\\n\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Current Rate of Bytes Received\",\n            \"type\": \"bargauge\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"color\": {\n                        \"fixedColor\": \"green\",\n                        \"mode\": \"fixed\"\n                    },\n                    \"unit\": \"Bps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 0\n            },\n            \"id\": 2,\n            \"options\": {\n                \"displayMode\": \"basic\",\n                \"showUnfilled\": false\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sort_desc(sum(rate(container_network_transmit_bytes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=~\\\"$type\\\"}) by (pod))\\n\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Current Rate of Bytes Transmitted\",\n            \"type\": \"bargauge\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"color\": {\n                        \"fixedColor\": \"green\",\n                        \"mode\": \"fixed\"\n                    },\n                    \"unit\": \"Bps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 9\n            },\n            \"id\": 3,\n            \"options\": {\n                \"displayMode\": \"basic\",\n                \"showUnfilled\": false\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sort_desc(avg(rate(container_network_receive_bytes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=~\\\"$type\\\"}) by (pod))\\n\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Average Rate of Bytes Received\",\n            \"type\": \"bargauge\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"color\": {\n                        \"fixedColor\": \"green\",\n                        \"mode\": \"fixed\"\n                    },\n                    \"unit\": \"Bps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 9\n            },\n            \"id\": 4,\n            \"options\": {\n                \"displayMode\": \"basic\",\n                \"showUnfilled\": false\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sort_desc(avg(rate(container_network_transmit_bytes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=~\\\"$type\\\"}) by (pod))\\n\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Average Rate of Bytes Transmitted\",\n            \"type\": \"bargauge\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"binBps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 18\n            },\n            \"id\": 5,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sort_desc(sum(rate(container_network_receive_bytes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=~\\\"$type\\\"}) by (pod))\\n\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Receive Bandwidth\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"binBps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 18\n            },\n            \"id\": 6,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sort_desc(sum(rate(container_network_transmit_bytes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=~\\\"$type\\\"}) by (pod))\\n\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Transmit Bandwidth\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"pps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 27\n            },\n            \"id\": 7,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sort_desc(sum(rate(container_network_receive_packets_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=~\\\"$type\\\"}) by (pod))\\n\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Rate of Received Packets\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"pps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 27\n            },\n            \"id\": 8,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sort_desc(sum(rate(container_network_transmit_packets_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=~\\\"$type\\\"}) by (pod))\\n\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Rate of Transmitted Packets\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"pps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 0,\n                \"y\": 36\n            },\n            \"id\": 9,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sort_desc(sum(rate(container_network_receive_packets_dropped_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=~\\\"$type\\\"}) by (pod))\\n\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Rate of Received Packets Dropped\",\n            \"type\": \"timeseries\"\n        },\n        {\n            \"datasource\": {\n                \"type\": \"datasource\",\n                \"uid\": \"-- Mixed --\"\n            },\n            \"fieldConfig\": {\n                \"defaults\": {\n                    \"custom\": {\n                        \"fillOpacity\": 10,\n                        \"showPoints\": \"never\",\n                        \"spanNulls\": true\n                    },\n                    \"unit\": \"pps\"\n                }\n            },\n            \"gridPos\": {\n                \"h\": 9,\n                \"w\": 12,\n                \"x\": 12,\n                \"y\": 36\n            },\n            \"id\": 10,\n            \"interval\": \"1m\",\n            \"options\": {\n                \"legend\": {\n                    \"asTable\": true,\n                    \"calcs\": [\n                        \"lastNotNull\"\n                    ],\n                    \"displayMode\": \"table\",\n                    \"placement\": \"right\",\n                    \"showLegend\": true\n                },\n                \"tooltip\": {\n                    \"mode\": \"single\"\n                }\n            },\n            \"pluginVersion\": \"v11.1.0\",\n            \"targets\": [\n                {\n                    \"datasource\": {\n                        \"type\": \"prometheus\",\n                        \"uid\": \"${datasource}\"\n                    },\n                    \"expr\": \"sort_desc(sum(rate(container_network_transmit_packets_dropped_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\"}[$__rate_interval])\\n* on (namespace,pod)\\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\",namespace=~\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=~\\\"$type\\\"}) by (pod))\\n\",\n                    \"legendFormat\": \"__auto\"\n                }\n            ],\n            \"title\": \"Rate of Transmitted Packets Dropped\",\n            \"type\": \"timeseries\"\n        }\n    ],\n    \"refresh\": \"10s\",\n    \"schemaVersion\": 39,\n    \"tags\": [\n        \"kubernetes-mixin\"\n    ],\n    \"templating\": {\n        \"list\": [\n            {\n                \"current\": {\n                    \"selected\": true,\n                    \"text\": \"default\",\n                    \"value\": \"default\"\n                },\n                \"hide\": 0,\n                \"label\": \"Data source\",\n                \"name\": \"datasource\",\n                \"query\": \"prometheus\",\n                \"regex\": \"\",\n                \"type\": \"datasource\"\n            },\n            {\n                \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"${datasource}\"\n                },\n                \"hide\": 0,\n                \"label\": \"cluster\",\n                \"name\": \"cluster\",\n                \"query\": \"label_values(kube_pod_info{job=\\\"kube-state-metrics\\\"}, cluster)\",\n                \"refresh\": 2,\n                \"sort\": 1,\n                \"type\": \"query\"\n            },\n            {\n                \"allValue\": \".+\",\n                \"current\": {\n                    \"selected\": false,\n                    \"text\": \"kube-system\",\n                    \"value\": \"kube-system\"\n                },\n                \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"${datasource}\"\n                },\n                \"hide\": 0,\n                \"includeAll\": true,\n                \"label\": \"namespace\",\n                \"name\": \"namespace\",\n                \"query\": \"label_values(container_network_receive_packets_total{cluster=\\\"$cluster\\\"}, namespace)\",\n                \"refresh\": 2,\n                \"sort\": 1,\n                \"type\": \"query\"\n            },\n            {\n                \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"${datasource}\"\n                },\n                \"hide\": 0,\n                \"label\": \"workload\",\n                \"name\": \"workload\",\n                \"query\": \"label_values(namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\", workload=~\\\".+\\\"}, workload)\",\n                \"refresh\": 2,\n                \"sort\": 1,\n                \"type\": \"query\"\n            },\n            {\n                \"allValue\": \".+\",\n                \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"${datasource}\"\n                },\n                \"hide\": 0,\n                \"includeAll\": true,\n                \"label\": \"workload_type\",\n                \"name\": \"type\",\n                \"query\": \"label_values(namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=~\\\"$namespace\\\", workload=~\\\"$workload\\\"}, workload_type)\",\n                \"refresh\": 2,\n                \"sort\": 1,\n                \"type\": \"query\"\n            }\n        ]\n    },\n    \"time\": {\n        \"from\": \"now-1h\",\n        \"to\": \"now\"\n    },\n    \"timezone\": \"UTC\",\n    \"title\": \"Kubernetes / Networking / Workload\",\n    \"uid\": \"728bf77cc1166d2f3133bf25846876cc\"\n}"},"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"grafana","app.kubernetes.io/name":"grafana","app.kubernetes.io/part-of":"kube-prometheus","app.kubernetes.io/version":"11.3.1"},"name":"grafana-dashboard-workload-total","namespace":"monitoring"}}
    creationTimestamp: "2024-11-25T14:40:26Z"
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 11.3.1
    name: grafana-dashboard-workload-total
    namespace: monitoring
    resourceVersion: "3039639"
    uid: ca286deb-d9e0-428f-92a9-54ec20400424
- apiVersion: v1
  data:
    dashboards.yaml: |-
      {
          "apiVersion": 1,
          "providers": [
              {
                  "folder": "Default",
                  "folderUid": "",
                  "name": "0",
                  "options": {
                      "path": "/grafana-dashboard-definitions/0"
                  },
                  "orgId": 1,
                  "type": "file"
              }
          ]
      }
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"dashboards.yaml":"{\n    \"apiVersion\": 1,\n    \"providers\": [\n        {\n            \"folder\": \"Default\",\n            \"folderUid\": \"\",\n            \"name\": \"0\",\n            \"options\": {\n                \"path\": \"/grafana-dashboard-definitions/0\"\n            },\n            \"orgId\": 1,\n            \"type\": \"file\"\n        }\n    ]\n}"},"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"grafana","app.kubernetes.io/name":"grafana","app.kubernetes.io/part-of":"kube-prometheus","app.kubernetes.io/version":"11.3.1"},"name":"grafana-dashboards","namespace":"monitoring"}}
    creationTimestamp: "2024-11-25T14:40:26Z"
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 11.3.1
    name: grafana-dashboards
    namespace: monitoring
    resourceVersion: "3039640"
    uid: c603a644-fc4a-43c2-b5bc-04223d3018c8
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIDBTCCAe2gAwIBAgIIICDkzy3Yn38wDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE
      AxMKa3ViZXJuZXRlczAeFw0yNDExMTIxMDAzMThaFw0zNDExMTAxMDA4MThaMBUx
      EzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
      AoIBAQD3qrsFOcZRTmdJ2ajpsN+M2JJbqluLNcCKdKDSR8UjLurwMft775xZfXS8
      O80gmPDusXbSXS1vlRHV9DQH12fAGKUDWMJLOj7lkDyGwbBTCvJtL6y+4XlMHCDt
      hvNxH9a6b6cC1O+mHbOYkWmrCltcA8FbHFMmpX9LPFgP5+L4eiCQY4aCbJqZJ2aP
      9sj9DVQfhasGF31hQhXsYygk0bcOsgUq/zkIqPRWHTQetRPlk0Q9Sbli6AQ3cmil
      8sNCGYmrhtwaVsZauHIV1ue9KC0vOpLJ/4uEXjpBiYaVf4zHe0i2DshQiQ7yeX+M
      HukPrWZN84XAnwIxUrRkmr1i6sPvAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP
      BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBQliZ1HZFlvAe+NSYoGEPLseiqCWzAV
      BgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQDIHTLjCwzG
      /JLkJx2M31isIosHQv78GyLXekYRYLW/edTEjZ8/PKqWbxZtOG44ULUP8yLU/Wg6
      FpFiqsP0JqMpAruOvR8UlJXax5K6KEO5AD3Nmp+DvRQVlKt316GoIcbCd7FQDZxD
      yH8uRWnfTGYHPOC7tcyUvcxQlK6ng22lTfRmdX9NerUJ860VaxGKhiusi6zHhNBi
      2cFBfrCRSCzu6HHmXitDLYyNIKP2KiiZwRmmoSYg6pgDvNHx0e63pY6ULE4gGiRD
      ZWs+kgjjjtaEOcXW4HOK1B47E0RcM56/EgMO2Hg9QAPQnwfx/AI7LC937SqBej27
      ld0gkDlez21X
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    annotations:
      kubernetes.io/description: Contains a CA bundle that can be used to verify the
        kube-apiserver when using internal endpoints such as the internal service
        IP or kubernetes.default.svc. No other usage is guaranteed across distributions
        of Kubernetes clusters.
    creationTimestamp: "2024-11-25T14:40:16Z"
    name: kube-root-ca.crt
    namespace: monitoring
    resourceVersion: "3039532"
    uid: baeaa574-af62-4f47-a5dc-a164c65c0b80
- apiVersion: v1
  data:
    monitoring-alertmanager-main-rules-7bde819f-9f4a-41f2-a480-473450cd3077.yaml: |
      groups:
      - name: alertmanager.rules
        rules:
        - alert: AlertmanagerFailedReload
          annotations:
            description: Configuration has failed to load for {{ $labels.namespace }}/{{
              $labels.pod}}.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/alertmanager/alertmanagerfailedreload
            summary: Reloading an Alertmanager configuration has failed.
          expr: |
            # Without max_over_time, failed scrapes could create false negatives, see
            # https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.
            max_over_time(alertmanager_config_last_reload_successful{job="alertmanager-main",namespace="monitoring"}[5m]) == 0
          for: 10m
          labels:
            severity: critical
        - alert: AlertmanagerMembersInconsistent
          annotations:
            description: Alertmanager {{ $labels.namespace }}/{{ $labels.pod}} has only
              found {{ $value }} members of the {{$labels.job}} cluster.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/alertmanager/alertmanagermembersinconsistent
            summary: A member of an Alertmanager cluster has not found all other cluster
              members.
          expr: |
            # Without max_over_time, failed scrapes could create false negatives, see
            # https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.
              max_over_time(alertmanager_cluster_members{job="alertmanager-main",namespace="monitoring"}[5m])
            < on (namespace,service) group_left
              count by (namespace,service) (max_over_time(alertmanager_cluster_members{job="alertmanager-main",namespace="monitoring"}[5m]))
          for: 15m
          labels:
            severity: critical
        - alert: AlertmanagerFailedToSendAlerts
          annotations:
            description: Alertmanager {{ $labels.namespace }}/{{ $labels.pod}} failed to
              send {{ $value | humanizePercentage }} of notifications to {{ $labels.integration
              }}.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/alertmanager/alertmanagerfailedtosendalerts
            summary: An Alertmanager instance failed to send notifications.
          expr: |
            (
              rate(alertmanager_notifications_failed_total{job="alertmanager-main",namespace="monitoring"}[5m])
            /
              ignoring (reason) group_left rate(alertmanager_notifications_total{job="alertmanager-main",namespace="monitoring"}[5m])
            )
            > 0.01
          for: 5m
          labels:
            severity: warning
        - alert: AlertmanagerClusterFailedToSendAlerts
          annotations:
            description: The minimum notification failure rate to {{ $labels.integration
              }} sent from any instance in the {{$labels.job}} cluster is {{ $value | humanizePercentage
              }}.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/alertmanager/alertmanagerclusterfailedtosendalerts
            summary: All Alertmanager instances in a cluster failed to send notifications
              to a critical integration.
          expr: |
            min by (namespace,service, integration) (
              rate(alertmanager_notifications_failed_total{job="alertmanager-main",namespace="monitoring", integration=~`.*`}[5m])
            /
              ignoring (reason) group_left rate(alertmanager_notifications_total{job="alertmanager-main",namespace="monitoring", integration=~`.*`}[5m])
            )
            > 0.01
          for: 5m
          labels:
            severity: critical
        - alert: AlertmanagerClusterFailedToSendAlerts
          annotations:
            description: The minimum notification failure rate to {{ $labels.integration
              }} sent from any instance in the {{$labels.job}} cluster is {{ $value | humanizePercentage
              }}.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/alertmanager/alertmanagerclusterfailedtosendalerts
            summary: All Alertmanager instances in a cluster failed to send notifications
              to a non-critical integration.
          expr: |
            min by (namespace,service, integration) (
              rate(alertmanager_notifications_failed_total{job="alertmanager-main",namespace="monitoring", integration!~`.*`}[5m])
            /
              ignoring (reason) group_left rate(alertmanager_notifications_total{job="alertmanager-main",namespace="monitoring", integration!~`.*`}[5m])
            )
            > 0.01
          for: 5m
          labels:
            severity: warning
        - alert: AlertmanagerConfigInconsistent
          annotations:
            description: Alertmanager instances within the {{$labels.job}} cluster have
              different configurations.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/alertmanager/alertmanagerconfiginconsistent
            summary: Alertmanager instances within the same cluster have different configurations.
          expr: |
            count by (namespace,service) (
              count_values by (namespace,service) ("config_hash", alertmanager_config_hash{job="alertmanager-main",namespace="monitoring"})
            )
            != 1
          for: 20m
          labels:
            severity: critical
        - alert: AlertmanagerClusterDown
          annotations:
            description: '{{ $value | humanizePercentage }} of Alertmanager instances within
              the {{$labels.job}} cluster have been up for less than half of the last 5m.'
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/alertmanager/alertmanagerclusterdown
            summary: Half or more of the Alertmanager instances within the same cluster
              are down.
          expr: |
            (
              count by (namespace,service) (
                avg_over_time(up{job="alertmanager-main",namespace="monitoring"}[5m]) < 0.5
              )
            /
              count by (namespace,service) (
                up{job="alertmanager-main",namespace="monitoring"}
              )
            )
            >= 0.5
          for: 5m
          labels:
            severity: critical
        - alert: AlertmanagerClusterCrashlooping
          annotations:
            description: '{{ $value | humanizePercentage }} of Alertmanager instances within
              the {{$labels.job}} cluster have restarted at least 5 times in the last 10m.'
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/alertmanager/alertmanagerclustercrashlooping
            summary: Half or more of the Alertmanager instances within the same cluster
              are crashlooping.
          expr: |
            (
              count by (namespace,service) (
                changes(process_start_time_seconds{job="alertmanager-main",namespace="monitoring"}[10m]) > 4
              )
            /
              count by (namespace,service) (
                up{job="alertmanager-main",namespace="monitoring"}
              )
            )
            >= 0.5
          for: 5m
          labels:
            severity: critical
    monitoring-grafana-rules-bcc86a47-623c-4ec9-af5e-9f95aba980ed.yaml: |
      groups:
      - name: GrafanaAlerts
        rules:
        - alert: GrafanaRequestsFailing
          annotations:
            message: '{{ $labels.namespace }}/{{ $labels.job }}/{{ $labels.handler }} is
              experiencing {{ $value | humanize }}% errors'
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/grafana/grafanarequestsfailing
          expr: |
            100 * namespace_job_handler_statuscode:grafana_http_request_duration_seconds_count:rate5m{handler!~"/api/datasources/proxy/:id.*|/api/ds/query|/api/tsdb/query", status_code=~"5.."}
            / ignoring (status_code)
            sum without (status_code) (namespace_job_handler_statuscode:grafana_http_request_duration_seconds_count:rate5m{handler!~"/api/datasources/proxy/:id.*|/api/ds/query|/api/tsdb/query"})
            > 50
          for: 5m
          labels:
            severity: warning
      - name: grafana_rules
        rules:
        - expr: |
            sum by (namespace, job, handler, status_code) (rate(grafana_http_request_duration_seconds_count[5m]))
          record: namespace_job_handler_statuscode:grafana_http_request_duration_seconds_count:rate5m
    monitoring-kube-prometheus-rules-050e5e5f-6cc6-4b0f-be66-3f14bc6a8fa9.yaml: |
      groups:
      - name: general.rules
        rules:
        - alert: TargetDown
          annotations:
            description: '{{ printf "%.4g" $value }}% of the {{ $labels.job }}/{{ $labels.service
              }} targets in {{ $labels.namespace }} namespace are down.'
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/general/targetdown
            summary: One or more targets are unreachable.
          expr: 100 * (count(up == 0) BY (cluster, job, namespace, service) / count(up)
            BY (cluster, job, namespace, service)) > 10
          for: 10m
          labels:
            severity: warning
        - alert: Watchdog
          annotations:
            description: |
              This is an alert meant to ensure that the entire alerting pipeline is functional.
              This alert is always firing, therefore it should always be firing in Alertmanager
              and always fire against a receiver. There are integrations with various notification
              mechanisms that send a notification when this alert is not firing. For example the
              "DeadMansSnitch" integration in PagerDuty.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/general/watchdog
            summary: An alert that should always be firing to certify that Alertmanager
              is working properly.
          expr: vector(1)
          labels:
            severity: none
        - alert: InfoInhibitor
          annotations:
            description: |
              This is an alert that is used to inhibit info alerts.
              By themselves, the info-level alerts are sometimes very noisy, but they are relevant when combined with
              other alerts.
              This alert fires whenever there's a severity="info" alert, and stops firing when another alert with a
              severity of 'warning' or 'critical' starts firing on the same namespace.
              This alert should be routed to a null receiver and configured to inhibit alerts with severity="info".
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/general/infoinhibitor
            summary: Info-level alert inhibition.
          expr: ALERTS{severity = "info"} == 1 unless on(namespace) ALERTS{alertname !=
            "InfoInhibitor", severity =~ "warning|critical", alertstate="firing"} == 1
          labels:
            severity: none
      - name: node-network
        rules:
        - alert: NodeNetworkInterfaceFlapping
          annotations:
            description: Network interface "{{ $labels.device }}" changing its up status
              often on node-exporter {{ $labels.namespace }}/{{ $labels.pod }}
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/general/nodenetworkinterfaceflapping
            summary: Network interface is often changing its status
          expr: |
            changes(node_network_up{job="node-exporter",device!~"veth.+"}[2m]) > 2
          for: 2m
          labels:
            severity: warning
      - name: kube-prometheus-node-recording.rules
        rules:
        - expr: sum(rate(node_cpu_seconds_total{mode!="idle",mode!="iowait",mode!="steal"}[3m]))
            BY (instance)
          record: instance:node_cpu:rate:sum
        - expr: sum(rate(node_network_receive_bytes_total[3m])) BY (instance)
          record: instance:node_network_receive_bytes:rate:sum
        - expr: sum(rate(node_network_transmit_bytes_total[3m])) BY (instance)
          record: instance:node_network_transmit_bytes:rate:sum
        - expr: sum(rate(node_cpu_seconds_total{mode!="idle",mode!="iowait",mode!="steal"}[5m]))
            WITHOUT (cpu, mode) / ON(instance) GROUP_LEFT() count(sum(node_cpu_seconds_total)
            BY (instance, cpu)) BY (instance)
          record: instance:node_cpu:ratio
        - expr: sum(rate(node_cpu_seconds_total{mode!="idle",mode!="iowait",mode!="steal"}[5m]))
          record: cluster:node_cpu:sum_rate5m
        - expr: cluster:node_cpu:sum_rate5m / count(sum(node_cpu_seconds_total) BY (instance,
            cpu))
          record: cluster:node_cpu:ratio
      - name: kube-prometheus-general.rules
        rules:
        - expr: count without(instance, pod, node) (up == 1)
          record: count:up1
        - expr: count without(instance, pod, node) (up == 0)
          record: count:up0
    monitoring-kube-state-metrics-rules-6dd24b5d-6fd4-485c-b039-90a273c8dffc.yaml: |
      groups:
      - name: kube-state-metrics
        rules:
        - alert: KubeStateMetricsListErrors
          annotations:
            description: kube-state-metrics is experiencing errors at an elevated rate in
              list operations. This is likely causing it to not be able to expose metrics
              about Kubernetes objects correctly or at all.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kube-state-metrics/kubestatemetricslisterrors
            summary: kube-state-metrics is experiencing errors in list operations.
          expr: |
            (sum(rate(kube_state_metrics_list_total{job="kube-state-metrics",result="error"}[5m])) by (cluster)
              /
            sum(rate(kube_state_metrics_list_total{job="kube-state-metrics"}[5m])) by (cluster))
            > 0.01
          for: 15m
          labels:
            severity: critical
        - alert: KubeStateMetricsWatchErrors
          annotations:
            description: kube-state-metrics is experiencing errors at an elevated rate in
              watch operations. This is likely causing it to not be able to expose metrics
              about Kubernetes objects correctly or at all.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kube-state-metrics/kubestatemetricswatcherrors
            summary: kube-state-metrics is experiencing errors in watch operations.
          expr: |
            (sum(rate(kube_state_metrics_watch_total{job="kube-state-metrics",result="error"}[5m])) by (cluster)
              /
            sum(rate(kube_state_metrics_watch_total{job="kube-state-metrics"}[5m])) by (cluster))
            > 0.01
          for: 15m
          labels:
            severity: critical
        - alert: KubeStateMetricsShardingMismatch
          annotations:
            description: kube-state-metrics pods are running with different --total-shards
              configuration, some Kubernetes objects may be exposed multiple times or not
              exposed at all.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kube-state-metrics/kubestatemetricsshardingmismatch
            summary: kube-state-metrics sharding is misconfigured.
          expr: |
            stdvar (kube_state_metrics_total_shards{job="kube-state-metrics"}) by (cluster) != 0
          for: 15m
          labels:
            severity: critical
        - alert: KubeStateMetricsShardsMissing
          annotations:
            description: kube-state-metrics shards are missing, some Kubernetes objects
              are not being exposed.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kube-state-metrics/kubestatemetricsshardsmissing
            summary: kube-state-metrics shards are missing.
          expr: |
            2^max(kube_state_metrics_total_shards{job="kube-state-metrics"}) by (cluster) - 1
              -
            sum( 2 ^ max by (cluster, shard_ordinal) (kube_state_metrics_shard_ordinal{job="kube-state-metrics"}) ) by (cluster)
            != 0
          for: 15m
          labels:
            severity: critical
    monitoring-kubernetes-monitoring-rules-4753a30a-fe54-402c-a960-39a593206b7f.yaml: |
      groups:
      - name: kubernetes-apps
        rules:
        - alert: KubePodCrashLooping
          annotations:
            description: 'Pod {{ $labels.namespace }}/{{ $labels.pod }} ({{ $labels.container
              }}) is in waiting state (reason: "CrashLoopBackOff").'
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubepodcrashlooping
            summary: Pod is crash looping.
          expr: |
            max_over_time(kube_pod_container_status_waiting_reason{reason="CrashLoopBackOff", job="kube-state-metrics"}[5m]) >= 1
          for: 15m
          labels:
            severity: warning
        - alert: KubePodNotReady
          annotations:
            description: Pod {{ $labels.namespace }}/{{ $labels.pod }} has been in a non-ready
              state for longer than 15 minutes.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubepodnotready
            summary: Pod has been in a non-ready state for more than 15 minutes.
          expr: |
            sum by (namespace, pod, cluster) (
              max by(namespace, pod, cluster) (
                kube_pod_status_phase{job="kube-state-metrics", phase=~"Pending|Unknown|Failed"}
              ) * on(namespace, pod, cluster) group_left(owner_kind) topk by(namespace, pod, cluster) (
                1, max by(namespace, pod, owner_kind, cluster) (kube_pod_owner{owner_kind!="Job"})
              )
            ) > 0
          for: 15m
          labels:
            severity: warning
        - alert: KubeDeploymentGenerationMismatch
          annotations:
            description: Deployment generation for {{ $labels.namespace }}/{{ $labels.deployment
              }} does not match, this indicates that the Deployment has failed but has not
              been rolled back.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubedeploymentgenerationmismatch
            summary: Deployment generation mismatch due to possible roll-back
          expr: |
            kube_deployment_status_observed_generation{job="kube-state-metrics"}
              !=
            kube_deployment_metadata_generation{job="kube-state-metrics"}
          for: 15m
          labels:
            severity: warning
        - alert: KubeDeploymentReplicasMismatch
          annotations:
            description: Deployment {{ $labels.namespace }}/{{ $labels.deployment }} has
              not matched the expected number of replicas for longer than 15 minutes.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubedeploymentreplicasmismatch
            summary: Deployment has not matched the expected number of replicas.
          expr: |
            (
              kube_deployment_spec_replicas{job="kube-state-metrics"}
                >
              kube_deployment_status_replicas_available{job="kube-state-metrics"}
            ) and (
              changes(kube_deployment_status_replicas_updated{job="kube-state-metrics"}[10m])
                ==
              0
            )
          for: 15m
          labels:
            severity: warning
        - alert: KubeDeploymentRolloutStuck
          annotations:
            description: Rollout of deployment {{ $labels.namespace }}/{{ $labels.deployment
              }} is not progressing for longer than 15 minutes.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubedeploymentrolloutstuck
            summary: Deployment rollout is not progressing.
          expr: |
            kube_deployment_status_condition{condition="Progressing", status="false",job="kube-state-metrics"}
            != 0
          for: 15m
          labels:
            severity: warning
        - alert: KubeStatefulSetReplicasMismatch
          annotations:
            description: StatefulSet {{ $labels.namespace }}/{{ $labels.statefulset }} has
              not matched the expected number of replicas for longer than 15 minutes.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubestatefulsetreplicasmismatch
            summary: StatefulSet has not matched the expected number of replicas.
          expr: |
            (
              kube_statefulset_status_replicas_ready{job="kube-state-metrics"}
                !=
              kube_statefulset_status_replicas{job="kube-state-metrics"}
            ) and (
              changes(kube_statefulset_status_replicas_updated{job="kube-state-metrics"}[10m])
                ==
              0
            )
          for: 15m
          labels:
            severity: warning
        - alert: KubeStatefulSetGenerationMismatch
          annotations:
            description: StatefulSet generation for {{ $labels.namespace }}/{{ $labels.statefulset
              }} does not match, this indicates that the StatefulSet has failed but has
              not been rolled back.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubestatefulsetgenerationmismatch
            summary: StatefulSet generation mismatch due to possible roll-back
          expr: |
            kube_statefulset_status_observed_generation{job="kube-state-metrics"}
              !=
            kube_statefulset_metadata_generation{job="kube-state-metrics"}
          for: 15m
          labels:
            severity: warning
        - alert: KubeStatefulSetUpdateNotRolledOut
          annotations:
            description: StatefulSet {{ $labels.namespace }}/{{ $labels.statefulset }} update
              has not been rolled out.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubestatefulsetupdatenotrolledout
            summary: StatefulSet update has not been rolled out.
          expr: |
            (
              max by(namespace, statefulset, job, cluster) (
                kube_statefulset_status_current_revision{job="kube-state-metrics"}
                  unless
                kube_statefulset_status_update_revision{job="kube-state-metrics"}
              )
                *
              (
                kube_statefulset_replicas{job="kube-state-metrics"}
                  !=
                kube_statefulset_status_replicas_updated{job="kube-state-metrics"}
              )
            )  and (
              changes(kube_statefulset_status_replicas_updated{job="kube-state-metrics"}[5m])
                ==
              0
            )
          for: 15m
          labels:
            severity: warning
        - alert: KubeDaemonSetRolloutStuck
          annotations:
            description: DaemonSet {{ $labels.namespace }}/{{ $labels.daemonset }} has not
              finished or progressed for at least 15 minutes.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubedaemonsetrolloutstuck
            summary: DaemonSet rollout is stuck.
          expr: |
            (
              (
                kube_daemonset_status_current_number_scheduled{job="kube-state-metrics"}
                 !=
                kube_daemonset_status_desired_number_scheduled{job="kube-state-metrics"}
              ) or (
                kube_daemonset_status_number_misscheduled{job="kube-state-metrics"}
                 !=
                0
              ) or (
                kube_daemonset_status_updated_number_scheduled{job="kube-state-metrics"}
                 !=
                kube_daemonset_status_desired_number_scheduled{job="kube-state-metrics"}
              ) or (
                kube_daemonset_status_number_available{job="kube-state-metrics"}
                 !=
                kube_daemonset_status_desired_number_scheduled{job="kube-state-metrics"}
              )
            ) and (
              changes(kube_daemonset_status_updated_number_scheduled{job="kube-state-metrics"}[5m])
                ==
              0
            )
          for: 15m
          labels:
            severity: warning
        - alert: KubeContainerWaiting
          annotations:
            description: 'pod/{{ $labels.pod }} in namespace {{ $labels.namespace }} on
              container {{ $labels.container}} has been in waiting state for longer than
              1 hour. (reason: "{{ $labels.reason }}").'
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubecontainerwaiting
            summary: Pod container waiting longer than 1 hour
          expr: |
            kube_pod_container_status_waiting_reason{reason!="CrashLoopBackOff", job="kube-state-metrics"} > 0
          for: 1h
          labels:
            severity: warning
        - alert: KubeDaemonSetNotScheduled
          annotations:
            description: '{{ $value }} Pods of DaemonSet {{ $labels.namespace }}/{{ $labels.daemonset
              }} are not scheduled.'
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubedaemonsetnotscheduled
            summary: DaemonSet pods are not scheduled.
          expr: |
            kube_daemonset_status_desired_number_scheduled{job="kube-state-metrics"}
              -
            kube_daemonset_status_current_number_scheduled{job="kube-state-metrics"} > 0
          for: 10m
          labels:
            severity: warning
        - alert: KubeDaemonSetMisScheduled
          annotations:
            description: '{{ $value }} Pods of DaemonSet {{ $labels.namespace }}/{{ $labels.daemonset
              }} are running where they are not supposed to run.'
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubedaemonsetmisscheduled
            summary: DaemonSet pods are misscheduled.
          expr: |
            kube_daemonset_status_number_misscheduled{job="kube-state-metrics"} > 0
          for: 15m
          labels:
            severity: warning
        - alert: KubeJobNotCompleted
          annotations:
            description: Job {{ $labels.namespace }}/{{ $labels.job_name }} is taking more
              than {{ "43200" | humanizeDuration }} to complete.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubejobnotcompleted
            summary: Job did not complete in time
          expr: |
            time() - max by(namespace, job_name, cluster) (kube_job_status_start_time{job="kube-state-metrics"}
              and
            kube_job_status_active{job="kube-state-metrics"} > 0) > 43200
          labels:
            severity: warning
        - alert: KubeJobFailed
          annotations:
            description: Job {{ $labels.namespace }}/{{ $labels.job_name }} failed to complete.
              Removing failed job after investigation should clear this alert.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubejobfailed
            summary: Job failed to complete.
          expr: |
            kube_job_failed{job="kube-state-metrics"}  > 0
          for: 15m
          labels:
            severity: warning
        - alert: KubeHpaReplicasMismatch
          annotations:
            description: HPA {{ $labels.namespace }}/{{ $labels.horizontalpodautoscaler  }}
              has not matched the desired number of replicas for longer than 15 minutes.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubehpareplicasmismatch
            summary: HPA has not matched desired number of replicas.
          expr: |
            (kube_horizontalpodautoscaler_status_desired_replicas{job="kube-state-metrics"}
              !=
            kube_horizontalpodautoscaler_status_current_replicas{job="kube-state-metrics"})
              and
            (kube_horizontalpodautoscaler_status_current_replicas{job="kube-state-metrics"}
              >
            kube_horizontalpodautoscaler_spec_min_replicas{job="kube-state-metrics"})
              and
            (kube_horizontalpodautoscaler_status_current_replicas{job="kube-state-metrics"}
              <
            kube_horizontalpodautoscaler_spec_max_replicas{job="kube-state-metrics"})
              and
            changes(kube_horizontalpodautoscaler_status_current_replicas{job="kube-state-metrics"}[15m]) == 0
          for: 15m
          labels:
            severity: warning
        - alert: KubeHpaMaxedOut
          annotations:
            description: HPA {{ $labels.namespace }}/{{ $labels.horizontalpodautoscaler  }}
              has been running at max replicas for longer than 15 minutes.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubehpamaxedout
            summary: HPA is running at max replicas
          expr: |
            kube_horizontalpodautoscaler_status_current_replicas{job="kube-state-metrics"}
              ==
            kube_horizontalpodautoscaler_spec_max_replicas{job="kube-state-metrics"}
          for: 15m
          labels:
            severity: warning
      - name: kubernetes-resources
        rules:
        - alert: KubeCPUOvercommit
          annotations:
            description: Cluster {{ $labels.cluster }} has overcommitted CPU resource requests
              for Pods by {{ $value }} CPU shares and cannot tolerate node failure.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubecpuovercommit
            summary: Cluster has overcommitted CPU resource requests.
          expr: |
            sum(namespace_cpu:kube_pod_container_resource_requests:sum{}) by (cluster) - (sum(kube_node_status_allocatable{job="kube-state-metrics",resource="cpu"}) by (cluster) - max(kube_node_status_allocatable{job="kube-state-metrics",resource="cpu"}) by (cluster)) > 0
            and
            (sum(kube_node_status_allocatable{job="kube-state-metrics",resource="cpu"}) by (cluster) - max(kube_node_status_allocatable{job="kube-state-metrics",resource="cpu"}) by (cluster)) > 0
          for: 10m
          labels:
            severity: warning
        - alert: KubeMemoryOvercommit
          annotations:
            description: Cluster {{ $labels.cluster }} has overcommitted memory resource
              requests for Pods by {{ $value | humanize }} bytes and cannot tolerate node
              failure.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubememoryovercommit
            summary: Cluster has overcommitted memory resource requests.
          expr: |
            sum(namespace_memory:kube_pod_container_resource_requests:sum{}) by (cluster) - (sum(kube_node_status_allocatable{resource="memory", job="kube-state-metrics"}) by (cluster) - max(kube_node_status_allocatable{resource="memory", job="kube-state-metrics"}) by (cluster)) > 0
            and
            (sum(kube_node_status_allocatable{resource="memory", job="kube-state-metrics"}) by (cluster) - max(kube_node_status_allocatable{resource="memory", job="kube-state-metrics"}) by (cluster)) > 0
          for: 10m
          labels:
            severity: warning
        - alert: KubeCPUQuotaOvercommit
          annotations:
            description: Cluster {{ $labels.cluster }}  has overcommitted CPU resource requests
              for Namespaces.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubecpuquotaovercommit
            summary: Cluster has overcommitted CPU resource requests.
          expr: |
            sum(min without(resource) (kube_resourcequota{job="kube-state-metrics", type="hard", resource=~"(cpu|requests.cpu)"})) by (cluster)
              /
            sum(kube_node_status_allocatable{resource="cpu", job="kube-state-metrics"}) by (cluster)
              > 1.5
          for: 5m
          labels:
            severity: warning
        - alert: KubeMemoryQuotaOvercommit
          annotations:
            description: Cluster {{ $labels.cluster }}  has overcommitted memory resource
              requests for Namespaces.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubememoryquotaovercommit
            summary: Cluster has overcommitted memory resource requests.
          expr: |
            sum(min without(resource) (kube_resourcequota{job="kube-state-metrics", type="hard", resource=~"(memory|requests.memory)"})) by (cluster)
              /
            sum(kube_node_status_allocatable{resource="memory", job="kube-state-metrics"}) by (cluster)
              > 1.5
          for: 5m
          labels:
            severity: warning
        - alert: KubeQuotaAlmostFull
          annotations:
            description: Namespace {{ $labels.namespace }} is using {{ $value | humanizePercentage
              }} of its {{ $labels.resource }} quota.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubequotaalmostfull
            summary: Namespace quota is going to be full.
          expr: |
            kube_resourcequota{job="kube-state-metrics", type="used"}
              / ignoring(instance, job, type)
            (kube_resourcequota{job="kube-state-metrics", type="hard"} > 0)
              > 0.9 < 1
          for: 15m
          labels:
            severity: info
        - alert: KubeQuotaFullyUsed
          annotations:
            description: Namespace {{ $labels.namespace }} is using {{ $value | humanizePercentage
              }} of its {{ $labels.resource }} quota.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubequotafullyused
            summary: Namespace quota is fully used.
          expr: |
            kube_resourcequota{job="kube-state-metrics", type="used"}
              / ignoring(instance, job, type)
            (kube_resourcequota{job="kube-state-metrics", type="hard"} > 0)
              == 1
          for: 15m
          labels:
            severity: info
        - alert: KubeQuotaExceeded
          annotations:
            description: Namespace {{ $labels.namespace }} is using {{ $value | humanizePercentage
              }} of its {{ $labels.resource }} quota.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubequotaexceeded
            summary: Namespace quota has exceeded the limits.
          expr: |
            kube_resourcequota{job="kube-state-metrics", type="used"}
              / ignoring(instance, job, type)
            (kube_resourcequota{job="kube-state-metrics", type="hard"} > 0)
              > 1
          for: 15m
          labels:
            severity: warning
        - alert: CPUThrottlingHigh
          annotations:
            description: '{{ $value | humanizePercentage }} throttling of CPU in namespace
              {{ $labels.namespace }} for container {{ $labels.container }} in pod {{ $labels.pod
              }}.'
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/cputhrottlinghigh
            summary: Processes experience elevated CPU throttling.
          expr: |
            sum(increase(container_cpu_cfs_throttled_periods_total{container!="", job="kubelet", metrics_path="/metrics/cadvisor", }[5m])) without (id, metrics_path, name, image, endpoint, job, node)
              /
            sum(increase(container_cpu_cfs_periods_total{job="kubelet", metrics_path="/metrics/cadvisor", }[5m])) without (id, metrics_path, name, image, endpoint, job, node)
              > ( 25 / 100 )
          for: 15m
          labels:
            severity: info
      - name: kubernetes-storage
        rules:
        - alert: KubePersistentVolumeFillingUp
          annotations:
            description: The PersistentVolume claimed by {{ $labels.persistentvolumeclaim
              }} in Namespace {{ $labels.namespace }} {{ with $labels.cluster -}} on Cluster
              {{ . }} {{- end }} is only {{ $value | humanizePercentage }} free.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubepersistentvolumefillingup
            summary: PersistentVolume is filling up.
          expr: |
            (
              kubelet_volume_stats_available_bytes{job="kubelet", metrics_path="/metrics"}
                /
              kubelet_volume_stats_capacity_bytes{job="kubelet", metrics_path="/metrics"}
            ) < 0.03
            and
            kubelet_volume_stats_used_bytes{job="kubelet", metrics_path="/metrics"} > 0
            unless on(cluster, namespace, persistentvolumeclaim)
            kube_persistentvolumeclaim_access_mode{ access_mode="ReadOnlyMany"} == 1
            unless on(cluster, namespace, persistentvolumeclaim)
            kube_persistentvolumeclaim_labels{label_excluded_from_alerts="true"} == 1
          for: 1m
          labels:
            severity: critical
        - alert: KubePersistentVolumeFillingUp
          annotations:
            description: Based on recent sampling, the PersistentVolume claimed by {{ $labels.persistentvolumeclaim
              }} in Namespace {{ $labels.namespace }} {{ with $labels.cluster -}} on Cluster
              {{ . }} {{- end }} is expected to fill up within four days. Currently {{ $value
              | humanizePercentage }} is available.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubepersistentvolumefillingup
            summary: PersistentVolume is filling up.
          expr: |
            (
              kubelet_volume_stats_available_bytes{job="kubelet", metrics_path="/metrics"}
                /
              kubelet_volume_stats_capacity_bytes{job="kubelet", metrics_path="/metrics"}
            ) < 0.15
            and
            kubelet_volume_stats_used_bytes{job="kubelet", metrics_path="/metrics"} > 0
            and
            predict_linear(kubelet_volume_stats_available_bytes{job="kubelet", metrics_path="/metrics"}[6h], 4 * 24 * 3600) < 0
            unless on(cluster, namespace, persistentvolumeclaim)
            kube_persistentvolumeclaim_access_mode{ access_mode="ReadOnlyMany"} == 1
            unless on(cluster, namespace, persistentvolumeclaim)
            kube_persistentvolumeclaim_labels{label_excluded_from_alerts="true"} == 1
          for: 1h
          labels:
            severity: warning
        - alert: KubePersistentVolumeInodesFillingUp
          annotations:
            description: The PersistentVolume claimed by {{ $labels.persistentvolumeclaim
              }} in Namespace {{ $labels.namespace }} {{ with $labels.cluster -}} on Cluster
              {{ . }} {{- end }} only has {{ $value | humanizePercentage }} free inodes.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubepersistentvolumeinodesfillingup
            summary: PersistentVolumeInodes are filling up.
          expr: |
            (
              kubelet_volume_stats_inodes_free{job="kubelet", metrics_path="/metrics"}
                /
              kubelet_volume_stats_inodes{job="kubelet", metrics_path="/metrics"}
            ) < 0.03
            and
            kubelet_volume_stats_inodes_used{job="kubelet", metrics_path="/metrics"} > 0
            unless on(cluster, namespace, persistentvolumeclaim)
            kube_persistentvolumeclaim_access_mode{ access_mode="ReadOnlyMany"} == 1
            unless on(cluster, namespace, persistentvolumeclaim)
            kube_persistentvolumeclaim_labels{label_excluded_from_alerts="true"} == 1
          for: 1m
          labels:
            severity: critical
        - alert: KubePersistentVolumeInodesFillingUp
          annotations:
            description: Based on recent sampling, the PersistentVolume claimed by {{ $labels.persistentvolumeclaim
              }} in Namespace {{ $labels.namespace }} {{ with $labels.cluster -}} on Cluster
              {{ . }} {{- end }} is expected to run out of inodes within four days. Currently
              {{ $value | humanizePercentage }} of its inodes are free.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubepersistentvolumeinodesfillingup
            summary: PersistentVolumeInodes are filling up.
          expr: |
            (
              kubelet_volume_stats_inodes_free{job="kubelet", metrics_path="/metrics"}
                /
              kubelet_volume_stats_inodes{job="kubelet", metrics_path="/metrics"}
            ) < 0.15
            and
            kubelet_volume_stats_inodes_used{job="kubelet", metrics_path="/metrics"} > 0
            and
            predict_linear(kubelet_volume_stats_inodes_free{job="kubelet", metrics_path="/metrics"}[6h], 4 * 24 * 3600) < 0
            unless on(cluster, namespace, persistentvolumeclaim)
            kube_persistentvolumeclaim_access_mode{ access_mode="ReadOnlyMany"} == 1
            unless on(cluster, namespace, persistentvolumeclaim)
            kube_persistentvolumeclaim_labels{label_excluded_from_alerts="true"} == 1
          for: 1h
          labels:
            severity: warning
        - alert: KubePersistentVolumeErrors
          annotations:
            description: The persistent volume {{ $labels.persistentvolume }} {{ with $labels.cluster
              -}} on Cluster {{ . }} {{- end }} has status {{ $labels.phase }}.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubepersistentvolumeerrors
            summary: PersistentVolume is having issues with provisioning.
          expr: |
            kube_persistentvolume_status_phase{phase=~"Failed|Pending",job="kube-state-metrics"} > 0
          for: 5m
          labels:
            severity: critical
      - name: kubernetes-system
        rules:
        - alert: KubeVersionMismatch
          annotations:
            description: There are {{ $value }} different semantic versions of Kubernetes
              components running.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeversionmismatch
            summary: Different semantic versions of Kubernetes components running.
          expr: |
            count by (cluster) (count by (git_version, cluster) (label_replace(kubernetes_build_info{job!~"kube-dns|coredns"},"git_version","$1","git_version","(v[0-9]*.[0-9]*).*"))) > 1
          for: 15m
          labels:
            severity: warning
        - alert: KubeClientErrors
          annotations:
            description: Kubernetes API server client '{{ $labels.job }}/{{ $labels.instance
              }}' is experiencing {{ $value | humanizePercentage }} errors.'
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeclienterrors
            summary: Kubernetes API server client is experiencing errors.
          expr: |
            (sum(rate(rest_client_requests_total{job="apiserver",code=~"5.."}[5m])) by (cluster, instance, job, namespace)
              /
            sum(rate(rest_client_requests_total{job="apiserver"}[5m])) by (cluster, instance, job, namespace))
            > 0.01
          for: 15m
          labels:
            severity: warning
      - name: kube-apiserver-slos
        rules:
        - alert: KubeAPIErrorBudgetBurn
          annotations:
            description: The API server is burning too much error budget.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeapierrorbudgetburn
            summary: The API server is burning too much error budget.
          expr: |
            sum by(cluster) (apiserver_request:burnrate1h) > (14.40 * 0.01000)
            and on(cluster)
            sum by(cluster) (apiserver_request:burnrate5m) > (14.40 * 0.01000)
          for: 2m
          labels:
            long: 1h
            severity: critical
            short: 5m
        - alert: KubeAPIErrorBudgetBurn
          annotations:
            description: The API server is burning too much error budget.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeapierrorbudgetburn
            summary: The API server is burning too much error budget.
          expr: |
            sum by(cluster) (apiserver_request:burnrate6h) > (6.00 * 0.01000)
            and on(cluster)
            sum by(cluster) (apiserver_request:burnrate30m) > (6.00 * 0.01000)
          for: 15m
          labels:
            long: 6h
            severity: critical
            short: 30m
        - alert: KubeAPIErrorBudgetBurn
          annotations:
            description: The API server is burning too much error budget.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeapierrorbudgetburn
            summary: The API server is burning too much error budget.
          expr: |
            sum by(cluster) (apiserver_request:burnrate1d) > (3.00 * 0.01000)
            and on(cluster)
            sum by(cluster) (apiserver_request:burnrate2h) > (3.00 * 0.01000)
          for: 1h
          labels:
            long: 1d
            severity: warning
            short: 2h
        - alert: KubeAPIErrorBudgetBurn
          annotations:
            description: The API server is burning too much error budget.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeapierrorbudgetburn
            summary: The API server is burning too much error budget.
          expr: |
            sum by(cluster) (apiserver_request:burnrate3d) > (1.00 * 0.01000)
            and on(cluster)
            sum by(cluster) (apiserver_request:burnrate6h) > (1.00 * 0.01000)
          for: 3h
          labels:
            long: 3d
            severity: warning
            short: 6h
      - name: kubernetes-system-apiserver
        rules:
        - alert: KubeClientCertificateExpiration
          annotations:
            description: A client certificate used to authenticate to kubernetes apiserver
              is expiring in less than 7.0 days.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeclientcertificateexpiration
            summary: Client certificate is about to expire.
          expr: |
            histogram_quantile(0.01, sum without (namespace, service, endpoint) (rate(apiserver_client_certificate_expiration_seconds_bucket{job="apiserver"}[5m]))) < 604800
            and
            on(job, cluster, instance) apiserver_client_certificate_expiration_seconds_count{job="apiserver"} > 0
          for: 5m
          labels:
            severity: warning
        - alert: KubeClientCertificateExpiration
          annotations:
            description: A client certificate used to authenticate to kubernetes apiserver
              is expiring in less than 24.0 hours.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeclientcertificateexpiration
            summary: Client certificate is about to expire.
          expr: |
            histogram_quantile(0.01, sum without (namespace, service, endpoint) (rate(apiserver_client_certificate_expiration_seconds_bucket{job="apiserver"}[5m]))) < 86400
            and
            on(job, cluster, instance) apiserver_client_certificate_expiration_seconds_count{job="apiserver"} > 0
          for: 5m
          labels:
            severity: critical
        - alert: KubeAggregatedAPIErrors
          annotations:
            description: Kubernetes aggregated API {{ $labels.name }}/{{ $labels.namespace
              }} has reported errors. It has appeared unavailable {{ $value | humanize }}
              times averaged over the past 10m.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeaggregatedapierrors
            summary: Kubernetes aggregated API has reported errors.
          expr: |
            sum by(name, namespace, cluster)(increase(aggregator_unavailable_apiservice_total{job="apiserver"}[10m])) > 4
          labels:
            severity: warning
        - alert: KubeAggregatedAPIDown
          annotations:
            description: Kubernetes aggregated API {{ $labels.name }}/{{ $labels.namespace
              }} has been only {{ $value | humanize }}% available over the last 10m.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeaggregatedapidown
            summary: Kubernetes aggregated API is down.
          expr: |
            (1 - max by(name, namespace, cluster)(avg_over_time(aggregator_unavailable_apiservice{job="apiserver"}[10m]))) * 100 < 85
          for: 5m
          labels:
            severity: warning
        - alert: KubeAPIDown
          annotations:
            description: KubeAPI has disappeared from Prometheus target discovery.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeapidown
            summary: Target disappeared from Prometheus target discovery.
          expr: |
            absent(up{job="apiserver"} == 1)
          for: 15m
          labels:
            severity: critical
        - alert: KubeAPITerminatedRequests
          annotations:
            description: The kubernetes apiserver has terminated {{ $value | humanizePercentage
              }} of its incoming requests.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeapiterminatedrequests
            summary: The kubernetes apiserver has terminated {{ $value | humanizePercentage
              }} of its incoming requests.
          expr: |
            sum by(cluster) (rate(apiserver_request_terminations_total{job="apiserver"}[10m])) / ( sum by(cluster) (rate(apiserver_request_total{job="apiserver"}[10m])) + sum by(cluster) (rate(apiserver_request_terminations_total{job="apiserver"}[10m])) ) > 0.20
          for: 5m
          labels:
            severity: warning
      - name: kubernetes-system-kubelet
        rules:
        - alert: KubeNodeNotReady
          annotations:
            description: '{{ $labels.node }} has been unready for more than 15 minutes.'
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubenodenotready
            summary: Node is not ready.
          expr: |
            kube_node_status_condition{job="kube-state-metrics",condition="Ready",status="true"} == 0
          for: 15m
          labels:
            severity: warning
        - alert: KubeNodeUnreachable
          annotations:
            description: '{{ $labels.node }} is unreachable and some workloads may be rescheduled.'
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubenodeunreachable
            summary: Node is unreachable.
          expr: |
            (kube_node_spec_taint{job="kube-state-metrics",key="node.kubernetes.io/unreachable",effect="NoSchedule"} unless ignoring(key,value) kube_node_spec_taint{job="kube-state-metrics",key=~"ToBeDeletedByClusterAutoscaler|cloud.google.com/impending-node-termination|aws-node-termination-handler/spot-itn"}) == 1
          for: 15m
          labels:
            severity: warning
        - alert: KubeletTooManyPods
          annotations:
            description: Kubelet '{{ $labels.node }}' is running at {{ $value | humanizePercentage
              }} of its Pod capacity.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubelettoomanypods
            summary: Kubelet is running at capacity.
          expr: |
            count by(cluster, node) (
              (kube_pod_status_phase{job="kube-state-metrics",phase="Running"} == 1) * on(instance,pod,namespace,cluster) group_left(node) topk by(instance,pod,namespace,cluster) (1, kube_pod_info{job="kube-state-metrics"})
            )
            /
            max by(cluster, node) (
              kube_node_status_capacity{job="kube-state-metrics",resource="pods"} != 1
            ) > 0.95
          for: 15m
          labels:
            severity: info
        - alert: KubeNodeReadinessFlapping
          annotations:
            description: The readiness status of node {{ $labels.node }} has changed {{
              $value }} times in the last 15 minutes.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubenodereadinessflapping
            summary: Node readiness status is flapping.
          expr: |
            sum(changes(kube_node_status_condition{job="kube-state-metrics",status="true",condition="Ready"}[15m])) by (cluster, node) > 2
          for: 15m
          labels:
            severity: warning
        - alert: KubeletPlegDurationHigh
          annotations:
            description: The Kubelet Pod Lifecycle Event Generator has a 99th percentile
              duration of {{ $value }} seconds on node {{ $labels.node }}.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeletplegdurationhigh
            summary: Kubelet Pod Lifecycle Event Generator is taking too long to relist.
          expr: |
            node_quantile:kubelet_pleg_relist_duration_seconds:histogram_quantile{quantile="0.99"} >= 10
          for: 5m
          labels:
            severity: warning
        - alert: KubeletPodStartUpLatencyHigh
          annotations:
            description: Kubelet Pod startup 99th percentile latency is {{ $value }} seconds
              on node {{ $labels.node }}.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeletpodstartuplatencyhigh
            summary: Kubelet Pod startup latency is too high.
          expr: |
            histogram_quantile(0.99, sum(rate(kubelet_pod_worker_duration_seconds_bucket{job="kubelet", metrics_path="/metrics"}[5m])) by (cluster, instance, le)) * on(cluster, instance) group_left(node) kubelet_node_name{job="kubelet", metrics_path="/metrics"} > 60
          for: 15m
          labels:
            severity: warning
        - alert: KubeletClientCertificateExpiration
          annotations:
            description: Client certificate for Kubelet on node {{ $labels.node }} expires
              in {{ $value | humanizeDuration }}.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeletclientcertificateexpiration
            summary: Kubelet client certificate is about to expire.
          expr: |
            kubelet_certificate_manager_client_ttl_seconds < 604800
          labels:
            severity: warning
        - alert: KubeletClientCertificateExpiration
          annotations:
            description: Client certificate for Kubelet on node {{ $labels.node }} expires
              in {{ $value | humanizeDuration }}.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeletclientcertificateexpiration
            summary: Kubelet client certificate is about to expire.
          expr: |
            kubelet_certificate_manager_client_ttl_seconds < 86400
          labels:
            severity: critical
        - alert: KubeletServerCertificateExpiration
          annotations:
            description: Server certificate for Kubelet on node {{ $labels.node }} expires
              in {{ $value | humanizeDuration }}.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeletservercertificateexpiration
            summary: Kubelet server certificate is about to expire.
          expr: |
            kubelet_certificate_manager_server_ttl_seconds < 604800
          labels:
            severity: warning
        - alert: KubeletServerCertificateExpiration
          annotations:
            description: Server certificate for Kubelet on node {{ $labels.node }} expires
              in {{ $value | humanizeDuration }}.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeletservercertificateexpiration
            summary: Kubelet server certificate is about to expire.
          expr: |
            kubelet_certificate_manager_server_ttl_seconds < 86400
          labels:
            severity: critical
        - alert: KubeletClientCertificateRenewalErrors
          annotations:
            description: Kubelet on node {{ $labels.node }} has failed to renew its client
              certificate ({{ $value | humanize }} errors in the last 5 minutes).
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeletclientcertificaterenewalerrors
            summary: Kubelet has failed to renew its client certificate.
          expr: |
            increase(kubelet_certificate_manager_client_expiration_renew_errors[5m]) > 0
          for: 15m
          labels:
            severity: warning
        - alert: KubeletServerCertificateRenewalErrors
          annotations:
            description: Kubelet on node {{ $labels.node }} has failed to renew its server
              certificate ({{ $value | humanize }} errors in the last 5 minutes).
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeletservercertificaterenewalerrors
            summary: Kubelet has failed to renew its server certificate.
          expr: |
            increase(kubelet_server_expiration_renew_errors[5m]) > 0
          for: 15m
          labels:
            severity: warning
        - alert: KubeletDown
          annotations:
            description: Kubelet has disappeared from Prometheus target discovery.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeletdown
            summary: Target disappeared from Prometheus target discovery.
          expr: |
            absent(up{job="kubelet", metrics_path="/metrics"} == 1)
          for: 15m
          labels:
            severity: critical
      - name: kubernetes-system-scheduler
        rules:
        - alert: KubeSchedulerDown
          annotations:
            description: KubeScheduler has disappeared from Prometheus target discovery.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeschedulerdown
            summary: Target disappeared from Prometheus target discovery.
          expr: |
            absent(up{job="kube-scheduler"} == 1)
          for: 15m
          labels:
            severity: critical
      - name: kubernetes-system-controller-manager
        rules:
        - alert: KubeControllerManagerDown
          annotations:
            description: KubeControllerManager has disappeared from Prometheus target discovery.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubecontrollermanagerdown
            summary: Target disappeared from Prometheus target discovery.
          expr: |
            absent(up{job="kube-controller-manager"} == 1)
          for: 15m
          labels:
            severity: critical
      - interval: 3m
        name: kube-apiserver-availability.rules
        rules:
        - expr: |
            avg_over_time(code_verb:apiserver_request_total:increase1h[30d]) * 24 * 30
          record: code_verb:apiserver_request_total:increase30d
        - expr: |
            sum by (cluster, code) (code_verb:apiserver_request_total:increase30d{verb=~"LIST|GET"})
          labels:
            verb: read
          record: code:apiserver_request_total:increase30d
        - expr: |
            sum by (cluster, code) (code_verb:apiserver_request_total:increase30d{verb=~"POST|PUT|PATCH|DELETE"})
          labels:
            verb: write
          record: code:apiserver_request_total:increase30d
        - expr: |
            sum by (cluster, verb, scope, le) (increase(apiserver_request_sli_duration_seconds_bucket[1h]))
          record: cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase1h
        - expr: |
            sum by (cluster, verb, scope, le) (avg_over_time(cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase1h[30d]) * 24 * 30)
          record: cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase30d
        - expr: |
            sum by (cluster, verb, scope) (cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase1h{le="+Inf"})
          record: cluster_verb_scope:apiserver_request_sli_duration_seconds_count:increase1h
        - expr: |
            sum by (cluster, verb, scope) (cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase30d{le="+Inf"} * 24 * 30)
          record: cluster_verb_scope:apiserver_request_sli_duration_seconds_count:increase30d
        - expr: |
            1 - (
              (
                # write too slow
                sum by (cluster) (cluster_verb_scope:apiserver_request_sli_duration_seconds_count:increase30d{verb=~"POST|PUT|PATCH|DELETE"})
                -
                sum by (cluster) (cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase30d{verb=~"POST|PUT|PATCH|DELETE",le="1"})
              ) +
              (
                # read too slow
                sum by (cluster) (cluster_verb_scope:apiserver_request_sli_duration_seconds_count:increase30d{verb=~"LIST|GET"})
                -
                (
                  (
                    sum by (cluster) (cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase30d{verb=~"LIST|GET",scope=~"resource|",le="1"})
                    or
                    vector(0)
                  )
                  +
                  sum by (cluster) (cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase30d{verb=~"LIST|GET",scope="namespace",le="5"})
                  +
                  sum by (cluster) (cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase30d{verb=~"LIST|GET",scope="cluster",le="30"})
                )
              ) +
              # errors
              sum by (cluster) (code:apiserver_request_total:increase30d{code=~"5.."} or vector(0))
            )
            /
            sum by (cluster) (code:apiserver_request_total:increase30d)
          labels:
            verb: all
          record: apiserver_request:availability30d
        - expr: |
            1 - (
              sum by (cluster) (cluster_verb_scope:apiserver_request_sli_duration_seconds_count:increase30d{verb=~"LIST|GET"})
              -
              (
                # too slow
                (
                  sum by (cluster) (cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase30d{verb=~"LIST|GET",scope=~"resource|",le="1"})
                  or
                  vector(0)
                )
                +
                sum by (cluster) (cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase30d{verb=~"LIST|GET",scope="namespace",le="5"})
                +
                sum by (cluster) (cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase30d{verb=~"LIST|GET",scope="cluster",le="30"})
              )
              +
              # errors
              sum by (cluster) (code:apiserver_request_total:increase30d{verb="read",code=~"5.."} or vector(0))
            )
            /
            sum by (cluster) (code:apiserver_request_total:increase30d{verb="read"})
          labels:
            verb: read
          record: apiserver_request:availability30d
        - expr: |
            1 - (
              (
                # too slow
                sum by (cluster) (cluster_verb_scope:apiserver_request_sli_duration_seconds_count:increase30d{verb=~"POST|PUT|PATCH|DELETE"})
                -
                sum by (cluster) (cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase30d{verb=~"POST|PUT|PATCH|DELETE",le="1"})
              )
              +
              # errors
              sum by (cluster) (code:apiserver_request_total:increase30d{verb="write",code=~"5.."} or vector(0))
            )
            /
            sum by (cluster) (code:apiserver_request_total:increase30d{verb="write"})
          labels:
            verb: write
          record: apiserver_request:availability30d
        - expr: |
            sum by (cluster,code,resource) (rate(apiserver_request_total{job="apiserver",verb=~"LIST|GET"}[5m]))
          labels:
            verb: read
          record: code_resource:apiserver_request_total:rate5m
        - expr: |
            sum by (cluster,code,resource) (rate(apiserver_request_total{job="apiserver",verb=~"POST|PUT|PATCH|DELETE"}[5m]))
          labels:
            verb: write
          record: code_resource:apiserver_request_total:rate5m
        - expr: |
            sum by (cluster, code, verb) (increase(apiserver_request_total{job="apiserver",verb=~"LIST|GET|POST|PUT|PATCH|DELETE",code=~"2.."}[1h]))
          record: code_verb:apiserver_request_total:increase1h
        - expr: |
            sum by (cluster, code, verb) (increase(apiserver_request_total{job="apiserver",verb=~"LIST|GET|POST|PUT|PATCH|DELETE",code=~"3.."}[1h]))
          record: code_verb:apiserver_request_total:increase1h
        - expr: |
            sum by (cluster, code, verb) (increase(apiserver_request_total{job="apiserver",verb=~"LIST|GET|POST|PUT|PATCH|DELETE",code=~"4.."}[1h]))
          record: code_verb:apiserver_request_total:increase1h
        - expr: |
            sum by (cluster, code, verb) (increase(apiserver_request_total{job="apiserver",verb=~"LIST|GET|POST|PUT|PATCH|DELETE",code=~"5.."}[1h]))
          record: code_verb:apiserver_request_total:increase1h
      - name: kube-apiserver-burnrate.rules
        rules:
        - expr: |
            (
              (
                # too slow
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward"}[1d]))
                -
                (
                  (
                    sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope=~"resource|",le="1"}[1d]))
                    or
                    vector(0)
                  )
                  +
                  sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="namespace",le="5"}[1d]))
                  +
                  sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="cluster",le="30"}[1d]))
                )
              )
              +
              # errors
              sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"LIST|GET",code=~"5.."}[1d]))
            )
            /
            sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"LIST|GET"}[1d]))
          labels:
            verb: read
          record: apiserver_request:burnrate1d
        - expr: |
            (
              (
                # too slow
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward"}[1h]))
                -
                (
                  (
                    sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope=~"resource|",le="1"}[1h]))
                    or
                    vector(0)
                  )
                  +
                  sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="namespace",le="5"}[1h]))
                  +
                  sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="cluster",le="30"}[1h]))
                )
              )
              +
              # errors
              sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"LIST|GET",code=~"5.."}[1h]))
            )
            /
            sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"LIST|GET"}[1h]))
          labels:
            verb: read
          record: apiserver_request:burnrate1h
        - expr: |
            (
              (
                # too slow
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward"}[2h]))
                -
                (
                  (
                    sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope=~"resource|",le="1"}[2h]))
                    or
                    vector(0)
                  )
                  +
                  sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="namespace",le="5"}[2h]))
                  +
                  sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="cluster",le="30"}[2h]))
                )
              )
              +
              # errors
              sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"LIST|GET",code=~"5.."}[2h]))
            )
            /
            sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"LIST|GET"}[2h]))
          labels:
            verb: read
          record: apiserver_request:burnrate2h
        - expr: |
            (
              (
                # too slow
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward"}[30m]))
                -
                (
                  (
                    sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope=~"resource|",le="1"}[30m]))
                    or
                    vector(0)
                  )
                  +
                  sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="namespace",le="5"}[30m]))
                  +
                  sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="cluster",le="30"}[30m]))
                )
              )
              +
              # errors
              sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"LIST|GET",code=~"5.."}[30m]))
            )
            /
            sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"LIST|GET"}[30m]))
          labels:
            verb: read
          record: apiserver_request:burnrate30m
        - expr: |
            (
              (
                # too slow
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward"}[3d]))
                -
                (
                  (
                    sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope=~"resource|",le="1"}[3d]))
                    or
                    vector(0)
                  )
                  +
                  sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="namespace",le="5"}[3d]))
                  +
                  sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="cluster",le="30"}[3d]))
                )
              )
              +
              # errors
              sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"LIST|GET",code=~"5.."}[3d]))
            )
            /
            sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"LIST|GET"}[3d]))
          labels:
            verb: read
          record: apiserver_request:burnrate3d
        - expr: |
            (
              (
                # too slow
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward"}[5m]))
                -
                (
                  (
                    sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope=~"resource|",le="1"}[5m]))
                    or
                    vector(0)
                  )
                  +
                  sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="namespace",le="5"}[5m]))
                  +
                  sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="cluster",le="30"}[5m]))
                )
              )
              +
              # errors
              sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"LIST|GET",code=~"5.."}[5m]))
            )
            /
            sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"LIST|GET"}[5m]))
          labels:
            verb: read
          record: apiserver_request:burnrate5m
        - expr: |
            (
              (
                # too slow
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward"}[6h]))
                -
                (
                  (
                    sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope=~"resource|",le="1"}[6h]))
                    or
                    vector(0)
                  )
                  +
                  sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="namespace",le="5"}[6h]))
                  +
                  sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="cluster",le="30"}[6h]))
                )
              )
              +
              # errors
              sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"LIST|GET",code=~"5.."}[6h]))
            )
            /
            sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"LIST|GET"}[6h]))
          labels:
            verb: read
          record: apiserver_request:burnrate6h
        - expr: |
            (
              (
                # too slow
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward"}[1d]))
                -
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward",le="1"}[1d]))
              )
              +
              sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",code=~"5.."}[1d]))
            )
            /
            sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"POST|PUT|PATCH|DELETE"}[1d]))
          labels:
            verb: write
          record: apiserver_request:burnrate1d
        - expr: |
            (
              (
                # too slow
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward"}[1h]))
                -
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward",le="1"}[1h]))
              )
              +
              sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",code=~"5.."}[1h]))
            )
            /
            sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"POST|PUT|PATCH|DELETE"}[1h]))
          labels:
            verb: write
          record: apiserver_request:burnrate1h
        - expr: |
            (
              (
                # too slow
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward"}[2h]))
                -
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward",le="1"}[2h]))
              )
              +
              sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",code=~"5.."}[2h]))
            )
            /
            sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"POST|PUT|PATCH|DELETE"}[2h]))
          labels:
            verb: write
          record: apiserver_request:burnrate2h
        - expr: |
            (
              (
                # too slow
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward"}[30m]))
                -
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward",le="1"}[30m]))
              )
              +
              sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",code=~"5.."}[30m]))
            )
            /
            sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"POST|PUT|PATCH|DELETE"}[30m]))
          labels:
            verb: write
          record: apiserver_request:burnrate30m
        - expr: |
            (
              (
                # too slow
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward"}[3d]))
                -
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward",le="1"}[3d]))
              )
              +
              sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",code=~"5.."}[3d]))
            )
            /
            sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"POST|PUT|PATCH|DELETE"}[3d]))
          labels:
            verb: write
          record: apiserver_request:burnrate3d
        - expr: |
            (
              (
                # too slow
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward"}[5m]))
                -
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward",le="1"}[5m]))
              )
              +
              sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",code=~"5.."}[5m]))
            )
            /
            sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"POST|PUT|PATCH|DELETE"}[5m]))
          labels:
            verb: write
          record: apiserver_request:burnrate5m
        - expr: |
            (
              (
                # too slow
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward"}[6h]))
                -
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward",le="1"}[6h]))
              )
              +
              sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",code=~"5.."}[6h]))
            )
            /
            sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"POST|PUT|PATCH|DELETE"}[6h]))
          labels:
            verb: write
          record: apiserver_request:burnrate6h
      - name: kube-apiserver-histogram.rules
        rules:
        - expr: |
            histogram_quantile(0.99, sum by (cluster, le, resource) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward"}[5m]))) > 0
          labels:
            quantile: "0.99"
            verb: read
          record: cluster_quantile:apiserver_request_sli_duration_seconds:histogram_quantile
        - expr: |
            histogram_quantile(0.99, sum by (cluster, le, resource) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward"}[5m]))) > 0
          labels:
            quantile: "0.99"
            verb: write
          record: cluster_quantile:apiserver_request_sli_duration_seconds:histogram_quantile
      - name: k8s.rules.container_cpu_usage_seconds_total
        rules:
        - expr: |
            sum by (cluster, namespace, pod, container) (
              irate(container_cpu_usage_seconds_total{job="kubelet", metrics_path="/metrics/cadvisor", image!=""}[5m])
            ) * on (cluster, namespace, pod) group_left(node) topk by (cluster, namespace, pod) (
              1, max by(cluster, namespace, pod, node) (kube_pod_info{node!=""})
            )
          record: node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate
      - name: k8s.rules.container_memory_working_set_bytes
        rules:
        - expr: |
            container_memory_working_set_bytes{job="kubelet", metrics_path="/metrics/cadvisor", image!=""}
            * on (cluster, namespace, pod) group_left(node) topk by(cluster, namespace, pod) (1,
              max by(cluster, namespace, pod, node) (kube_pod_info{node!=""})
            )
          record: node_namespace_pod_container:container_memory_working_set_bytes
      - name: k8s.rules.container_memory_rss
        rules:
        - expr: |
            container_memory_rss{job="kubelet", metrics_path="/metrics/cadvisor", image!=""}
            * on (cluster, namespace, pod) group_left(node) topk by(cluster, namespace, pod) (1,
              max by(cluster, namespace, pod, node) (kube_pod_info{node!=""})
            )
          record: node_namespace_pod_container:container_memory_rss
      - name: k8s.rules.container_memory_cache
        rules:
        - expr: |
            container_memory_cache{job="kubelet", metrics_path="/metrics/cadvisor", image!=""}
            * on (cluster, namespace, pod) group_left(node) topk by(cluster, namespace, pod) (1,
              max by(cluster, namespace, pod, node) (kube_pod_info{node!=""})
            )
          record: node_namespace_pod_container:container_memory_cache
      - name: k8s.rules.container_memory_swap
        rules:
        - expr: |
            container_memory_swap{job="kubelet", metrics_path="/metrics/cadvisor", image!=""}
            * on (cluster, namespace, pod) group_left(node) topk by(cluster, namespace, pod) (1,
              max by(cluster, namespace, pod, node) (kube_pod_info{node!=""})
            )
          record: node_namespace_pod_container:container_memory_swap
      - name: k8s.rules.container_memory_requests
        rules:
        - expr: |
            kube_pod_container_resource_requests{resource="memory",job="kube-state-metrics"}  * on (namespace, pod, cluster)
            group_left() max by (namespace, pod, cluster) (
              (kube_pod_status_phase{phase=~"Pending|Running"} == 1)
            )
          record: cluster:namespace:pod_memory:active:kube_pod_container_resource_requests
        - expr: |
            sum by (namespace, cluster) (
                sum by (namespace, pod, cluster) (
                    max by (namespace, pod, container, cluster) (
                      kube_pod_container_resource_requests{resource="memory",job="kube-state-metrics"}
                    ) * on(namespace, pod, cluster) group_left() max by (namespace, pod, cluster) (
                      kube_pod_status_phase{phase=~"Pending|Running"} == 1
                    )
                )
            )
          record: namespace_memory:kube_pod_container_resource_requests:sum
      - name: k8s.rules.container_cpu_requests
        rules:
        - expr: |
            kube_pod_container_resource_requests{resource="cpu",job="kube-state-metrics"}  * on (namespace, pod, cluster)
            group_left() max by (namespace, pod, cluster) (
              (kube_pod_status_phase{phase=~"Pending|Running"} == 1)
            )
          record: cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests
        - expr: |
            sum by (namespace, cluster) (
                sum by (namespace, pod, cluster) (
                    max by (namespace, pod, container, cluster) (
                      kube_pod_container_resource_requests{resource="cpu",job="kube-state-metrics"}
                    ) * on(namespace, pod, cluster) group_left() max by (namespace, pod, cluster) (
                      kube_pod_status_phase{phase=~"Pending|Running"} == 1
                    )
                )
            )
          record: namespace_cpu:kube_pod_container_resource_requests:sum
      - name: k8s.rules.container_memory_limits
        rules:
        - expr: |
            kube_pod_container_resource_limits{resource="memory",job="kube-state-metrics"}  * on (namespace, pod, cluster)
            group_left() max by (namespace, pod, cluster) (
              (kube_pod_status_phase{phase=~"Pending|Running"} == 1)
            )
          record: cluster:namespace:pod_memory:active:kube_pod_container_resource_limits
        - expr: |
            sum by (namespace, cluster) (
                sum by (namespace, pod, cluster) (
                    max by (namespace, pod, container, cluster) (
                      kube_pod_container_resource_limits{resource="memory",job="kube-state-metrics"}
                    ) * on(namespace, pod, cluster) group_left() max by (namespace, pod, cluster) (
                      kube_pod_status_phase{phase=~"Pending|Running"} == 1
                    )
                )
            )
          record: namespace_memory:kube_pod_container_resource_limits:sum
      - name: k8s.rules.container_cpu_limits
        rules:
        - expr: |
            kube_pod_container_resource_limits{resource="cpu",job="kube-state-metrics"}  * on (namespace, pod, cluster)
            group_left() max by (namespace, pod, cluster) (
             (kube_pod_status_phase{phase=~"Pending|Running"} == 1)
             )
          record: cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits
        - expr: |
            sum by (namespace, cluster) (
                sum by (namespace, pod, cluster) (
                    max by (namespace, pod, container, cluster) (
                      kube_pod_container_resource_limits{resource="cpu",job="kube-state-metrics"}
                    ) * on(namespace, pod, cluster) group_left() max by (namespace, pod, cluster) (
                      kube_pod_status_phase{phase=~"Pending|Running"} == 1
                    )
                )
            )
          record: namespace_cpu:kube_pod_container_resource_limits:sum
      - name: k8s.rules.pod_owner
        rules:
        - expr: |
            max by (cluster, namespace, workload, pod) (
              label_replace(
                label_replace(
                  kube_pod_owner{job="kube-state-metrics", owner_kind="ReplicaSet"},
                  "replicaset", "$1", "owner_name", "(.*)"
                ) * on(replicaset, namespace) group_left(owner_name) topk by(replicaset, namespace) (
                  1, max by (replicaset, namespace, owner_name) (
                    kube_replicaset_owner{job="kube-state-metrics"}
                  )
                ),
                "workload", "$1", "owner_name", "(.*)"
              )
            )
          labels:
            workload_type: deployment
          record: namespace_workload_pod:kube_pod_owner:relabel
        - expr: |
            max by (cluster, namespace, workload, pod) (
              label_replace(
                kube_pod_owner{job="kube-state-metrics", owner_kind="DaemonSet"},
                "workload", "$1", "owner_name", "(.*)"
              )
            )
          labels:
            workload_type: daemonset
          record: namespace_workload_pod:kube_pod_owner:relabel
        - expr: |
            max by (cluster, namespace, workload, pod) (
              label_replace(
                kube_pod_owner{job="kube-state-metrics", owner_kind="StatefulSet"},
                "workload", "$1", "owner_name", "(.*)"
              )
            )
          labels:
            workload_type: statefulset
          record: namespace_workload_pod:kube_pod_owner:relabel
        - expr: |
            max by (cluster, namespace, workload, pod) (
              label_replace(
                kube_pod_owner{job="kube-state-metrics", owner_kind="Job"},
                "workload", "$1", "owner_name", "(.*)"
              )
            )
          labels:
            workload_type: job
          record: namespace_workload_pod:kube_pod_owner:relabel
      - name: kube-scheduler.rules
        rules:
        - expr: |
            histogram_quantile(0.99, sum(rate(scheduler_e2e_scheduling_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
          labels:
            quantile: "0.99"
          record: cluster_quantile:scheduler_e2e_scheduling_duration_seconds:histogram_quantile
        - expr: |
            histogram_quantile(0.99, sum(rate(scheduler_scheduling_algorithm_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
          labels:
            quantile: "0.99"
          record: cluster_quantile:scheduler_scheduling_algorithm_duration_seconds:histogram_quantile
        - expr: |
            histogram_quantile(0.99, sum(rate(scheduler_binding_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
          labels:
            quantile: "0.99"
          record: cluster_quantile:scheduler_binding_duration_seconds:histogram_quantile
        - expr: |
            histogram_quantile(0.9, sum(rate(scheduler_e2e_scheduling_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
          labels:
            quantile: "0.9"
          record: cluster_quantile:scheduler_e2e_scheduling_duration_seconds:histogram_quantile
        - expr: |
            histogram_quantile(0.9, sum(rate(scheduler_scheduling_algorithm_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
          labels:
            quantile: "0.9"
          record: cluster_quantile:scheduler_scheduling_algorithm_duration_seconds:histogram_quantile
        - expr: |
            histogram_quantile(0.9, sum(rate(scheduler_binding_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
          labels:
            quantile: "0.9"
          record: cluster_quantile:scheduler_binding_duration_seconds:histogram_quantile
        - expr: |
            histogram_quantile(0.5, sum(rate(scheduler_e2e_scheduling_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
          labels:
            quantile: "0.5"
          record: cluster_quantile:scheduler_e2e_scheduling_duration_seconds:histogram_quantile
        - expr: |
            histogram_quantile(0.5, sum(rate(scheduler_scheduling_algorithm_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
          labels:
            quantile: "0.5"
          record: cluster_quantile:scheduler_scheduling_algorithm_duration_seconds:histogram_quantile
        - expr: |
            histogram_quantile(0.5, sum(rate(scheduler_binding_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
          labels:
            quantile: "0.5"
          record: cluster_quantile:scheduler_binding_duration_seconds:histogram_quantile
      - name: node.rules
        rules:
        - expr: |
            topk by(cluster, namespace, pod) (1,
              max by (cluster, node, namespace, pod) (
                label_replace(kube_pod_info{job="kube-state-metrics",node!=""}, "pod", "$1", "pod", "(.*)")
            ))
          record: 'node_namespace_pod:kube_pod_info:'
        - expr: |
            count by (cluster, node) (
              node_cpu_seconds_total{mode="idle",job="node-exporter"}
              * on (cluster, namespace, pod) group_left(node)
              topk by(cluster, namespace, pod) (1, node_namespace_pod:kube_pod_info:)
            )
          record: node:node_num_cpu:sum
        - expr: |
            sum(
              node_memory_MemAvailable_bytes{job="node-exporter"} or
              (
                node_memory_Buffers_bytes{job="node-exporter"} +
                node_memory_Cached_bytes{job="node-exporter"} +
                node_memory_MemFree_bytes{job="node-exporter"} +
                node_memory_Slab_bytes{job="node-exporter"}
              )
            ) by (cluster)
          record: :node_memory_MemAvailable_bytes:sum
        - expr: |
            avg by (cluster, node) (
              sum without (mode) (
                rate(node_cpu_seconds_total{mode!="idle",mode!="iowait",mode!="steal",job="node-exporter"}[5m])
              )
            )
          record: node:node_cpu_utilization:ratio_rate5m
        - expr: |
            avg by (cluster) (
              node:node_cpu_utilization:ratio_rate5m
            )
          record: cluster:node_cpu:ratio_rate5m
      - name: kubelet.rules
        rules:
        - expr: |
            histogram_quantile(0.99, sum(rate(kubelet_pleg_relist_duration_seconds_bucket{job="kubelet", metrics_path="/metrics"}[5m])) by (cluster, instance, le) * on(cluster, instance) group_left(node) kubelet_node_name{job="kubelet", metrics_path="/metrics"})
          labels:
            quantile: "0.99"
          record: node_quantile:kubelet_pleg_relist_duration_seconds:histogram_quantile
        - expr: |
            histogram_quantile(0.9, sum(rate(kubelet_pleg_relist_duration_seconds_bucket{job="kubelet", metrics_path="/metrics"}[5m])) by (cluster, instance, le) * on(cluster, instance) group_left(node) kubelet_node_name{job="kubelet", metrics_path="/metrics"})
          labels:
            quantile: "0.9"
          record: node_quantile:kubelet_pleg_relist_duration_seconds:histogram_quantile
        - expr: |
            histogram_quantile(0.5, sum(rate(kubelet_pleg_relist_duration_seconds_bucket{job="kubelet", metrics_path="/metrics"}[5m])) by (cluster, instance, le) * on(cluster, instance) group_left(node) kubelet_node_name{job="kubelet", metrics_path="/metrics"})
          labels:
            quantile: "0.5"
          record: node_quantile:kubelet_pleg_relist_duration_seconds:histogram_quantile
    monitoring-node-exporter-rules-71248871-63a3-46bf-83a9-d2cb8526b7f4.yaml: |
      groups:
      - name: node-exporter
        rules:
        - alert: NodeFilesystemSpaceFillingUp
          annotations:
            description: Filesystem on {{ $labels.device }}, mounted on {{ $labels.mountpoint
              }}, at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available
              space left and is filling up.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodefilesystemspacefillingup
            summary: Filesystem is predicted to run out of space within the next 24 hours.
          expr: |
            (
              node_filesystem_avail_bytes{job="node-exporter",fstype!="",mountpoint!=""} / node_filesystem_size_bytes{job="node-exporter",fstype!="",mountpoint!=""} * 100 < 15
            and
              predict_linear(node_filesystem_avail_bytes{job="node-exporter",fstype!="",mountpoint!=""}[6h], 24*60*60) < 0
            and
              node_filesystem_readonly{job="node-exporter",fstype!="",mountpoint!=""} == 0
            )
          for: 1h
          labels:
            severity: warning
        - alert: NodeFilesystemSpaceFillingUp
          annotations:
            description: Filesystem on {{ $labels.device }}, mounted on {{ $labels.mountpoint
              }}, at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available
              space left and is filling up fast.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodefilesystemspacefillingup
            summary: Filesystem is predicted to run out of space within the next 4 hours.
          expr: |
            (
              node_filesystem_avail_bytes{job="node-exporter",fstype!="",mountpoint!=""} / node_filesystem_size_bytes{job="node-exporter",fstype!="",mountpoint!=""} * 100 < 10
            and
              predict_linear(node_filesystem_avail_bytes{job="node-exporter",fstype!="",mountpoint!=""}[6h], 4*60*60) < 0
            and
              node_filesystem_readonly{job="node-exporter",fstype!="",mountpoint!=""} == 0
            )
          for: 1h
          labels:
            severity: critical
        - alert: NodeFilesystemAlmostOutOfSpace
          annotations:
            description: Filesystem on {{ $labels.device }}, mounted on {{ $labels.mountpoint
              }}, at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available
              space left.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodefilesystemalmostoutofspace
            summary: Filesystem has less than 5% space left.
          expr: |
            (
              node_filesystem_avail_bytes{job="node-exporter",fstype!="",mountpoint!=""} / node_filesystem_size_bytes{job="node-exporter",fstype!="",mountpoint!=""} * 100 < 5
            and
              node_filesystem_readonly{job="node-exporter",fstype!="",mountpoint!=""} == 0
            )
          for: 30m
          labels:
            severity: warning
        - alert: NodeFilesystemAlmostOutOfSpace
          annotations:
            description: Filesystem on {{ $labels.device }}, mounted on {{ $labels.mountpoint
              }}, at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available
              space left.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodefilesystemalmostoutofspace
            summary: Filesystem has less than 3% space left.
          expr: |
            (
              node_filesystem_avail_bytes{job="node-exporter",fstype!="",mountpoint!=""} / node_filesystem_size_bytes{job="node-exporter",fstype!="",mountpoint!=""} * 100 < 3
            and
              node_filesystem_readonly{job="node-exporter",fstype!="",mountpoint!=""} == 0
            )
          for: 30m
          labels:
            severity: critical
        - alert: NodeFilesystemFilesFillingUp
          annotations:
            description: Filesystem on {{ $labels.device }}, mounted on {{ $labels.mountpoint
              }}, at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available
              inodes left and is filling up.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodefilesystemfilesfillingup
            summary: Filesystem is predicted to run out of inodes within the next 24 hours.
          expr: |
            (
              node_filesystem_files_free{job="node-exporter",fstype!="",mountpoint!=""} / node_filesystem_files{job="node-exporter",fstype!="",mountpoint!=""} * 100 < 40
            and
              predict_linear(node_filesystem_files_free{job="node-exporter",fstype!="",mountpoint!=""}[6h], 24*60*60) < 0
            and
              node_filesystem_readonly{job="node-exporter",fstype!="",mountpoint!=""} == 0
            )
          for: 1h
          labels:
            severity: warning
        - alert: NodeFilesystemFilesFillingUp
          annotations:
            description: Filesystem on {{ $labels.device }}, mounted on {{ $labels.mountpoint
              }}, at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available
              inodes left and is filling up fast.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodefilesystemfilesfillingup
            summary: Filesystem is predicted to run out of inodes within the next 4 hours.
          expr: |
            (
              node_filesystem_files_free{job="node-exporter",fstype!="",mountpoint!=""} / node_filesystem_files{job="node-exporter",fstype!="",mountpoint!=""} * 100 < 20
            and
              predict_linear(node_filesystem_files_free{job="node-exporter",fstype!="",mountpoint!=""}[6h], 4*60*60) < 0
            and
              node_filesystem_readonly{job="node-exporter",fstype!="",mountpoint!=""} == 0
            )
          for: 1h
          labels:
            severity: critical
        - alert: NodeFilesystemAlmostOutOfFiles
          annotations:
            description: Filesystem on {{ $labels.device }}, mounted on {{ $labels.mountpoint
              }}, at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available
              inodes left.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodefilesystemalmostoutoffiles
            summary: Filesystem has less than 5% inodes left.
          expr: |
            (
              node_filesystem_files_free{job="node-exporter",fstype!="",mountpoint!=""} / node_filesystem_files{job="node-exporter",fstype!="",mountpoint!=""} * 100 < 5
            and
              node_filesystem_readonly{job="node-exporter",fstype!="",mountpoint!=""} == 0
            )
          for: 1h
          labels:
            severity: warning
        - alert: NodeFilesystemAlmostOutOfFiles
          annotations:
            description: Filesystem on {{ $labels.device }}, mounted on {{ $labels.mountpoint
              }}, at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available
              inodes left.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodefilesystemalmostoutoffiles
            summary: Filesystem has less than 3% inodes left.
          expr: |
            (
              node_filesystem_files_free{job="node-exporter",fstype!="",mountpoint!=""} / node_filesystem_files{job="node-exporter",fstype!="",mountpoint!=""} * 100 < 3
            and
              node_filesystem_readonly{job="node-exporter",fstype!="",mountpoint!=""} == 0
            )
          for: 1h
          labels:
            severity: critical
        - alert: NodeNetworkReceiveErrs
          annotations:
            description: '{{ $labels.instance }} interface {{ $labels.device }} has encountered
              {{ printf "%.0f" $value }} receive errors in the last two minutes.'
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodenetworkreceiveerrs
            summary: Network interface is reporting many receive errors.
          expr: |
            rate(node_network_receive_errs_total{job="node-exporter"}[2m]) / rate(node_network_receive_packets_total{job="node-exporter"}[2m]) > 0.01
          for: 1h
          labels:
            severity: warning
        - alert: NodeNetworkTransmitErrs
          annotations:
            description: '{{ $labels.instance }} interface {{ $labels.device }} has encountered
              {{ printf "%.0f" $value }} transmit errors in the last two minutes.'
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodenetworktransmiterrs
            summary: Network interface is reporting many transmit errors.
          expr: |
            rate(node_network_transmit_errs_total{job="node-exporter"}[2m]) / rate(node_network_transmit_packets_total{job="node-exporter"}[2m]) > 0.01
          for: 1h
          labels:
            severity: warning
        - alert: NodeHighNumberConntrackEntriesUsed
          annotations:
            description: '{{ $value | humanizePercentage }} of conntrack entries are used.'
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodehighnumberconntrackentriesused
            summary: Number of conntrack are getting close to the limit.
          expr: |
            (node_nf_conntrack_entries{job="node-exporter"} / node_nf_conntrack_entries_limit) > 0.75
          labels:
            severity: warning
        - alert: NodeTextFileCollectorScrapeError
          annotations:
            description: Node Exporter text file collector on {{ $labels.instance }} failed
              to scrape.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodetextfilecollectorscrapeerror
            summary: Node Exporter text file collector failed to scrape.
          expr: |
            node_textfile_scrape_error{job="node-exporter"} == 1
          labels:
            severity: warning
        - alert: NodeClockSkewDetected
          annotations:
            description: Clock at {{ $labels.instance }} is out of sync by more than 0.05s.
              Ensure NTP is configured correctly on this host.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodeclockskewdetected
            summary: Clock skew detected.
          expr: |
            (
              node_timex_offset_seconds{job="node-exporter"} > 0.05
            and
              deriv(node_timex_offset_seconds{job="node-exporter"}[5m]) >= 0
            )
            or
            (
              node_timex_offset_seconds{job="node-exporter"} < -0.05
            and
              deriv(node_timex_offset_seconds{job="node-exporter"}[5m]) <= 0
            )
          for: 10m
          labels:
            severity: warning
        - alert: NodeClockNotSynchronising
          annotations:
            description: Clock at {{ $labels.instance }} is not synchronising. Ensure NTP
              is configured on this host.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodeclocknotsynchronising
            summary: Clock not synchronising.
          expr: |
            min_over_time(node_timex_sync_status{job="node-exporter"}[5m]) == 0
            and
            node_timex_maxerror_seconds{job="node-exporter"} >= 16
          for: 10m
          labels:
            severity: warning
        - alert: NodeRAIDDegraded
          annotations:
            description: RAID array '{{ $labels.device }}' at {{ $labels.instance }} is
              in degraded state due to one or more disks failures. Number of spare drives
              is insufficient to fix issue automatically.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/noderaiddegraded
            summary: RAID Array is degraded.
          expr: |
            node_md_disks_required{job="node-exporter",device=~"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)"} - ignoring (state) (node_md_disks{state="active",job="node-exporter",device=~"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)"}) > 0
          for: 15m
          labels:
            severity: critical
        - alert: NodeRAIDDiskFailure
          annotations:
            description: At least one device in RAID array at {{ $labels.instance }} failed.
              Array '{{ $labels.device }}' needs attention and possibly a disk swap.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/noderaiddiskfailure
            summary: Failed device in RAID array.
          expr: |
            node_md_disks{state="failed",job="node-exporter",device=~"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)"} > 0
          labels:
            severity: warning
        - alert: NodeFileDescriptorLimit
          annotations:
            description: File descriptors limit at {{ $labels.instance }} is currently at
              {{ printf "%.2f" $value }}%.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodefiledescriptorlimit
            summary: Kernel is predicted to exhaust file descriptors limit soon.
          expr: |
            (
              node_filefd_allocated{job="node-exporter"} * 100 / node_filefd_maximum{job="node-exporter"} > 70
            )
          for: 15m
          labels:
            severity: warning
        - alert: NodeFileDescriptorLimit
          annotations:
            description: File descriptors limit at {{ $labels.instance }} is currently at
              {{ printf "%.2f" $value }}%.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodefiledescriptorlimit
            summary: Kernel is predicted to exhaust file descriptors limit soon.
          expr: |
            (
              node_filefd_allocated{job="node-exporter"} * 100 / node_filefd_maximum{job="node-exporter"} > 90
            )
          for: 15m
          labels:
            severity: critical
        - alert: NodeCPUHighUsage
          annotations:
            description: |
              CPU usage at {{ $labels.instance }} has been above 90% for the last 15 minutes, is currently at {{ printf "%.2f" $value }}%.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodecpuhighusage
            summary: High CPU usage.
          expr: |
            sum without(mode) (avg without (cpu) (rate(node_cpu_seconds_total{job="node-exporter", mode!="idle"}[2m]))) * 100 > 90
          for: 15m
          labels:
            severity: info
        - alert: NodeSystemSaturation
          annotations:
            description: |
              System load per core at {{ $labels.instance }} has been above 2 for the last 15 minutes, is currently at {{ printf "%.2f" $value }}.
              This might indicate this instance resources saturation and can cause it becoming unresponsive.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodesystemsaturation
            summary: System saturated, load per core is very high.
          expr: |
            node_load1{job="node-exporter"}
            / count without (cpu, mode) (node_cpu_seconds_total{job="node-exporter", mode="idle"}) > 2
          for: 15m
          labels:
            severity: warning
        - alert: NodeMemoryMajorPagesFaults
          annotations:
            description: |
              Memory major pages are occurring at very high rate at {{ $labels.instance }}, 500 major page faults per second for the last 15 minutes, is currently at {{ printf "%.2f" $value }}.
              Please check that there is enough memory available at this instance.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodememorymajorpagesfaults
            summary: Memory major page faults are occurring at very high rate.
          expr: |
            rate(node_vmstat_pgmajfault{job="node-exporter"}[5m]) > 500
          for: 15m
          labels:
            severity: warning
        - alert: NodeMemoryHighUtilization
          annotations:
            description: |
              Memory is filling up at {{ $labels.instance }}, has been above 90% for the last 15 minutes, is currently at {{ printf "%.2f" $value }}%.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodememoryhighutilization
            summary: Host is running out of memory.
          expr: |
            100 - (node_memory_MemAvailable_bytes{job="node-exporter"} / node_memory_MemTotal_bytes{job="node-exporter"} * 100) > 90
          for: 15m
          labels:
            severity: warning
        - alert: NodeDiskIOSaturation
          annotations:
            description: |
              Disk IO queue (aqu-sq) is high on {{ $labels.device }} at {{ $labels.instance }}, has been above 10 for the last 30 minutes, is currently at {{ printf "%.2f" $value }}.
              This symptom might indicate disk saturation.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodediskiosaturation
            summary: Disk IO queue is high.
          expr: |
            rate(node_disk_io_time_weighted_seconds_total{job="node-exporter", device=~"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)"}[5m]) > 10
          for: 30m
          labels:
            severity: warning
        - alert: NodeSystemdServiceFailed
          annotations:
            description: Systemd service {{ $labels.name }} has entered failed state at
              {{ $labels.instance }}
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodesystemdservicefailed
            summary: Systemd service has entered failed state.
          expr: |
            node_systemd_unit_state{job="node-exporter", state="failed"} == 1
          for: 5m
          labels:
            severity: warning
        - alert: NodeBondingDegraded
          annotations:
            description: Bonding interface {{ $labels.master }} on {{ $labels.instance }}
              is in degraded state due to one or more slave failures.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodebondingdegraded
            summary: Bonding interface is degraded
          expr: |
            (node_bonding_slaves - node_bonding_active) != 0
          for: 5m
          labels:
            severity: warning
      - name: node-exporter.rules
        rules:
        - expr: |
            count without (cpu, mode) (
              node_cpu_seconds_total{job="node-exporter",mode="idle"}
            )
          record: instance:node_num_cpu:sum
        - expr: |
            1 - avg without (cpu) (
              sum without (mode) (rate(node_cpu_seconds_total{job="node-exporter", mode=~"idle|iowait|steal"}[5m]))
            )
          record: instance:node_cpu_utilisation:rate5m
        - expr: |
            (
              node_load1{job="node-exporter"}
            /
              instance:node_num_cpu:sum{job="node-exporter"}
            )
          record: instance:node_load1_per_cpu:ratio
        - expr: |
            1 - (
              (
                node_memory_MemAvailable_bytes{job="node-exporter"}
                or
                (
                  node_memory_Buffers_bytes{job="node-exporter"}
                  +
                  node_memory_Cached_bytes{job="node-exporter"}
                  +
                  node_memory_MemFree_bytes{job="node-exporter"}
                  +
                  node_memory_Slab_bytes{job="node-exporter"}
                )
              )
            /
              node_memory_MemTotal_bytes{job="node-exporter"}
            )
          record: instance:node_memory_utilisation:ratio
        - expr: |
            rate(node_vmstat_pgmajfault{job="node-exporter"}[5m])
          record: instance:node_vmstat_pgmajfault:rate5m
        - expr: |
            rate(node_disk_io_time_seconds_total{job="node-exporter", device=~"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)"}[5m])
          record: instance_device:node_disk_io_time_seconds:rate5m
        - expr: |
            rate(node_disk_io_time_weighted_seconds_total{job="node-exporter", device=~"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)"}[5m])
          record: instance_device:node_disk_io_time_weighted_seconds:rate5m
        - expr: |
            sum without (device) (
              rate(node_network_receive_bytes_total{job="node-exporter", device!="lo"}[5m])
            )
          record: instance:node_network_receive_bytes_excluding_lo:rate5m
        - expr: |
            sum without (device) (
              rate(node_network_transmit_bytes_total{job="node-exporter", device!="lo"}[5m])
            )
          record: instance:node_network_transmit_bytes_excluding_lo:rate5m
        - expr: |
            sum without (device) (
              rate(node_network_receive_drop_total{job="node-exporter", device!="lo"}[5m])
            )
          record: instance:node_network_receive_drop_excluding_lo:rate5m
        - expr: |
            sum without (device) (
              rate(node_network_transmit_drop_total{job="node-exporter", device!="lo"}[5m])
            )
          record: instance:node_network_transmit_drop_excluding_lo:rate5m
    monitoring-prometheus-k8s-prometheus-rules-7c2d40fb-a9d6-483e-a9f5-8612f98e1b9a.yaml: |
      groups:
      - name: prometheus
        rules:
        - alert: PrometheusBadConfig
          annotations:
            description: Prometheus {{$labels.namespace}}/{{$labels.pod}} has failed to
              reload its configuration.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheusbadconfig
            summary: Failed Prometheus configuration reload.
          expr: |
            # Without max_over_time, failed scrapes could create false negatives, see
            # https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.
            max_over_time(prometheus_config_last_reload_successful{job="prometheus-k8s",namespace="monitoring"}[5m]) == 0
          for: 10m
          labels:
            severity: critical
        - alert: PrometheusSDRefreshFailure
          annotations:
            description: Prometheus {{$labels.namespace}}/{{$labels.pod}} has failed to
              refresh SD with mechanism {{$labels.mechanism}}.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheussdrefreshfailure
            summary: Failed Prometheus SD refresh.
          expr: |
            increase(prometheus_sd_refresh_failures_total{job="prometheus-k8s",namespace="monitoring"}[10m]) > 0
          for: 20m
          labels:
            severity: warning
        - alert: PrometheusKubernetesListWatchFailures
          annotations:
            description: Kubernetes service discovery of Prometheus {{$labels.namespace}}/{{$labels.pod}}
              is experiencing {{ printf "%.0f" $value }} failures with LIST/WATCH requests
              to the Kubernetes API in the last 5 minutes.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheuskuberneteslistwatchfailures
            summary: Requests in Kubernetes SD are failing.
          expr: |
            increase(prometheus_sd_kubernetes_failures_total{job="prometheus-k8s",namespace="monitoring"}[5m]) > 0
          for: 15m
          labels:
            severity: warning
        - alert: PrometheusNotificationQueueRunningFull
          annotations:
            description: Alert notification queue of Prometheus {{$labels.namespace}}/{{$labels.pod}}
              is running full.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheusnotificationqueuerunningfull
            summary: Prometheus alert notification queue predicted to run full in less than
              30m.
          expr: |
            # Without min_over_time, failed scrapes could create false negatives, see
            # https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.
            (
              predict_linear(prometheus_notifications_queue_length{job="prometheus-k8s",namespace="monitoring"}[5m], 60 * 30)
            >
              min_over_time(prometheus_notifications_queue_capacity{job="prometheus-k8s",namespace="monitoring"}[5m])
            )
          for: 15m
          labels:
            severity: warning
        - alert: PrometheusErrorSendingAlertsToSomeAlertmanagers
          annotations:
            description: '{{ printf "%.1f" $value }}% errors while sending alerts from Prometheus
              {{$labels.namespace}}/{{$labels.pod}} to Alertmanager {{$labels.alertmanager}}.'
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheuserrorsendingalertstosomealertmanagers
            summary: Prometheus has encountered more than 1% errors sending alerts to a
              specific Alertmanager.
          expr: |
            (
              rate(prometheus_notifications_errors_total{job="prometheus-k8s",namespace="monitoring"}[5m])
            /
              rate(prometheus_notifications_sent_total{job="prometheus-k8s",namespace="monitoring"}[5m])
            )
            * 100
            > 1
          for: 15m
          labels:
            severity: warning
        - alert: PrometheusNotConnectedToAlertmanagers
          annotations:
            description: Prometheus {{$labels.namespace}}/{{$labels.pod}} is not connected
              to any Alertmanagers.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheusnotconnectedtoalertmanagers
            summary: Prometheus is not connected to any Alertmanagers.
          expr: |
            # Without max_over_time, failed scrapes could create false negatives, see
            # https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.
            max_over_time(prometheus_notifications_alertmanagers_discovered{job="prometheus-k8s",namespace="monitoring"}[5m]) < 1
          for: 10m
          labels:
            severity: warning
        - alert: PrometheusTSDBReloadsFailing
          annotations:
            description: Prometheus {{$labels.namespace}}/{{$labels.pod}} has detected {{$value
              | humanize}} reload failures over the last 3h.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheustsdbreloadsfailing
            summary: Prometheus has issues reloading blocks from disk.
          expr: |
            increase(prometheus_tsdb_reloads_failures_total{job="prometheus-k8s",namespace="monitoring"}[3h]) > 0
          for: 4h
          labels:
            severity: warning
        - alert: PrometheusTSDBCompactionsFailing
          annotations:
            description: Prometheus {{$labels.namespace}}/{{$labels.pod}} has detected {{$value
              | humanize}} compaction failures over the last 3h.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheustsdbcompactionsfailing
            summary: Prometheus has issues compacting blocks.
          expr: |
            increase(prometheus_tsdb_compactions_failed_total{job="prometheus-k8s",namespace="monitoring"}[3h]) > 0
          for: 4h
          labels:
            severity: warning
        - alert: PrometheusNotIngestingSamples
          annotations:
            description: Prometheus {{$labels.namespace}}/{{$labels.pod}} is not ingesting
              samples.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheusnotingestingsamples
            summary: Prometheus is not ingesting samples.
          expr: |
            (
              sum without(type) (rate(prometheus_tsdb_head_samples_appended_total{job="prometheus-k8s",namespace="monitoring"}[5m])) <= 0
            and
              (
                sum without(scrape_job) (prometheus_target_metadata_cache_entries{job="prometheus-k8s",namespace="monitoring"}) > 0
              or
                sum without(rule_group) (prometheus_rule_group_rules{job="prometheus-k8s",namespace="monitoring"}) > 0
              )
            )
          for: 10m
          labels:
            severity: warning
        - alert: PrometheusDuplicateTimestamps
          annotations:
            description: Prometheus {{$labels.namespace}}/{{$labels.pod}} is dropping {{
              printf "%.4g" $value  }} samples/s with different values but duplicated timestamp.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheusduplicatetimestamps
            summary: Prometheus is dropping samples with duplicate timestamps.
          expr: |
            rate(prometheus_target_scrapes_sample_duplicate_timestamp_total{job="prometheus-k8s",namespace="monitoring"}[5m]) > 0
          for: 10m
          labels:
            severity: warning
        - alert: PrometheusOutOfOrderTimestamps
          annotations:
            description: Prometheus {{$labels.namespace}}/{{$labels.pod}} is dropping {{
              printf "%.4g" $value  }} samples/s with timestamps arriving out of order.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheusoutofordertimestamps
            summary: Prometheus drops samples with out-of-order timestamps.
          expr: |
            rate(prometheus_target_scrapes_sample_out_of_order_total{job="prometheus-k8s",namespace="monitoring"}[5m]) > 0
          for: 10m
          labels:
            severity: warning
        - alert: PrometheusRemoteStorageFailures
          annotations:
            description: Prometheus {{$labels.namespace}}/{{$labels.pod}} failed to send
              {{ printf "%.1f" $value }}% of the samples to {{ $labels.remote_name}}:{{
              $labels.url }}
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheusremotestoragefailures
            summary: Prometheus fails to send samples to remote storage.
          expr: |
            (
              (rate(prometheus_remote_storage_failed_samples_total{job="prometheus-k8s",namespace="monitoring"}[5m]) or rate(prometheus_remote_storage_samples_failed_total{job="prometheus-k8s",namespace="monitoring"}[5m]))
            /
              (
                (rate(prometheus_remote_storage_failed_samples_total{job="prometheus-k8s",namespace="monitoring"}[5m]) or rate(prometheus_remote_storage_samples_failed_total{job="prometheus-k8s",namespace="monitoring"}[5m]))
              +
                (rate(prometheus_remote_storage_succeeded_samples_total{job="prometheus-k8s",namespace="monitoring"}[5m]) or rate(prometheus_remote_storage_samples_total{job="prometheus-k8s",namespace="monitoring"}[5m]))
              )
            )
            * 100
            > 1
          for: 15m
          labels:
            severity: critical
        - alert: PrometheusRemoteWriteBehind
          annotations:
            description: Prometheus {{$labels.namespace}}/{{$labels.pod}} remote write is
              {{ printf "%.1f" $value }}s behind for {{ $labels.remote_name}}:{{ $labels.url
              }}.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheusremotewritebehind
            summary: Prometheus remote write is behind.
          expr: |
            # Without max_over_time, failed scrapes could create false negatives, see
            # https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.
            (
              max_over_time(prometheus_remote_storage_highest_timestamp_in_seconds{job="prometheus-k8s",namespace="monitoring"}[5m])
            - ignoring(remote_name, url) group_right
              max_over_time(prometheus_remote_storage_queue_highest_sent_timestamp_seconds{job="prometheus-k8s",namespace="monitoring"}[5m])
            )
            > 120
          for: 15m
          labels:
            severity: critical
        - alert: PrometheusRemoteWriteDesiredShards
          annotations:
            description: Prometheus {{$labels.namespace}}/{{$labels.pod}} remote write desired
              shards calculation wants to run {{ $value }} shards for queue {{ $labels.remote_name}}:{{
              $labels.url }}, which is more than the max of {{ printf `prometheus_remote_storage_shards_max{instance="%s",job="prometheus-k8s",namespace="monitoring"}`
              $labels.instance | query | first | value }}.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheusremotewritedesiredshards
            summary: Prometheus remote write desired shards calculation wants to run more
              than configured max shards.
          expr: |
            # Without max_over_time, failed scrapes could create false negatives, see
            # https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.
            (
              max_over_time(prometheus_remote_storage_shards_desired{job="prometheus-k8s",namespace="monitoring"}[5m])
            >
              max_over_time(prometheus_remote_storage_shards_max{job="prometheus-k8s",namespace="monitoring"}[5m])
            )
          for: 15m
          labels:
            severity: warning
        - alert: PrometheusRuleFailures
          annotations:
            description: Prometheus {{$labels.namespace}}/{{$labels.pod}} has failed to
              evaluate {{ printf "%.0f" $value }} rules in the last 5m.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheusrulefailures
            summary: Prometheus is failing rule evaluations.
          expr: |
            increase(prometheus_rule_evaluation_failures_total{job="prometheus-k8s",namespace="monitoring"}[5m]) > 0
          for: 15m
          labels:
            severity: critical
        - alert: PrometheusMissingRuleEvaluations
          annotations:
            description: Prometheus {{$labels.namespace}}/{{$labels.pod}} has missed {{
              printf "%.0f" $value }} rule group evaluations in the last 5m.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheusmissingruleevaluations
            summary: Prometheus is missing rule evaluations due to slow rule group evaluation.
          expr: |
            increase(prometheus_rule_group_iterations_missed_total{job="prometheus-k8s",namespace="monitoring"}[5m]) > 0
          for: 15m
          labels:
            severity: warning
        - alert: PrometheusTargetLimitHit
          annotations:
            description: Prometheus {{$labels.namespace}}/{{$labels.pod}} has dropped {{
              printf "%.0f" $value }} targets because the number of targets exceeded the
              configured target_limit.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheustargetlimithit
            summary: Prometheus has dropped targets because some scrape configs have exceeded
              the targets limit.
          expr: |
            increase(prometheus_target_scrape_pool_exceeded_target_limit_total{job="prometheus-k8s",namespace="monitoring"}[5m]) > 0
          for: 15m
          labels:
            severity: warning
        - alert: PrometheusLabelLimitHit
          annotations:
            description: Prometheus {{$labels.namespace}}/{{$labels.pod}} has dropped {{
              printf "%.0f" $value }} targets because some samples exceeded the configured
              label_limit, label_name_length_limit or label_value_length_limit.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheuslabellimithit
            summary: Prometheus has dropped targets because some scrape configs have exceeded
              the labels limit.
          expr: |
            increase(prometheus_target_scrape_pool_exceeded_label_limits_total{job="prometheus-k8s",namespace="monitoring"}[5m]) > 0
          for: 15m
          labels:
            severity: warning
        - alert: PrometheusScrapeBodySizeLimitHit
          annotations:
            description: Prometheus {{$labels.namespace}}/{{$labels.pod}} has failed {{
              printf "%.0f" $value }} scrapes in the last 5m because some targets exceeded
              the configured body_size_limit.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheusscrapebodysizelimithit
            summary: Prometheus has dropped some targets that exceeded body size limit.
          expr: |
            increase(prometheus_target_scrapes_exceeded_body_size_limit_total{job="prometheus-k8s",namespace="monitoring"}[5m]) > 0
          for: 15m
          labels:
            severity: warning
        - alert: PrometheusScrapeSampleLimitHit
          annotations:
            description: Prometheus {{$labels.namespace}}/{{$labels.pod}} has failed {{
              printf "%.0f" $value }} scrapes in the last 5m because some targets exceeded
              the configured sample_limit.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheusscrapesamplelimithit
            summary: Prometheus has failed scrapes that have exceeded the configured sample
              limit.
          expr: |
            increase(prometheus_target_scrapes_exceeded_sample_limit_total{job="prometheus-k8s",namespace="monitoring"}[5m]) > 0
          for: 15m
          labels:
            severity: warning
        - alert: PrometheusTargetSyncFailure
          annotations:
            description: '{{ printf "%.0f" $value }} targets in Prometheus {{$labels.namespace}}/{{$labels.pod}}
              have failed to sync because invalid configuration was supplied.'
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheustargetsyncfailure
            summary: Prometheus has failed to sync targets.
          expr: |
            increase(prometheus_target_sync_failed_total{job="prometheus-k8s",namespace="monitoring"}[30m]) > 0
          for: 5m
          labels:
            severity: critical
        - alert: PrometheusHighQueryLoad
          annotations:
            description: Prometheus {{$labels.namespace}}/{{$labels.pod}} query API has
              less than 20% available capacity in its query engine for the last 15 minutes.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheushighqueryload
            summary: Prometheus is reaching its maximum capacity serving concurrent requests.
          expr: |
            avg_over_time(prometheus_engine_queries{job="prometheus-k8s",namespace="monitoring"}[5m]) / max_over_time(prometheus_engine_queries_concurrent_max{job="prometheus-k8s",namespace="monitoring"}[5m]) > 0.8
          for: 15m
          labels:
            severity: warning
        - alert: PrometheusErrorSendingAlertsToAnyAlertmanager
          annotations:
            description: '{{ printf "%.1f" $value }}% minimum errors while sending alerts
              from Prometheus {{$labels.namespace}}/{{$labels.pod}} to any Alertmanager.'
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheuserrorsendingalertstoanyalertmanager
            summary: Prometheus encounters more than 3% errors sending alerts to any Alertmanager.
          expr: |
            min without (alertmanager) (
              rate(prometheus_notifications_errors_total{job="prometheus-k8s",namespace="monitoring",alertmanager!~``}[5m])
            /
              rate(prometheus_notifications_sent_total{job="prometheus-k8s",namespace="monitoring",alertmanager!~``}[5m])
            )
            * 100
            > 3
          for: 15m
          labels:
            severity: critical
    monitoring-prometheus-operator-rules-34f0ecfe-32b1-4642-9595-50d1bc890162.yaml: |
      groups:
      - name: prometheus-operator
        rules:
        - alert: PrometheusOperatorListErrors
          annotations:
            description: Errors while performing List operations in controller {{$labels.controller}}
              in {{$labels.namespace}} namespace.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus-operator/prometheusoperatorlisterrors
            summary: Errors while performing list operations in controller.
          expr: |
            (sum by (cluster,controller,namespace) (rate(prometheus_operator_list_operations_failed_total{job="prometheus-operator",namespace="monitoring"}[10m])) / sum by (cluster,controller,namespace) (rate(prometheus_operator_list_operations_total{job="prometheus-operator",namespace="monitoring"}[10m]))) > 0.4
          for: 15m
          labels:
            severity: warning
        - alert: PrometheusOperatorWatchErrors
          annotations:
            description: Errors while performing watch operations in controller {{$labels.controller}}
              in {{$labels.namespace}} namespace.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus-operator/prometheusoperatorwatcherrors
            summary: Errors while performing watch operations in controller.
          expr: |
            (sum by (cluster,controller,namespace) (rate(prometheus_operator_watch_operations_failed_total{job="prometheus-operator",namespace="monitoring"}[5m])) / sum by (cluster,controller,namespace) (rate(prometheus_operator_watch_operations_total{job="prometheus-operator",namespace="monitoring"}[5m]))) > 0.4
          for: 15m
          labels:
            severity: warning
        - alert: PrometheusOperatorSyncFailed
          annotations:
            description: Controller {{ $labels.controller }} in {{ $labels.namespace }}
              namespace fails to reconcile {{ $value }} objects.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus-operator/prometheusoperatorsyncfailed
            summary: Last controller reconciliation failed
          expr: |
            min_over_time(prometheus_operator_syncs{status="failed",job="prometheus-operator",namespace="monitoring"}[5m]) > 0
          for: 10m
          labels:
            severity: warning
        - alert: PrometheusOperatorReconcileErrors
          annotations:
            description: '{{ $value | humanizePercentage }} of reconciling operations failed
              for {{ $labels.controller }} controller in {{ $labels.namespace }} namespace.'
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus-operator/prometheusoperatorreconcileerrors
            summary: Errors while reconciling objects.
          expr: |
            (sum by (cluster,controller,namespace) (rate(prometheus_operator_reconcile_errors_total{job="prometheus-operator",namespace="monitoring"}[5m]))) / (sum by (cluster,controller,namespace) (rate(prometheus_operator_reconcile_operations_total{job="prometheus-operator",namespace="monitoring"}[5m]))) > 0.1
          for: 10m
          labels:
            severity: warning
        - alert: PrometheusOperatorStatusUpdateErrors
          annotations:
            description: '{{ $value | humanizePercentage }} of status update operations
              failed for {{ $labels.controller }} controller in {{ $labels.namespace }}
              namespace.'
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus-operator/prometheusoperatorstatusupdateerrors
            summary: Errors while updating objects status.
          expr: |
            (sum by (cluster,controller,namespace) (rate(prometheus_operator_status_update_errors_total{job="prometheus-operator",namespace="monitoring"}[5m]))) / (sum by (cluster,controller,namespace) (rate(prometheus_operator_status_update_operations_total{job="prometheus-operator",namespace="monitoring"}[5m]))) > 0.1
          for: 10m
          labels:
            severity: warning
        - alert: PrometheusOperatorNodeLookupErrors
          annotations:
            description: Errors while reconciling Prometheus in {{ $labels.namespace }}
              Namespace.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus-operator/prometheusoperatornodelookuperrors
            summary: Errors while reconciling Prometheus.
          expr: |
            rate(prometheus_operator_node_address_lookup_errors_total{job="prometheus-operator",namespace="monitoring"}[5m]) > 0.1
          for: 10m
          labels:
            severity: warning
        - alert: PrometheusOperatorNotReady
          annotations:
            description: Prometheus operator in {{ $labels.namespace }} namespace isn't
              ready to reconcile {{ $labels.controller }} resources.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus-operator/prometheusoperatornotready
            summary: Prometheus operator not ready
          expr: |
            min by (cluster,controller,namespace) (max_over_time(prometheus_operator_ready{job="prometheus-operator",namespace="monitoring"}[5m]) == 0)
          for: 5m
          labels:
            severity: warning
        - alert: PrometheusOperatorRejectedResources
          annotations:
            description: Prometheus operator in {{ $labels.namespace }} namespace rejected
              {{ printf "%0.0f" $value }} {{ $labels.controller }}/{{ $labels.resource }}
              resources.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus-operator/prometheusoperatorrejectedresources
            summary: Resources rejected by Prometheus operator
          expr: |
            min_over_time(prometheus_operator_managed_resources{state="rejected",job="prometheus-operator",namespace="monitoring"}[5m]) > 0
          for: 5m
          labels:
            severity: warning
      - name: config-reloaders
        rules:
        - alert: ConfigReloaderSidecarErrors
          annotations:
            description: |-
              Errors encountered while the {{$labels.pod}} config-reloader sidecar attempts to sync config in {{$labels.namespace}} namespace.
              As a result, configuration for service running in {{$labels.pod}} may be stale and cannot be updated anymore.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus-operator/configreloadersidecarerrors
            summary: config-reloader sidecar has not had a successful reload for 10m
          expr: |
            max_over_time(reloader_last_reload_successful{namespace=~".+"}[5m]) == 0
          for: 10m
          labels:
            severity: warning
  kind: ConfigMap
  metadata:
    creationTimestamp: "2024-11-25T14:42:23Z"
    labels:
      managed-by: prometheus-operator
      prometheus-name: k8s
    name: prometheus-k8s-rulefiles-0
    namespace: monitoring
    ownerReferences:
    - apiVersion: monitoring.coreos.com/v1
      blockOwnerDeletion: true
      controller: true
      kind: Prometheus
      name: k8s
      uid: 6bfd9ca3-d009-475a-b1e2-03353dd00f9a
    resourceVersion: "3040307"
    uid: 6f53e02b-38be-4167-a541-8e54b44e1092
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIDBTCCAe2gAwIBAgIIICDkzy3Yn38wDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE
      AxMKa3ViZXJuZXRlczAeFw0yNDExMTIxMDAzMThaFw0zNDExMTAxMDA4MThaMBUx
      EzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
      AoIBAQD3qrsFOcZRTmdJ2ajpsN+M2JJbqluLNcCKdKDSR8UjLurwMft775xZfXS8
      O80gmPDusXbSXS1vlRHV9DQH12fAGKUDWMJLOj7lkDyGwbBTCvJtL6y+4XlMHCDt
      hvNxH9a6b6cC1O+mHbOYkWmrCltcA8FbHFMmpX9LPFgP5+L4eiCQY4aCbJqZJ2aP
      9sj9DVQfhasGF31hQhXsYygk0bcOsgUq/zkIqPRWHTQetRPlk0Q9Sbli6AQ3cmil
      8sNCGYmrhtwaVsZauHIV1ue9KC0vOpLJ/4uEXjpBiYaVf4zHe0i2DshQiQ7yeX+M
      HukPrWZN84XAnwIxUrRkmr1i6sPvAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP
      BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBQliZ1HZFlvAe+NSYoGEPLseiqCWzAV
      BgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQDIHTLjCwzG
      /JLkJx2M31isIosHQv78GyLXekYRYLW/edTEjZ8/PKqWbxZtOG44ULUP8yLU/Wg6
      FpFiqsP0JqMpAruOvR8UlJXax5K6KEO5AD3Nmp+DvRQVlKt316GoIcbCd7FQDZxD
      yH8uRWnfTGYHPOC7tcyUvcxQlK6ng22lTfRmdX9NerUJ860VaxGKhiusi6zHhNBi
      2cFBfrCRSCzu6HHmXitDLYyNIKP2KiiZwRmmoSYg6pgDvNHx0e63pY6ULE4gGiRD
      ZWs+kgjjjtaEOcXW4HOK1B47E0RcM56/EgMO2Hg9QAPQnwfx/AI7LC937SqBej27
      ld0gkDlez21X
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    annotations:
      kubernetes.io/description: Contains a CA bundle that can be used to verify the
        kube-apiserver when using internal endpoints such as the internal service
        IP or kubernetes.default.svc. No other usage is guaranteed across distributions
        of Kubernetes clusters.
    creationTimestamp: "2025-05-26T10:46:46Z"
    name: kube-root-ca.crt
    namespace: n8n
    resourceVersion: "31968910"
    uid: 81af7454-32de-424e-99b5-bc511c413d1a
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIDBTCCAe2gAwIBAgIIICDkzy3Yn38wDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE
      AxMKa3ViZXJuZXRlczAeFw0yNDExMTIxMDAzMThaFw0zNDExMTAxMDA4MThaMBUx
      EzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
      AoIBAQD3qrsFOcZRTmdJ2ajpsN+M2JJbqluLNcCKdKDSR8UjLurwMft775xZfXS8
      O80gmPDusXbSXS1vlRHV9DQH12fAGKUDWMJLOj7lkDyGwbBTCvJtL6y+4XlMHCDt
      hvNxH9a6b6cC1O+mHbOYkWmrCltcA8FbHFMmpX9LPFgP5+L4eiCQY4aCbJqZJ2aP
      9sj9DVQfhasGF31hQhXsYygk0bcOsgUq/zkIqPRWHTQetRPlk0Q9Sbli6AQ3cmil
      8sNCGYmrhtwaVsZauHIV1ue9KC0vOpLJ/4uEXjpBiYaVf4zHe0i2DshQiQ7yeX+M
      HukPrWZN84XAnwIxUrRkmr1i6sPvAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP
      BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBQliZ1HZFlvAe+NSYoGEPLseiqCWzAV
      BgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQDIHTLjCwzG
      /JLkJx2M31isIosHQv78GyLXekYRYLW/edTEjZ8/PKqWbxZtOG44ULUP8yLU/Wg6
      FpFiqsP0JqMpAruOvR8UlJXax5K6KEO5AD3Nmp+DvRQVlKt316GoIcbCd7FQDZxD
      yH8uRWnfTGYHPOC7tcyUvcxQlK6ng22lTfRmdX9NerUJ860VaxGKhiusi6zHhNBi
      2cFBfrCRSCzu6HHmXitDLYyNIKP2KiiZwRmmoSYg6pgDvNHx0e63pY6ULE4gGiRD
      ZWs+kgjjjtaEOcXW4HOK1B47E0RcM56/EgMO2Hg9QAPQnwfx/AI7LC937SqBej27
      ld0gkDlez21X
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    annotations:
      kubernetes.io/description: Contains a CA bundle that can be used to verify the
        kube-apiserver when using internal endpoints such as the internal service
        IP or kubernetes.default.svc. No other usage is guaranteed across distributions
        of Kubernetes clusters.
    creationTimestamp: "2025-05-27T09:36:30Z"
    name: kube-root-ca.crt
    namespace: nginx-proxy-manager
    resourceVersion: "32186914"
    uid: 79366119-b55d-479e-80c1-a847c596370e
kind: List
metadata:
  resourceVersion: ""
